<% content_for :title, "Customer Patterns - #{@month_name}" %>

<div class="container-fluid">
  <div class="row" style="margin-top: 2rem;">
    <div class="col-12">
<div class="page-header">
  <div class="d-flex justify-content-between align-items-center">
    <div>
      <h1 class="h2 mb-2">
        <i class="fas fa-chart-line me-3"></i>Customer Patterns Analysis
      </h1>
      <p class="text-muted mb-0">Monthly delivery pattern analysis for <%= @month_name %></p>
    </div>
    <div class="d-flex gap-2 flex-wrap align-items-center">
      <!-- Complete All Till Today Button -->
      <button type="button" class="btn btn-success complete-all-btn"
              id="completeAllTillTodayBtn"
              data-month="<%= @current_month %>"
              data-year="<%= @current_year %>"
              data-delivery-person-id="<%= @delivery_person_id %>"
              style="display: none;">
        <span class="btn-text">
          <i class="fas fa-check-circle me-2"></i>Complete All Till Today (<span id="pending-count-display">0</span>)
        </span>
        <span class="btn-loader" style="display: none;">
          <div class="spinner-border spinner-border-sm text-white me-2" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          Processing...
        </span>
      </button>

      <!-- Filters Form -->
      <%= form_with url: customer_patterns_path, method: :get, local: true, class: "d-flex gap-2 flex-wrap" do |form| %>
        <!-- Delivery Person Filter -->
        <%= form.select :delivery_person_id,
            options_from_collection_for_select(@delivery_people, :id, :name, @delivery_person_id),
            { prompt: "🚚 All Delivery People" },
            { class: "form-select", style: "width: auto; min-width: 200px;" } %>

        <!-- Month/Year Selector -->
        <%= form.select :month, options_for_select((1..12).map { |m| [Date::MONTHNAMES[m], m] }, @current_month),
            { prompt: "Select Month" }, { class: "form-select", style: "width: auto;" } %>
        <%= form.select :year, options_for_select((2023..Date.current.year+1).map { |y| [y, y] }, @current_year),
            { prompt: "Select Year" }, { class: "form-select", style: "width: auto;" } %>
        <%= form.submit "🔍 Filter", class: "btn btn-primary", id: "filter-submit-btn" %>
      <% end %>
    </div>
  </div>
</div>

<!-- Stats Cards -->
<div class="row mb-4">
  <div class="col-md-3 mb-3">
    <div class="stats-card">
      <div class="stats-icon">
        <i class="fas fa-users"></i>
      </div>
      <div class="stats-number"><%= @total_customers %></div>
      <div class="stats-label">Total Customers</div>
    </div>
  </div>
  <div class="col-md-3 mb-3">
    <div class="stats-card">
      <div class="stats-icon">
        <i class="fas fa-check-circle"></i>
      </div>
      <div class="stats-number"><%= @regular_count %></div>
      <div class="stats-label">Regular Customers</div>
    </div>
  </div>
  <div class="col-md-3 mb-3">
    <div class="stats-card">
      <div class="stats-icon">
        <i class="fas fa-clock"></i>
      </div>
      <div class="stats-number"><%= @interval_count %></div>
      <div class="stats-label">Interval Customers</div>
    </div>
  </div>
  <div class="col-md-3 mb-3">
    <div class="stats-card">
      <div class="stats-icon">
        <i class="fas fa-exclamation-triangle"></i>
      </div>
      <div class="stats-number"><%= @irregular_count %></div>
      <div class="stats-label">Irregular Customers</div>
    </div>
  </div>
</div>

  <!-- Filter Buttons -->
  <div class="row mb-3">
    <div class="col-12">
      <div class="d-flex gap-2 flex-wrap">
        <%= link_to customer_patterns_path(month: @current_month, year: @current_year, delivery_person_id: @delivery_person_id),
            class: "btn #{'btn-primary' if params[:pattern].blank?} #{'btn-outline-primary' unless params[:pattern].blank?}" do %>
          All Patterns (<%= @total_customers %>)
        <% end %>
        <%= link_to customer_patterns_path(month: @current_month, year: @current_year, delivery_person_id: @delivery_person_id, pattern: 'regular'),
            class: "btn #{'btn-success' if params[:pattern] == 'regular'} #{'btn-outline-success' unless params[:pattern] == 'regular'}" do %>
          🟢 Regular (<%= @regular_count %>)
        <% end %>
        <%= link_to customer_patterns_path(month: @current_month, year: @current_year, delivery_person_id: @delivery_person_id, pattern: 'interval'),
            class: "btn #{'btn-warning' if params[:pattern] == 'interval'} #{'btn-outline-warning' unless params[:pattern] == 'interval'}" do %>
          🟡 Interval (<%= @interval_count %>)
        <% end %>
        <%= link_to customer_patterns_path(month: @current_month, year: @current_year, delivery_person_id: @delivery_person_id, pattern: 'irregular'),
            class: "btn #{'btn-danger' if params[:pattern] == 'irregular'} #{'btn-outline-danger' unless params[:pattern] == 'irregular'}" do %>
          🔴 Irregular (<%= @irregular_count %>)
        <% end %>
      </div>
    </div>
  </div>

  <!-- Customer Patterns Table -->
  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">
            Customer Delivery Patterns
            <% if params[:pattern].present? %>
              - <%= params[:pattern].titleize %> Customers
            <% end %>
          </h5>
        </div>
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <thead class="table-light">
                <tr>
                  <th class="text-nowrap fw-bold" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-user me-1"></i>CUSTOMER NAME
                  </th>
                  <th class="text-nowrap fw-bold" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-truck me-1"></i>DELIVERY PERSON
                  </th>
                  <th class="text-nowrap fw-bold" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-tint me-1"></i>LITERS & PRODUCT
                  </th>
                  <th class="text-nowrap fw-bold" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-calendar me-1"></i>DAYS/ASSIGNMENTS
                  </th>
                  <th class="text-nowrap fw-bold" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-rupee-sign me-1"></i>AMOUNT
                  </th>
                  <th class="text-nowrap fw-bold" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-chart-line me-1"></i>PATTERN & SCHEDULE
                  </th>
                  <th class="text-nowrap fw-bold text-center" style="background-color: #7b68ee; color: white;">
                    <i class="fas fa-cogs me-1"></i>ACTION
                  </th>
                </tr>
              </thead>
              <tbody>
                <% if @customer_patterns.any? %>
                  <% @customer_patterns.each do |data| %>
                    <tr class="customer-pattern-row">
                      <td class="align-middle">
                        <div class="d-flex align-items-center">
                          <div class="avatar-circle me-3">
                            <%= data[:customer].name.first.upcase %>
                          </div>
                          <div class="flex-grow-1">
                            <div class="fw-bold text-dark mb-1"><%= data[:customer].name %></div>
                            <small class="text-muted">ID: <%= data[:customer].id %></small>
                          </div>
                        </div>
                      </td>
                      <td class="align-middle text-center">
                        <span class="badge bg-info">
                          <%= data[:delivery_person_name] %>
                        </span>
                      </td>
                      <td class="align-middle text-center">
                        <div class="d-flex flex-column align-items-center gap-1">
                          <span class="fw-bold text-primary"><%= data[:total_liters] %> L</span>
                          <% if data[:primary_product] %>
                            <span class="badge bg-secondary" style="font-size: 0.7rem;">
                              <%= truncate(data[:primary_product].name, length: 12) %>
                            </span>
                          <% else %>
                            <span class="text-muted small">No product</span>
                          <% end %>
                        </div>
                      </td>
                      <td class="align-middle text-center">
                        <div class="d-flex flex-column align-items-center gap-1">
                          <span class="badge bg-primary">
                            <%= data[:days_delivered] %> DAYS
                          </span>
                          <small class="text-muted" style="font-size: 0.7rem;">
                            <%= data[:total_assignments] %> assignments
                          </small>
                        </div>
                      </td>
                      <td class="align-middle text-center">
                        <span class="fw-bold text-success">
                          ₹<%= number_with_precision(data[:estimated_amount] || 0, precision: 0) %>
                        </span>
                      </td>
                      <td class="align-middle text-center">
                        <div class="d-flex flex-column align-items-center gap-1">
                          <% case data[:pattern] %>
                          <% when 'regular' %>
                            <span class="badge bg-success">REGULAR</span>
                          <% when 'interval' %>
                            <span class="badge bg-warning text-dark">INTERVAL</span>
                          <% when 'irregular' %>
                            <span class="badge bg-danger">IRREGULAR</span>
                          <% end %>
                          <small class="text-muted text-center" style="font-size: 0.7rem;">
                            <%= truncate(data[:pattern_description], length: 20) %>
                          </small>
                        </div>
                      </td>
                      <td class="align-middle text-center">
                        <div class="d-flex gap-1 justify-content-center flex-wrap">
                          <%= link_to customer_path(data[:customer]),
                              class: "btn btn-sm btn-outline-primary",
                              title: "View Customer",
                              data: { bs_toggle: "tooltip" } do %>
                            <i class="fas fa-user"></i>
                          <% end %>

                          <button type="button"
                                  class="btn btn-sm btn-outline-success delivery-modal-btn"
                                  data-bs-target="#deliveryModal"
                                  data-customer-id="<%= data[:customer].id %>"
                                  data-customer-name="<%= data[:customer].name %>"
                                  data-month="<%= @current_month %>"
                                  data-year="<%= @current_year %>"
                                  title="View Deliveries">
                            <i class="fas fa-truck"></i>
                          </button>
                        </div>
                      </td>
                    </tr>
                  <% end %>
                <% else %>
                  <tr>
                    <td colspan="8" class="text-center py-4">
                      <div class="py-4">
                        <i class="fas fa-search fs-1 text-muted mb-3"></i>
                        <h5 class="text-muted">No customer data found for <%= @month_name %></h5>
                        <p class="text-muted">Try selecting a different month or check if there are any completed deliveries.</p>
                      </div>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
/* Enhanced Page Header Styles - Consistent with Products Page */
.page-header {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-radius: 20px;
  padding: 2.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
  position: relative;
  overflow: hidden;
}

.page-header::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  animation: rotate 20s linear infinite;
}

.page-header h1 {
  color: white !important;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 2;
}

.page-header p {
  color: rgba(255, 255, 255, 0.9) !important;
  position: relative;
  z-index: 2;
}

.page-header .btn {
  position: relative;
  z-index: 2;
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.15) !important;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.page-header .btn:hover {
  background: rgba(255, 255, 255, 0.25) !important;
  transform: translateY(-2px);
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhanced Stats Cards */
.stats-card {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(102, 126, 234, 0.1);
}

.stats-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.stats-card::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
  border-radius: 0 0 0 60px;
}

.stats-card:hover {
  box-shadow: 0 20px 60px rgba(102, 126, 234, 0.15);
  transform: translateY(-8px) scale(1.02);
}

.stats-card .stats-icon {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 50px;
  height: 50px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 20px;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  z-index: 2;
}

.stats-card .stats-number {
  font-size: 2.5rem;
  font-weight: 800;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  line-height: 1;
  margin-bottom: 0.5rem;
  position: relative;
  z-index: 2;
}

.stats-card .stats-label {
  color: #6b7280;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.8rem;
  position: relative;
  z-index: 2;
}

/* CSS Variables for Consistent Styling */
:root {
  --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --text-primary: #1f2937;
  --text-secondary: #6b7280;
}
  .avatar-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 14px;
  }

  .card {
    border: none;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    border-radius: 0.75rem;
  }

  .card-header {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-bottom: 1px solid #dee2e6;
    border-radius: 0.75rem 0.75rem 0 0 !important;
  }

  .table th {
    font-weight: 700;
    color: white;
    border: none;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-size: 0.8rem;
    padding: 1rem 0.75rem;
  }

  .table td {
    padding: 1rem 0.75rem;
    border-top: 1px solid #e9ecef;
    vertical-align: middle;
  }

  .customer-pattern-row {
    border-bottom: 1px solid #dee2e6;
  }

  .customer-pattern-row:hover {
    background-color: #f8f9fa;
  }

  .customer-pattern-row td {
    padding: 0.75rem;
    vertical-align: middle;
    border-color: #dee2e6;
  }

  /* Ensure table width and proper column distribution */
  .table {
    width: 100%;
  }

  /* Simple modal styles - no conflicts */
  .modal-open {
    padding-right: 0 !important;
  }

  /* Responsive table adjustments */
  @media (max-width: 1200px) {
    .table {
      font-size: 0.9rem;
    }

    .customer-pattern-row td {
      padding: 0.6rem;
    }
  }

  @media (max-width: 768px) {
    .table {
      font-size: 0.8rem;
    }

    .customer-pattern-row td {
      padding: 0.5rem;
    }
  }

  .badge {
    font-size: 0.75rem;
    border-radius: 15px;
    font-weight: 600;
    padding: 0.5rem 1rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .badge:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
  }

  .badge.bg-info {
    background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%) !important;
  }

  .badge.bg-success {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;
  }

  .badge.bg-warning {
    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%) !important;
  }

  .badge.bg-danger {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%) !important;
  }

  .badge.bg-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  }

  .badge.bg-secondary {
    background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%) !important;
  }

  .btn {
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .btn-outline-primary {
    border: 2px solid #667eea;
    color: #667eea;
    background: transparent;
  }

  .btn-outline-primary:hover {
    background: #667eea;
    color: white;
    border-color: #667eea;
  }

  .btn-outline-success {
    border: 2px solid #10b981;
    color: #10b981;
    background: transparent;
  }

  .btn-outline-success:hover {
    background: #10b981;
    color: white;
    border-color: #10b981;
  }

  .form-select {
    border-radius: 0.5rem;
  }

  .complete-all-btn {
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(40, 167, 69, 0.3);
    border: none;
    font-weight: 600;
  }

  .complete-all-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(40, 167, 69, 0.4);
  }

  .complete-all-btn:disabled {
    transform: none;
    opacity: 0.8;
  }

  .complete-all-btn .btn-loader {
    animation: pulse 1.5s infinite;
  }

  @keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.7; }
    100% { opacity: 1; }
  }

  .alert-success.shadow-sm {
    animation: slideInRight 0.5s ease-out;
  }

  @keyframes slideInRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  /* Big Attractive Loader Styles */
  .big-loader-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 10000;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .loader-backdrop {
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.9), rgba(40, 167, 69, 0.1));
    backdrop-filter: blur(15px);
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: fadeIn 0.5s ease-out;
  }

  .loader-content {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    padding: 4rem 3rem;
    border-radius: 30px;
    box-shadow:
      0 30px 80px rgba(0, 0, 0, 0.3),
      0 0 0 1px rgba(255, 255, 255, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
    text-align: center;
    min-width: 420px;
    position: relative;
    overflow: hidden;
    animation: scaleIn 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .loader-content::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(40, 167, 69, 0.1), transparent);
    animation: shimmer 2s infinite;
  }

  .circular-progress {
    position: relative;
    margin: 0 auto 2rem;
    width: 140px;
    height: 140px;
    background: radial-gradient(circle, rgba(40, 167, 69, 0.1), transparent);
    border-radius: 50%;
    padding: 10px;
    box-shadow:
      0 0 30px rgba(40, 167, 69, 0.2),
      inset 0 0 20px rgba(255, 255, 255, 0.1);
  }

  .progress-ring {
    transform: rotate(-90deg);
    filter: drop-shadow(0 0 15px rgba(40, 167, 69, 0.6));
  }

  .progress-ring-circle {
    stroke-dasharray: 326.7;
    stroke-dashoffset: 326.7;
    transition: stroke-dashoffset 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    stroke-linecap: round;
    stroke: url(#progressGradient);
    stroke-width: 6;
  }

  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: radial-gradient(circle, rgba(255, 255, 255, 0.9), rgba(248, 249, 250, 0.8));
    border-radius: 50%;
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }

  .percentage {
    font-size: 1.8rem;
    font-weight: 800;
    background: linear-gradient(135deg, #28a745, #20c997);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: textGlow 2s ease-in-out infinite alternate;
  }

  .loader-icons {
    margin-bottom: 2rem;
    padding: 1rem;
    background: rgba(248, 249, 250, 0.5);
    border-radius: 15px;
    backdrop-filter: blur(10px);
  }

  .icon-row {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 15px;
  }

  .completed-icon {
    color: #28a745;
    font-size: 1.5rem;
    background: rgba(40, 167, 69, 0.1);
    padding: 8px;
    border-radius: 50%;
    animation: bounceIn 0.8s ease, pulse 2s infinite;
    box-shadow: 0 0 15px rgba(40, 167, 69, 0.3);
  }

  .processing-icon {
    color: #007bff;
    font-size: 1.5rem;
    background: rgba(0, 123, 255, 0.1);
    padding: 8px;
    border-radius: 50%;
    box-shadow: 0 0 15px rgba(0, 123, 255, 0.3);
  }

  .pending-icon {
    color: #6c757d;
    font-size: 1.5rem;
    background: rgba(108, 117, 125, 0.1);
    padding: 8px;
    border-radius: 50%;
    opacity: 0.6;
    animation: pending-pulse 1.5s infinite;
  }

  .rotating {
    animation: rotate 2s linear infinite;
  }

  .loader-status h4 {
    background: linear-gradient(135deg, #2c3e50, #34495e);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-weight: 700;
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .status-message {
    color: #495057;
    font-size: 1.1rem;
    font-weight: 500;
    padding: 0.5rem 1rem;
    background: rgba(73, 80, 87, 0.1);
    border-radius: 20px;
    display: inline-block;
  }

  .progress-details {
    margin-top: 1.5rem;
    padding: 1rem;
    background: linear-gradient(135deg, rgba(40, 167, 69, 0.1), rgba(32, 201, 151, 0.1));
    border-radius: 15px;
    border: 1px solid rgba(40, 167, 69, 0.2);
  }

  .progress-details small {
    font-size: 1rem;
    font-weight: 600;
    color: #495057;
  }

  .title-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    margin-bottom: 1rem;
  }

  .rocket-emoji {
    font-size: 2rem;
    animation: rocket-float 2s ease-in-out infinite alternate;
  }

  .progress-numbers {
    font-size: 1.2rem;
    font-weight: 700;
    background: linear-gradient(135deg, #28a745, #20c997);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    padding: 0.5rem;
  }

  @keyframes rocket-float {
    0% { transform: translateY(0px) rotate(-3deg); }
    100% { transform: translateY(-8px) rotate(3deg); }
  }

  .loading-dots {
    display: flex;
    justify-content: center;
    gap: 5px;
    margin-top: 1.5rem;
  }

  .loading-dots span {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #28a745;
    animation: dot-pulse 1.4s infinite both;
  }

  .loading-dots span:nth-child(2) {
    animation-delay: 0.2s;
  }

  .loading-dots span:nth-child(3) {
    animation-delay: 0.4s;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes bounceIn {
    0% {
      opacity: 0;
      transform: scale(0.3);
    }
    50% {
      opacity: 1;
      transform: scale(1.05);
    }
    70% {
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes dot-pulse {
    0%, 80%, 100% {
      transform: scale(0);
      opacity: 0.5;
    }
    40% {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  @keyframes textGlow {
    0% { text-shadow: 0 0 10px rgba(40, 167, 69, 0.5); }
    100% { text-shadow: 0 0 20px rgba(40, 167, 69, 0.8), 0 0 30px rgba(40, 167, 69, 0.3); }
  }

  @keyframes pending-pulse {
    0%, 100% { opacity: 0.6; transform: scale(1); }
    50% { opacity: 0.3; transform: scale(0.95); }
  }

  @keyframes pulse {
    0%, 100% { box-shadow: 0 0 15px rgba(40, 167, 69, 0.3); }
    50% { box-shadow: 0 0 25px rgba(40, 167, 69, 0.6), 0 0 35px rgba(40, 167, 69, 0.2); }
  }

  /* Simple Loader Styles */
  .rotating-icon {
    animation: rotate 2s linear infinite;
  }

  .simple-loader-container {
    max-width: 400px;
    margin: 0 auto;
  }

  .progress-container {
    margin: 1.5rem 0;
  }

  /* Modal width adjustments for better action button display */
  #deliveryAssignmentsModal .modal-xl {
    max-width: 1400px;
  }

  #deliveryAssignmentsModal .table th:last-child,
  #deliveryAssignmentsModal .table td:last-child {
    width: 140px;
    min-width: 140px;
  }

  #deliveryAssignmentsModal .btn-group {
    display: flex;
    gap: 5px;
  }

  #deliveryAssignmentsModal .btn-group .btn {
    flex: 0 0 auto;
    min-width: 35px;
  }

  /* Ensure action buttons don't wrap */
  @media (max-width: 1399px) {
    #deliveryAssignmentsModal .modal-xl {
      max-width: 95vw;
    }
  }

  @media (max-width: 991px) {
    #deliveryAssignmentsModal .table th:last-child,
    #deliveryAssignmentsModal .table td:last-child {
      width: 100px;
      min-width: 100px;
    }

    #deliveryAssignmentsModal .btn-group .btn {
      min-width: 30px;
      padding: 0.25rem 0.4rem;
      font-size: 0.8rem;
    }
  }
</style>

<!-- Modal removed - using direct page links instead -->

<!-- Simple Attractive Loader Modal -->
<div class="modal fade show" id="bigLoaderModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false" style="display: none;">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content border-0 shadow-lg" style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(10px); border-radius: 20px;">
      <div class="modal-body text-center py-5 px-4">
        <div class="simple-loader-container">
          <!-- Animated Icon -->
          <div class="loader-icon-container mb-4">
            <div class="rotating-icon">
              <i class="fas fa-sync-alt" style="font-size: 3rem; color: #28a745;"></i>
            </div>
          </div>

          <!-- Title -->
          <h4 class="mb-3" style="color: #2c3e50; font-weight: 600;">
            🚀 Completing Assignments
          </h4>

          <!-- Progress Bar -->
          <div class="progress-container mb-4">
            <div class="progress" style="height: 12px; border-radius: 10px; background: #e9ecef;">
              <div class="progress-bar progress-bar-striped progress-bar-animated"
                   role="progressbar"
                   style="width: 0%; background: linear-gradient(45deg, #28a745, #20c997); border-radius: 10px;"
                   id="simple-progress-bar">
              </div>
            </div>
            <div class="progress-text mt-2">
              <span class="percentage-simple" style="font-size: 1.2rem; font-weight: bold; color: #28a745;">0%</span>
            </div>
          </div>

          <!-- Status -->
          <p class="status-message-simple mb-3" style="color: #6c757d; font-size: 1rem;">
            Processing pending assignments...
          </p>

          <!-- Counter -->
          <div class="counter-simple" style="background: rgba(40, 167, 69, 0.1); padding: 0.8rem; border-radius: 10px; color: #495057; font-weight: 600;">
            <span id="completed-count-simple">0</span> of <span id="total-count-simple">0</span> completed
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Filter Loading Modal -->
<div class="modal fade" id="filterLoaderModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content border-0 shadow-lg" style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(10px); border-radius: 20px;">
      <div class="modal-body text-center py-5 px-4">
        <div class="simple-loader-container">
          <!-- Animated Icon -->
          <div class="loader-icon-container mb-4">
            <div class="rotating-icon">
              <i class="fas fa-filter" style="font-size: 3rem; color: #007bff;"></i>
            </div>
          </div>

          <!-- Title -->
          <h4 class="mb-3" style="color: #2c3e50; font-weight: 600;">
            🔍 Filtering Data
          </h4>

          <!-- Progress Bar -->
          <div class="progress-container mb-4">
            <div class="progress" style="height: 12px; border-radius: 10px; background: #e9ecef;">
              <div class="progress-bar progress-bar-striped progress-bar-animated"
                   role="progressbar"
                   style="width: 0%; background: linear-gradient(45deg, #007bff, #0056b3); border-radius: 10px;"
                   id="filter-progress-bar">
              </div>
            </div>
            <div class="progress-text mt-2">
              <span class="filter-percentage" style="font-size: 1.2rem; font-weight: bold; color: #007bff;">0%</span>
            </div>
          </div>

          <!-- Status -->
          <p class="filter-status-message" style="color: #6c757d; font-size: 1rem;">
            Loading customer patterns...
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Simple Custom Modal -->
<div id="deliveryModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop" onclick="closeDeliveryModal()"></div>
  <div class="custom-modal-content">
    <div class="custom-modal-header">
      <h5 class="custom-modal-title">
        <i class="fas fa-truck me-2"></i>
        <span id="modalCustomerName">Delivery Assignments</span>
      </h5>
      <button type="button" class="custom-close-btn" onclick="closeDeliveryModal()">×</button>
    </div>
    <div class="custom-modal-body" id="modalContent">
      <div class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3">Loading assignments...</p>
      </div>
    </div>
    <div class="custom-modal-footer">
      <button type="button" class="btn btn-secondary" onclick="closeDeliveryModal()">Close</button>
    </div>
  </div>
</div>

<!-- Small Edit Modal -->
<div id="editModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop" onclick="closeEditModal()"></div>
  <div class="custom-edit-modal-content">
    <div class="custom-modal-header">
      <h5 class="custom-modal-title">
        <i class="fas fa-edit me-2"></i>
        <span id="editModalTitle">Edit Assignment</span>
      </h5>
      <button type="button" class="custom-close-btn" onclick="closeEditModal()">×</button>
    </div>
    <div class="custom-modal-body" id="editModalContent">
      <div class="text-center py-3">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Loading edit form...</p>
      </div>
    </div>
  </div>
</div>

<style>
.bg-gradient-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.modal-xl {
  max-width: 1200px;
}

.stats-card {
  border: none;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  transition: transform 0.2s;
}

.stats-card:hover {
  transform: translateY(-2px);
}

.table-responsive {
  border-radius: 8px;
  overflow: hidden;
}

/* Modal fixes for blank screen issue */
.modal {
  z-index: 1055;
}

.modal-backdrop {
  z-index: 1050;
  background-color: rgba(0, 0, 0, 0.5);
}

.modal.show .modal-dialog {
  transform: none;
}

.modal-open {
  overflow: hidden;
  padding-right: 0 !important;
}

.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto;
}

/* Ensure modal content is visible */
.modal-content {
  background-color: #fff;
  border: 1px solid rgba(0,0,0,.2);
  border-radius: .3rem;
  box-shadow: 0 .25rem .5rem rgba(0,0,0,.5);
  pointer-events: auto;
  position: relative;
  width: 100%;
}

/* Custom Modal Styles */
.custom-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 80px 0 20px 280px; /* Top padding for nav bar, left padding for sidebar */
}

.custom-modal-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  cursor: pointer;
}

.custom-modal-content {
  position: relative;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  width: 100%;
  max-width: 1400px;
  max-height: 85%;
  overflow: hidden;
  z-index: 10001;
  animation: modalFadeIn 0.3s ease-out;
  margin: 0 20px; /* Add some margin from screen edges */
}

/* Responsive adjustments for modal positioning */
@media (max-width: 1200px) {
  .custom-modal {
    padding: 60px 0 20px 200px; /* Smaller sidebar on medium screens */
  }
}

@media (max-width: 992px) {
  .custom-modal {
    padding: 60px 20px 20px 20px; /* No sidebar on smaller screens */
  }

  .custom-modal-content {
    max-width: 95%;
  }
}

@media (max-width: 768px) {
  .custom-modal {
    padding: 80px 10px 20px 10px; /* Mobile spacing */
  }

  .custom-modal-content {
    max-width: 98%;
    margin: 0 10px;
  }
}

.custom-modal-header {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 1rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 10px 10px 0 0;
}

.custom-modal-title {
  margin: 0;
  font-size: 1.2rem;
  font-weight: 600;
}

.custom-close-btn {
  background: none;
  border: none;
  color: white;
  font-size: 2rem;
  cursor: pointer;
  padding: 0;
  line-height: 1;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s;
}

.custom-close-btn:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.custom-modal-body {
  padding: 1.5rem;
  max-height: 70vh;
  overflow-y: auto;
}

.custom-modal-footer {
  padding: 1rem 1.5rem;
  border-top: 1px solid #e9ecef;
  display: flex;
  justify-content: flex-end;
  background-color: #f8f9fa;
  border-radius: 0 0 10px 10px;
}

@keyframes modalFadeIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Prevent body scroll when modal is open */
body.modal-open {
  overflow: hidden !important;
  position: fixed !important;
  width: 100% !important;
}

/* Ensure normal body behavior when no modal */
body:not(.modal-open) {
  overflow: auto !important;
  position: static !important;
}

/* Small Edit Modal Styles */
.custom-edit-modal-content {
  position: relative;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  width: 100%;
  max-width: 600px;
  max-height: 80%;
  overflow: hidden;
  z-index: 10001;
  animation: modalFadeIn 0.3s ease-out;
  margin: 0 20px; /* Add some margin from screen edges */
}
</style>

<script>
// Simple modal functions
function openDeliveryModal(customerId, customerName, month, year) {
  console.log(`Opening modal for ${customerName}`);

  // Update title
  document.getElementById('modalCustomerName').textContent = `${customerName} - Deliveries`;

  // Show modal
  const modal = document.getElementById('deliveryModal');
  modal.style.display = 'flex';
  document.body.classList.add('modal-open');

  // Load content
  loadModalContent(customerId, customerName, month, year);
}

function closeDeliveryModal() {
  const modal = document.getElementById('deliveryModal');
  modal.style.display = 'none';
  document.body.classList.remove('modal-open');

  // Ensure body returns to normal state
  document.body.style.overflow = '';
  document.body.style.position = '';
  document.body.style.width = '';

  console.log('Modal closed');
}

// Add event listeners when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
  // Ensure clean page state on load
  document.body.classList.remove('modal-open');
  document.body.style.overflow = '';
  document.body.style.position = '';
  document.body.style.width = '';

  // Remove any potential style attributes that might interfere
  document.documentElement.style.overflow = '';
  document.documentElement.style.position = '';

  // Add click handlers to all delivery buttons
  const deliveryButtons = document.querySelectorAll('.delivery-modal-btn');
  deliveryButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();

      const customerId = this.getAttribute('data-customer-id');
      const customerName = this.getAttribute('data-customer-name');
      const month = this.getAttribute('data-month');
      const year = this.getAttribute('data-year');

      openDeliveryModal(customerId, customerName, month, year);
    });
  });

  // Close modal on Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeDeliveryModal();
      closeEditModal();
    }
  });
});

// Global modal functions for assignment actions
window.editAssignment = function(id) {
  console.log('Editing assignment:', id);

  // Open small edit modal
  const editModal = document.getElementById('editModal');
  const editModalContent = document.getElementById('editModalContent');
  const editModalTitle = document.getElementById('editModalTitle');

  // Update title
  editModalTitle.textContent = `Edit Assignment #${id}`;

  // Show modal
  editModal.style.display = 'flex';
  document.body.classList.add('modal-open');

  // Load edit form
  loadEditForm(id);
};

function loadEditForm(id) {
  const editModalContent = document.getElementById('editModalContent');

  // Show loading spinner
  editModalContent.innerHTML = `
    <div class="text-center py-3">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-2">Loading edit form...</p>
    </div>
  `;

  fetch(`/assign_deliveries/${id}/edit.json`, {
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      editModalContent.innerHTML = data.html;
    })
    .catch(error => {
      console.error('Error loading edit form:', error);
      editModalContent.innerHTML = `
        <div class="alert alert-danger text-center">
          <i class="fas fa-exclamation-triangle me-2"></i>
          Error loading edit form. <button class="btn btn-link p-0" onclick="closeEditModal()">Close</button>
        </div>
      `;
    });
}

window.closeEditModal = function() {
  const editModal = document.getElementById('editModal');
  editModal.style.display = 'none';
  document.body.classList.remove('modal-open');

  // Ensure body returns to normal state
  document.body.style.overflow = '';
  document.body.style.position = '';
  document.body.style.width = '';

  console.log('Edit modal closed');
};

window.deleteAssignment = function(id) {
  if (confirm('Are you sure you want to delete this assignment? This action cannot be undone.')) {
    const button = event.target.closest('button');
    const originalContent = button.innerHTML;
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
    button.disabled = true;

    console.log('Deleting assignment:', id);

    fetch(`/assign_deliveries/${id}.json`, {
      method: 'DELETE',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      }
    })
    .then(response => {
      console.log('Delete response status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Delete response data:', data);
      if (data.success) {
        window.showSimpleToast(data.message || 'Assignment deleted successfully!', 'success');
        window.reloadCurrentModal();
      } else {
        window.showSimpleToast(data.message || 'Error deleting assignment', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      window.showSimpleToast('Error deleting assignment: ' + error.message, 'error');
    })
    .finally(() => {
      button.innerHTML = originalContent;
      button.disabled = false;
    });
  }
};

window.completeAssignment = function(id) {
  if (confirm('Mark this assignment as completed?')) {
    const button = event.target.closest('button');
    const originalContent = button.innerHTML;
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
    button.disabled = true;

    console.log('Completing assignment:', id);

    fetch(`/assign_deliveries/${id}/complete.json`, {
      method: 'PATCH',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      }
    })
    .then(response => {
      console.log('Complete response status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Complete response data:', data);
      if (data.success) {
        window.showSimpleToast(data.message || 'Assignment completed successfully!', 'success');
        window.reloadCurrentModal();
      } else {
        window.showSimpleToast(data.message || 'Error completing assignment', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      window.showSimpleToast('Error completing assignment: ' + error.message, 'error');
    })
    .finally(() => {
      button.innerHTML = originalContent;
      button.disabled = false;
    });
  }
};

window.completeTillToday = function(customerId, month, year) {
  if (confirm('Mark all pending assignments till today as completed?')) {
    const button = event.target.closest('button');
    const originalText = button.innerHTML;
    button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Processing...';
    button.disabled = true;

    console.log('Sending complete till today request:', { customerId, month, year });

    fetch('/customer-patterns/complete_till_today', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({
        customer_id: customerId,
        month: month,
        year: year
      })
    })
    .then(response => {
      console.log('Response status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Response data:', data);
      showSimpleToast(data.message || 'Assignments completed successfully!', 'success');
      reloadCurrentModal();
    })
    .catch(error => {
      console.error('Error:', error);
      showSimpleToast('Error completing assignments: ' + error.message, 'error');
    })
    .finally(() => {
      button.innerHTML = originalText;
      button.disabled = false;
    });
  }
};

window.reloadCurrentModal = function() {
  if (window.currentModalData) {
    const { customerId, customerName, month, year } = window.currentModalData;
    loadModalContent(customerId, customerName, month, year);
  }
};

// Handle edit form submission via event delegation
document.addEventListener('submit', function(e) {
  if (e.target.id === 'edit-assignment-form') {
    e.preventDefault();
    e.stopPropagation();

    console.log('Edit form submission intercepted via delegation');
    const form = e.target;
    const submitBtn = document.getElementById('update-assignment-btn');
    const originalText = submitBtn.textContent;

    console.log('Form action:', form.action);
    console.log('Submitting to:', form.action + '.json');

    // Show loading state
    submitBtn.disabled = true;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Updating...';

    const formData = new FormData(form);

    fetch(form.action + '.json', {
      method: 'PATCH',
      body: formData,
      headers: {
        'Accept': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      }
    })
    .then(response => {
      console.log('Response status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Response data:', data);
      if (data.success) {
        console.log('Update successful, closing modal and reloading');
        window.showSimpleToast(data.message || 'Assignment updated successfully!', 'success');
        // Close edit modal and reload main modal
        window.closeEditModal();
        window.reloadCurrentModal();
      } else {
        console.log('Update failed:', data);
        window.showSimpleToast(data.message || 'Error updating assignment', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      window.showSimpleToast('Error updating assignment: ' + error.message, 'error');
    })
    .finally(() => {
      submitBtn.disabled = false;
      submitBtn.textContent = originalText;
    });
  }
});

window.showSimpleToast = function(message, type) {
  // Remove existing toasts
  const existingToasts = document.querySelectorAll('.simple-toast');
  existingToasts.forEach(toast => toast.remove());

  const bgColor = type === 'success' ? '#28a745' : '#dc3545';
  const icon = type === 'success' ? 'check-circle' : 'exclamation-triangle';

  const toastHtml = `
    <div class="simple-toast" style="
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 99999;
      background: ${bgColor};
      color: white;
      padding: 12px 20px;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      display: flex;
      align-items: center;
      gap: 8px;
      animation: slideInRight 0.3s ease-out;
      max-width: 400px;
      word-wrap: break-word;
    ">
      <i class="fas fa-${icon}"></i>
      <span>${message}</span>
      <button onclick="this.parentElement.remove()" style="
        background: none;
        border: none;
        color: white;
        font-size: 18px;
        cursor: pointer;
        margin-left: 10px;
        padding: 0;
        width: 20px;
        height: 20px;
      ">×</button>
    </div>
  `;

  document.body.insertAdjacentHTML('beforeend', toastHtml);

  // Auto remove after 5 seconds
  setTimeout(() => {
    const toast = document.querySelector('.simple-toast');
    if (toast) {
      toast.style.animation = 'slideOutRight 0.3s ease-in';
      setTimeout(() => toast.remove(), 300);
    }
  }, 5000);
};

// Add CSS for toast animations
if (!document.querySelector('#toast-animations')) {
  const style = document.createElement('style');
  style.id = 'toast-animations';
  style.textContent = `
    @keyframes slideInRight {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
    @keyframes slideOutRight {
      from { transform: translateX(0); opacity: 1; }
      to { transform: translateX(100%); opacity: 0; }
    }
  `;
  document.head.appendChild(style);
}

function loadModalContent(customerId, customerName, month, year) {
  const modalContent = document.getElementById('modalContent');

  // Store current modal data for reloading
  window.currentModalData = {
    customerId: customerId,
    customerName: customerName,
    month: month,
    year: year
  };

  // Show loading spinner
  modalContent.innerHTML = `
    <div class="text-center py-5">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-3">Loading assignments...</p>
    </div>
  `;

  fetch(`/customer-patterns/customer_deliveries?customer_id=${customerId}&month=${month}&year=${year}`)
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      modalContent.innerHTML = data.html;
    })
    .catch(error => {
      console.error('Error loading modal content:', error);
      modalContent.innerHTML = `
        <div class="alert alert-danger text-center">
          <i class="fas fa-exclamation-triangle me-2"></i>
          Error loading data. Please try again.
        </div>
      `;
    });
}
</script>
