<%= form_with model: purchase_invoice, local: true, class: 'needs-validation', novalidate: true do |form| %>
  <div class="row">
    <!-- Left Column -->
    <div class="col-lg-8">
      <!-- Party Information -->
      <div class="card mb-4">
        <div class="card-header">
          <h5 class="mb-0">Party Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <h6 class="text-muted mb-3">Bill From</h6>
              <div class="mb-3">
                <%= form.select :party_name, 
                                options_from_collection_for_select(@purchase_customers, :name, :display_name, purchase_invoice.party_name),
                                { prompt: 'Select or search vendor...' },
                                { class: 'form-select party-select', id: 'party_select' } %>
                <div class="form-text">
                  <%= link_to '#', class: 'text-decoration-none', data: { bs_toggle: 'modal', bs_target: '#createVendorModal' } do %>
                    <i class="fas fa-plus me-1"></i>Create New Vendor
                  <% end %>
                </div>
              </div>
              
              <div id="partyDetails" class="border rounded p-3 bg-light" style="display: <%= purchase_invoice.party_name.present? ? 'block' : 'none' %>;">
                <div id="partyAddress"><strong>Address:</strong> <%= purchase_invoice.party_address %></div>
                <div id="partyPhone"><strong>Phone:</strong> <%= purchase_invoice.party_phone %></div>
                <div id="partyEmail"><strong>Email:</strong> <%= purchase_invoice.party_email %></div>
                <div id="partyGst"><strong>GST:</strong> <%= purchase_invoice.party_gst %></div>
              </div>
            </div>
            
            <div class="col-md-6">
              <h6 class="text-muted mb-3">Ship From</h6>
              <div class="mb-3">
                <button type="button" class="btn btn-outline-secondary btn-sm" id="changeShippingBtn">
                  <i class="fas fa-edit me-1"></i>Change Shipping Address
                </button>
              </div>
              
              <div id="shippingDetails" class="border rounded p-3 bg-light" style="display: <%= purchase_invoice.shipping_address.present? ? 'block' : 'none' %>;">
                <div id="shippingAddress"><strong>Shipping:</strong> <%= purchase_invoice.shipping_address %></div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Invoice Items -->
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Items / Services</h5>
          <div>
            <button type="button" class="btn btn-sm btn-outline-secondary me-2" id="scanBarcodeBtn">
              <i class="fas fa-barcode me-1"></i>Scan Barcode
            </button>
            <button type="button" class="btn btn-sm btn-primary" id="addItemBtn">
              <i class="fas fa-plus me-1"></i>Add Item
            </button>
          </div>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-bordered" id="itemsTable">
              <thead class="table-light">
                <tr>
                  <th width="5%">NO</th>
                  <th width="25%">ITEMS/SERVICES</th>
                  <th width="10%">HSN/SAC</th>
                  <th width="10%">QTY</th>
                  <th width="15%">PRICE/ITEM (₹)</th>
                  <th width="10%">DISCOUNT</th>
                  <th width="10%">TAX</th>
                  <th width="15%">AMOUNT (₹)</th>
                  <th width="5%">Action</th>
                </tr>
              </thead>
              <tbody id="itemsTableBody">
                <%= form.fields_for :purchase_invoice_items do |item_form| %>
                  <tr class="item-row">
                    <td class="text-center">
                      <span class="item-number"><%= item_form.index + 1 %></span>
                    </td>
                    <td>
                      <%= item_form.select :purchase_product_id, 
                                          options_from_collection_for_select(@purchase_products, :id, :display_name, item_form.object.purchase_product_id),
                                          { prompt: 'Select product...' },
                                          { class: 'form-select product-select', onchange: 'updateProductDetails(this)' } %>
                      <div class="mt-1">
                        <%= item_form.text_area :description, rows: 1, class: 'form-control form-control-sm', placeholder: 'Description' %>
                      </div>
                      <div class="mt-1">
                        <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createProductModal">
                          <i class="fas fa-plus me-1"></i>Add New Product
                        </button>
                      </div>
                    </td>
                    <td>
                      <%= item_form.text_field :hsn_sac, class: 'form-control hsn-field', readonly: true %>
                    </td>
                    <td>
                      <div class="input-group">
                        <%= item_form.number_field :quantity, step: 0.01, min: 0, class: 'form-control quantity-field', 
                                                   value: item_form.object.quantity || 1, onchange: 'calculateLineTotal(this)' %>
                        <span class="input-group-text unit-text">PCS</span>
                      </div>
                    </td>
                    <td>
                      <%= item_form.number_field :price, step: 0.01, min: 0, class: 'form-control price-field', 
                                                 onchange: 'calculateLineTotal(this)' %>
                    </td>
                    <td>
                      <div class="input-group">
                        <%= item_form.number_field :discount, step: 0.01, min: 0, class: 'form-control discount-field', 
                                                   value: item_form.object.discount || 0, onchange: 'calculateLineTotal(this)' %>
                        <span class="input-group-text">₹</span>
                      </div>
                    </td>
                    <td>
                      <div class="input-group">
                        <%= item_form.number_field :tax_rate, step: 0.01, min: 0, max: 100, class: 'form-control tax-field', 
                                                   value: item_form.object.tax_rate || 0, onchange: 'calculateLineTotal(this)' %>
                        <span class="input-group-text">%</span>
                      </div>
                    </td>
                    <td>
                      <div class="fw-bold amount-display">₹<%= number_with_precision(item_form.object.total_amount || 0, precision: 2) %></div>
                    </td>
                    <td class="text-center">
                      <button type="button" class="btn btn-sm btn-outline-danger remove-item-btn">
                        <i class="fas fa-trash"></i>
                      </button>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      
      <!-- Additional Charges & Calculations -->
      <div class="card mb-4">
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="d-flex flex-column gap-2">
                <button type="button" class="btn btn-outline-secondary btn-sm text-start" id="addChargesBtn" data-bs-toggle="modal" data-bs-target="#additionalChargesModal">
                  <i class="fas fa-plus me-2"></i>Add Additional Charges <span class="float-end">₹ <%= number_with_precision(purchase_invoice.additional_charges || 0, precision: 2) %></span>
                </button>
                <button type="button" class="btn btn-outline-secondary btn-sm text-start" id="addDiscountBtn" data-bs-toggle="modal" data-bs-target="#additionalDiscountModal">
                  <i class="fas fa-minus me-2"></i>Add Discount <span class="float-end">- ₹ <%= number_with_precision(purchase_invoice.additional_discount || 0, precision: 2) %></span>
                </button>
              </div>
            </div>
            <div class="col-md-6">
              <div class="calculation-summary">
                <div class="d-flex justify-content-between mb-2">
                  <span>SUBTOTAL:</span>
                  <span id="subtotalAmount">₹ <%= number_with_precision(purchase_invoice.subtotal || 0, precision: 2) %></span>
                </div>
                <div class="d-flex justify-content-between mb-2">
                  <span>Discount:</span>
                  <span id="discountAmount">₹ <%= number_with_precision(purchase_invoice.discount_amount || 0, precision: 2) %></span>
                </div>
                <div class="d-flex justify-content-between mb-2">
                  <span>Tax:</span>
                  <span id="taxAmount">₹ <%= number_with_precision(purchase_invoice.tax_amount || 0, precision: 2) %></span>
                </div>
                <div class="d-flex justify-content-between mb-2">
                  <span>Additional Charges:</span>
                  <span id="additionalChargesAmount">₹ <%= number_with_precision(purchase_invoice.additional_charges || 0, precision: 2) %></span>
                </div>
                <div class="d-flex justify-content-between mb-3 fw-bold border-top pt-2">
                  <span>Total Amount:</span>
                  <span id="totalAmount">₹ <%= number_with_precision(purchase_invoice.total_amount || 0, precision: 2) %></span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Payment Section -->
      <div class="card mb-4">
        <div class="card-header">
          <h5 class="mb-0">Payment</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-3">
              <div class="form-check">
                <%= form.check_box :auto_round_off, class: 'form-check-input', onchange: 'calculateTotals()' %>
                <%= form.label :auto_round_off, 'Auto Round Off', class: 'form-check-label' %>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <%= form.label :amount_paid, 'Amount Paid', class: 'form-label' %>
                <div class="input-group">
                  <span class="input-group-text">₹</span>
                  <%= form.number_field :amount_paid, step: 0.01, min: 0, class: 'form-control', 
                                        onchange: 'calculateBalance()' %>
                </div>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <%= form.label :payment_type, 'Payment Method', class: 'form-label' %>
                <%= form.select :payment_type, 
                                options_for_select([
                                  ['Cash', 'cash'],
                                  ['Bank Transfer', 'bank'],
                                  ['UPI', 'upi'],
                                  ['Card', 'card'],
                                  ['Cheque', 'cheque']
                                ], purchase_invoice.payment_type || 'cash'),
                                {}, { class: 'form-select' } %>
              </div>
            </div>
            <div class="col-md-3">
              <div class="mb-3">
                <label class="form-label">Balance Amount</label>
                <div class="form-control-plaintext fw-bold text-success" id="balanceAmount">₹ <%= number_with_precision(purchase_invoice.balance_amount || 0, precision: 2) %></div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-12">
              <div class="form-check">
                <input type="checkbox" class="form-check-input" id="markAsFullyPaid" onchange="markAsFullyPaid(this)">
                <label class="form-check-label" for="markAsFullyPaid">
                  Mark as Fully Paid
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Terms and Conditions -->
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Terms and Conditions</h5>
          <button type="button" class="btn btn-sm btn-outline-secondary" id="loadDefaultTerms">
            <i class="fas fa-refresh me-1"></i>Load Default
          </button>
        </div>
        <div class="card-body">
          <%= form.text_area :terms_and_conditions, rows: 4, class: 'form-control',
                             value: purchase_invoice.terms_and_conditions.present? ? purchase_invoice.terms_and_conditions : "1. Goods once sold will not be taken back or exchanged\n2. All disputes are subject to [ENTER_YOUR_CITY_NAME] jurisdiction only" %>
        </div>
      </div>
      
      <!-- Signature Section -->
      <div class="card mb-4">
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <label class="form-label">Authorized signatory for <%= admin_setting&.business_name || 'Purchase' %></label>
              <div class="border rounded p-3 text-center signature-container" style="min-height: 120px;" id="signatureContainer">
                <% if purchase_invoice.authorized_signature.present? %>
                  <img src="<%= purchase_invoice.authorized_signature %>" alt="Authorized Signature" class="img-fluid" style="max-height: 80px;">
                  <div class="mt-2">
                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeSignature()">
                      <i class="fas fa-trash me-1"></i>Remove
                    </button>
                    <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#signatureModal">
                      <i class="fas fa-edit me-1"></i>Change
                    </button>
                  </div>
                <% else %>
                  <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#signatureModal">
                    <i class="fas fa-plus me-1"></i>Add Signature
                  </button>
                <% end %>
              </div>
              <%= form.hidden_field :authorized_signature %>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Right Column -->
    <div class="col-lg-4">
      <!-- Invoice Details -->
      <div class="card mb-4">
        <div class="card-header">
          <h5 class="mb-0">Invoice Details</h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <%= form.label :invoice_number, 'Purchase Inv No', class: 'form-label' %>
            <%= form.text_field :invoice_number, class: 'form-control', readonly: true, 
                                placeholder: 'Auto-generated' %>
          </div>
          
          <div class="mb-3">
            <%= form.label :invoice_date, 'Purchase Inv Date', class: 'form-label' %>
            <%= form.date_field :invoice_date, class: 'form-control', required: true %>
          </div>
          
          <div class="mb-3">
            <%= form.label :original_invoice_number, 'Original Inv No', class: 'form-label' %>
            <%= form.text_field :original_invoice_number, class: 'form-control', 
                                placeholder: 'Optional' %>
          </div>
        </div>
      </div>
      
      <!-- Payment Terms -->
      <div class="card mb-4">
        <div class="card-header">
          <h5 class="mb-0">Payment Terms</h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <%= form.label :payment_terms, 'Payment Terms', class: 'form-label' %>
            <div class="input-group">
              <%= form.number_field :payment_terms, class: 'form-control', 
                                    min: 1, onchange: 'calculateDueDate()' %>
              <span class="input-group-text">days</span>
            </div>
          </div>
          
          <div class="mb-3">
            <label class="form-label">Due Date</label>
            <div class="form-control-plaintext" id="dueDateDisplay">
              <%= purchase_invoice.due_date&.strftime('%d %b %Y') || 'Not calculated' %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Hidden fields for additional charges and discount -->
  <%= form.hidden_field :additional_charges %>
  <%= form.hidden_field :additional_discount %>
  
  <!-- Submit Button -->
  <div class="row">
    <div class="col-12">
      <div class="d-flex justify-content-end gap-2 mb-4">
        <%= link_to purchase_invoices_path, class: 'btn btn-outline-secondary' do %>
          Cancel
        <% end %>
        <%= form.submit purchase_invoice.persisted? ? 'Update Purchase Invoice' : 'Save Purchase Invoice', class: 'btn btn-primary' %>
      </div>
    </div>
  </div>
<% end %>

<!-- Create Vendor Modal -->
<div class="modal fade" id="createVendorModal" tabindex="-1" aria-labelledby="createVendorModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="createVendorModalLabel">Create New Vendor</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="createVendorForm">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="vendor_name" class="form-label">Name <span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="vendor_name" name="name" required>
              </div>
              <div class="mb-3">
                <label for="vendor_phone" class="form-label">Phone Number <span class="text-danger">*</span></label>
                <input type="tel" class="form-control" id="vendor_phone" name="phone_number" required>
              </div>
              <div class="mb-3">
                <label for="vendor_email" class="form-label">Email</label>
                <input type="email" class="form-control" id="vendor_email" name="email">
              </div>
              <div class="mb-3">
                <label for="vendor_gst" class="form-label">GST Number</label>
                <input type="text" class="form-control" id="vendor_gst" name="gst_number" pattern="[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}">
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="vendor_address" class="form-label">Address</label>
                <textarea class="form-control" id="vendor_address" name="address" rows="3"></textarea>
              </div>
              <div class="mb-3">
                <label for="vendor_city" class="form-label">City</label>
                <input type="text" class="form-control" id="vendor_city" name="city">
              </div>
              <div class="mb-3">
                <label for="vendor_state" class="form-label">State</label>
                <input type="text" class="form-control" id="vendor_state" name="state">
              </div>
              <div class="mb-3">
                <label for="vendor_pincode" class="form-label">Pincode</label>
                <input type="text" class="form-control" id="vendor_pincode" name="pincode">
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-12">
              <div class="mb-3">
                <label for="vendor_shipping_address" class="form-label">Shipping Address (Optional)</label>
                <textarea class="form-control" id="vendor_shipping_address" name="shipping_address" rows="2" placeholder="Leave blank to use billing address"></textarea>
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveVendor()">Save Vendor</button>
      </div>
    </div>
  </div>
</div>

<!-- Create Product Modal -->
<div class="modal fade" id="createProductModal" tabindex="-1" aria-labelledby="createProductModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="createProductModalLabel">Add New Product</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="createProductForm">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="product_name" class="form-label">Product Name <span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="product_name" name="purchase_product[name]" required>
              </div>
              <div class="mb-3">
                <label for="product_hsn" class="form-label">HSN/SAC Code</label>
                <input type="text" class="form-control" id="product_hsn" name="purchase_product[hsn_sac]">
              </div>
              <div class="mb-3">
                <label for="product_purchase_price" class="form-label">Purchase Price <span class="text-danger">*</span></label>
                <div class="input-group">
                  <span class="input-group-text">₹</span>
                  <input type="number" step="0.01" min="0" class="form-control" id="product_purchase_price" name="purchase_product[purchase_price]" required>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="product_sales_price" class="form-label">Sales Price</label>
                <div class="input-group">
                  <span class="input-group-text">₹</span>
                  <input type="number" step="0.01" min="0" class="form-control" id="product_sales_price" name="purchase_product[sales_price]">
                </div>
              </div>
              <div class="mb-3">
                <label for="product_tax" class="form-label">Tax Rate (%)</label>
                <div class="input-group">
                  <input type="number" step="0.01" min="0" max="100" class="form-control" id="product_tax" name="purchase_product[tax_rate]" value="0">
                  <span class="input-group-text">%</span>
                </div>
              </div>
              <div class="mb-3">
                <label for="product_unit" class="form-label">Unit</label>
                <select class="form-select" id="product_unit" name="purchase_product[measuring_unit]">
                  <option value="PCS">PCS</option>
                  <option value="KG">KG</option>
                  <option value="LTR">LTR</option>
                  <option value="MTR">MTR</option>
                  <option value="BOX">BOX</option>
                  <option value="SET">SET</option>
                </select>
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveProduct()">Save Product</button>
      </div>
    </div>
  </div>
</div>

<!-- Signature Modal -->
<div class="modal fade" id="signatureModal" tabindex="-1" aria-labelledby="signatureModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="signatureModalLabel">Add Signature</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="signatureFile" class="form-label">Upload Signature Image</label>
          <input type="file" class="form-control" id="signatureFile" accept="image/*" onchange="previewSignature(this)">
          <div class="form-text">Supported formats: JPG, PNG, GIF. Max size: 2MB</div>
        </div>
        <div id="signaturePreview" class="text-center" style="display: none;">
          <img id="signaturePreviewImg" src="" alt="Signature Preview" class="img-fluid" style="max-height: 150px; border: 1px solid #ddd; padding: 10px;">
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveSignature()" disabled id="saveSignatureBtn">Save Signature</button>
      </div>
    </div>
  </div>
</div>

<!-- Additional Charges Modal -->
<div class="modal fade" id="additionalChargesModal" tabindex="-1" aria-labelledby="additionalChargesModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="additionalChargesModalLabel">Additional Charges</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="additionalChargesAmount" class="form-label">Amount</label>
          <div class="input-group">
            <span class="input-group-text">₹</span>
            <input type="number" step="0.01" min="0" class="form-control" id="additionalChargesAmount" value="<%= purchase_invoice.additional_charges || 0 %>">
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveAdditionalCharges()">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- Additional Discount Modal -->
<div class="modal fade" id="additionalDiscountModal" tabindex="-1" aria-labelledby="additionalDiscountModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="additionalDiscountModalLabel">Additional Discount</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="additionalDiscountAmount" class="form-label">Discount Amount</label>
          <div class="input-group">
            <span class="input-group-text">₹</span>
            <input type="number" step="0.01" min="0" class="form-control" id="additionalDiscountAmount" value="<%= purchase_invoice.additional_discount || 0 %>">
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveAdditionalDiscount()">Save</button>
      </div>
    </div>
  </div>
</div>

<script>
// Global variables
let productOptions = '<%= raw @purchase_products.map { |p| "<option value=\"#{p.id}\" data-price=\"#{p.purchase_price}\" data-hsn=\"#{p.hsn_sac}\" data-unit=\"#{p.measuring_unit}\">#{escape_javascript(p.display_name)}</option>" }.join %>';

document.addEventListener('DOMContentLoaded', function() {
  // Initialize event listeners
  initializeEventListeners();
  
  // Initial calculations
  calculateDueDate();
  calculateTotals();
  
  // Load party details if already selected
  const partySelect = document.getElementById('party_select');
  if (partySelect.value) {
    updatePartyDetails(partySelect.value);
  }
});

function initializeEventListeners() {
  // Add item functionality
  document.getElementById('addItemBtn').addEventListener('click', addNewItemRow);
  
  // Remove item functionality
  document.addEventListener('click', function(e) {
    if (e.target.closest('.remove-item-btn')) {
      removeItemRow(e.target.closest('tr'));
    }
  });
  
  // Party selection
  document.getElementById('party_select').addEventListener('change', function() {
    updatePartyDetails(this.value);
  });
  
  // Date and payment terms changes
  const paymentTermsField = document.querySelector('[name="purchase_invoice[payment_terms]"]');
  const invoiceDateField = document.querySelector('[name="purchase_invoice[invoice_date]"]');
  
  if (paymentTermsField) paymentTermsField.addEventListener('change', calculateDueDate);
  if (invoiceDateField) invoiceDateField.addEventListener('change', calculateDueDate);
  
  // Load default terms
  document.getElementById('loadDefaultTerms').addEventListener('click', loadDefaultTerms);
}

function addNewItemRow() {
  const tbody = document.getElementById('itemsTableBody');
  const rowCount = tbody.children.length + 1;
  const timestamp = Date.now();
  
  const newRow = document.createElement('tr');
  newRow.className = 'item-row';
  newRow.innerHTML = `
    <td class="text-center">
      <span class="item-number">${rowCount}</span>
    </td>
    <td>
      <select class="form-select product-select" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][purchase_product_id]" onchange="updateProductDetails(this)">
        <option value="">Select product...</option>
        ${productOptions}
      </select>
      <textarea class="form-control form-control-sm mt-1" rows="1" placeholder="Description" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][description]"></textarea>
      <div class="mt-1">
        <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createProductModal">
          <i class="fas fa-plus me-1"></i>Add New Product
        </button>
      </div>
    </td>
    <td>
      <input type="text" class="form-control hsn-field" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][hsn_sac]" readonly>
    </td>
    <td>
      <div class="input-group">
        <input type="number" step="0.01" min="0" class="form-control quantity-field" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][quantity]" value="1" onchange="calculateLineTotal(this)">
        <span class="input-group-text unit-text">PCS</span>
      </div>
    </td>
    <td>
      <input type="number" step="0.01" min="0" class="form-control price-field" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][price]" onchange="calculateLineTotal(this)">
    </td>
    <td>
      <div class="input-group">
        <input type="number" step="0.01" min="0" class="form-control discount-field" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][discount]" value="0" onchange="calculateLineTotal(this)">
        <span class="input-group-text">₹</span>
      </div>
    </td>
    <td>
      <div class="input-group">
        <input type="number" step="0.01" min="0" max="100" class="form-control tax-field" name="purchase_invoice[purchase_invoice_items_attributes][${timestamp}][tax_rate]" value="0" onchange="calculateLineTotal(this)">
        <span class="input-group-text">%</span>
      </div>
    </td>
    <td>
      <div class="fw-bold amount-display">₹0.00</div>
    </td>
    <td class="text-center">
      <button type="button" class="btn btn-sm btn-outline-danger remove-item-btn">
        <i class="fas fa-trash"></i>
      </button>
    </td>
  `;
  
  tbody.appendChild(newRow);
  updateItemNumbers();
}

function removeItemRow(row) {
  if (document.querySelectorAll('.item-row').length > 1) {
    row.remove();
    updateItemNumbers();
    calculateTotals();
  }
}

function updateItemNumbers() {
  document.querySelectorAll('.item-number').forEach((el, index) => {
    el.textContent = index + 1;
  });
}

function updateProductDetails(select) {
  const row = select.closest('tr');
  const option = select.selectedOptions[0];
  
  if (option && option.value) {
    const price = option.dataset.price || 0;
    const hsn = option.dataset.hsn || '';
    const unit = option.dataset.unit || 'PCS';
    
    row.querySelector('.price-field').value = price;
    row.querySelector('.hsn-field').value = hsn;
    row.querySelector('.unit-text').textContent = unit;
    
    calculateLineTotal(select);
  }
}

function calculateLineTotal(element) {
  const row = element.closest('tr');
  const quantity = parseFloat(row.querySelector('.quantity-field').value) || 0;
  const price = parseFloat(row.querySelector('.price-field').value) || 0;
  const discount = parseFloat(row.querySelector('.discount-field').value) || 0;
  const taxRate = parseFloat(row.querySelector('.tax-field').value) || 0;
  
  const subtotal = quantity * price;
  const discountAmount = discount;
  const taxableAmount = subtotal - discountAmount;
  const taxAmount = taxableAmount * (taxRate / 100);
  const total = taxableAmount + taxAmount;
  
  row.querySelector('.amount-display').textContent = `₹${total.toFixed(2)}`;
  
  calculateTotals();
}

function calculateTotals() {
  let subtotal = 0;
  let totalDiscount = 0;
  let totalTax = 0;
  
  document.querySelectorAll('.item-row').forEach(row => {
    const quantity = parseFloat(row.querySelector('.quantity-field').value) || 0;
    const price = parseFloat(row.querySelector('.price-field').value) || 0;
    const discount = parseFloat(row.querySelector('.discount-field').value) || 0;
    const taxRate = parseFloat(row.querySelector('.tax-field').value) || 0;
    
    const lineSubtotal = quantity * price;
    const lineDiscountAmount = discount;
    const lineTaxableAmount = lineSubtotal - lineDiscountAmount;
    const lineTaxAmount = lineTaxableAmount * (taxRate / 100);
    
    subtotal += lineSubtotal;
    totalDiscount += lineDiscountAmount;
    totalTax += lineTaxAmount;
  });
  
  // Add additional charges and discount
  const additionalCharges = parseFloat(document.querySelector('[name="purchase_invoice[additional_charges]"]').value) || 0;
  const additionalDiscount = parseFloat(document.querySelector('[name="purchase_invoice[additional_discount]"]').value) || 0;
  
  totalDiscount += additionalDiscount;
  
  // Calculate total before rounding
  let total = subtotal - totalDiscount + totalTax + additionalCharges;
  
  // Auto round off if enabled
  const autoRoundOff = document.querySelector('[name="purchase_invoice[auto_round_off]"]').checked;
  let roundOffAmount = 0;
  if (autoRoundOff) {
    roundOffAmount = Math.round(total) - total;
    total = Math.round(total);
  }
  
  // Update display
  document.getElementById('subtotalAmount').textContent = `₹ ${subtotal.toFixed(2)}`;
  document.getElementById('discountAmount').textContent = `₹ ${totalDiscount.toFixed(2)}`;
  document.getElementById('taxAmount').textContent = `₹ ${totalTax.toFixed(2)}`;
  document.getElementById('additionalChargesAmount').textContent = `₹ ${additionalCharges.toFixed(2)}`;
  document.getElementById('totalAmount').textContent = `₹ ${total.toFixed(2)}`;
  
  calculateBalance();
}

function calculateBalance() {
  const totalElement = document.getElementById('totalAmount');
  const totalText = totalElement.textContent.replace('₹ ', '').replace(',', '');
  const total = parseFloat(totalText) || 0;
  
  const amountPaid = parseFloat(document.querySelector('[name="purchase_invoice[amount_paid]"]').value) || 0;
  const balance = total - amountPaid;
  
  const balanceElement = document.getElementById('balanceAmount');
  balanceElement.textContent = `₹ ${balance.toFixed(2)}`;
  
  // Change color based on balance
  if (balance <= 0) {
    balanceElement.className = 'form-control-plaintext fw-bold text-success';
  } else {
    balanceElement.className = 'form-control-plaintext fw-bold text-warning';
  }
}

function calculateDueDate() {
  const invoiceDate = document.querySelector('[name="purchase_invoice[invoice_date]"]').value;
  const paymentTerms = parseInt(document.querySelector('[name="purchase_invoice[payment_terms]"]').value) || 30;
  
  if (invoiceDate) {
    const date = new Date(invoiceDate);
    date.setDate(date.getDate() + paymentTerms);
    
    const options = { day: '2-digit', month: 'short', year: 'numeric' };
    document.getElementById('dueDateDisplay').textContent = date.toLocaleDateString('en-GB', options);
  }
}

function markAsFullyPaid(checkbox) {
  const totalElement = document.getElementById('totalAmount');
  const totalText = totalElement.textContent.replace('₹ ', '').replace(',', '');
  const total = parseFloat(totalText) || 0;
  
  const amountPaidField = document.querySelector('[name="purchase_invoice[amount_paid]"]');
  
  if (checkbox.checked) {
    amountPaidField.value = total.toFixed(2);
  } else {
    amountPaidField.value = 0;
  }
  
  calculateBalance();
}

function updatePartyDetails(partyName) {
  const detailsDiv = document.getElementById('partyDetails');
  const shippingDiv = document.getElementById('shippingDetails');
  
  if (partyName) {
    // Make AJAX call to fetch party details
    fetch(`/purchase_customers/search?q=${encodeURIComponent(partyName)}`)
      .then(response => response.json())
      .then(customers => {
        const customer = customers.find(c => c.name === partyName);
        if (customer) {
          document.getElementById('partyAddress').innerHTML = `<strong>Address:</strong> ${customer.address || 'N/A'}`;
          document.getElementById('partyPhone').innerHTML = `<strong>Phone:</strong> ${customer.phone || 'N/A'}`;
          document.getElementById('partyEmail').innerHTML = `<strong>Email:</strong> ${customer.email || 'N/A'}`;
          document.getElementById('partyGst').innerHTML = `<strong>GST:</strong> ${customer.gst_number || 'N/A'}`;
          document.getElementById('shippingAddress').innerHTML = `<strong>Shipping:</strong> ${customer.address || 'Same as billing address'}`;
          
          detailsDiv.style.display = 'block';
          shippingDiv.style.display = 'block';
        }
      })
      .catch(error => {
        console.error('Error fetching party details:', error);
        detailsDiv.style.display = 'none';
        shippingDiv.style.display = 'none';
      });
  } else {
    detailsDiv.style.display = 'none';
    shippingDiv.style.display = 'none';
  }
}

// Modal functions
function saveVendor() {
  const form = document.getElementById('createVendorForm');
  const formData = new FormData(form);
  
  fetch('/purchase_customers', {
    method: 'POST',
    headers: {
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
      'Accept': 'application/json'
    },
    body: formData
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      // Add new vendor to dropdown
      const partySelect = document.getElementById('party_select');
      const option = new Option(data.vendor.display_name, data.vendor.name, true, true);
      partySelect.add(option);
      
      // Close modal and reset form
      bootstrap.Modal.getInstance(document.getElementById('createVendorModal')).hide();
      form.reset();
      
      // Update party details
      updatePartyDetails(data.vendor.name);
      
      alert('Vendor created successfully!');
    } else {
      alert('Error creating vendor: ' + (data.errors ? data.errors.join(', ') : 'Unknown error'));
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Error creating vendor. Please try again.');
  });
}

function saveProduct() {
  const form = document.getElementById('createProductForm');
  const formData = new FormData(form);
  
  fetch('/purchase_products', {
    method: 'POST',
    headers: {
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
      'Accept': 'application/json'
    },
    body: formData
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      // Add new product to all product dropdowns
      const newOption = `<option value="${data.product.id}" data-price="${data.product.purchase_price}" data-hsn="${data.product.hsn_sac || ''}" data-unit="${data.product.measuring_unit}">${data.product.display_name}</option>`;
      productOptions += newOption;
      
      document.querySelectorAll('.product-select').forEach(select => {
        select.innerHTML = '<option value="">Select product...</option>' + productOptions;
      });
      
      // Close modal and reset form
      bootstrap.Modal.getInstance(document.getElementById('createProductModal')).hide();
      form.reset();
      
      alert('Product created successfully!');
    } else {
      alert('Error creating product: ' + (data.errors ? data.errors.join(', ') : 'Unknown error'));
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Error creating product. Please try again.');
  });
}

function previewSignature(input) {
  const file = input.files[0];
  const preview = document.getElementById('signaturePreview');
  const previewImg = document.getElementById('signaturePreviewImg');
  const saveBtn = document.getElementById('saveSignatureBtn');
  
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      previewImg.src = e.target.result;
      preview.style.display = 'block';
      saveBtn.disabled = false;
    };
    reader.readAsDataURL(file);
  } else {
    preview.style.display = 'none';
    saveBtn.disabled = true;
  }
}

function saveSignature() {
  const previewImg = document.getElementById('signaturePreviewImg');
  const signatureData = previewImg.src;
  
  // Update the signature field
  document.querySelector('[name="purchase_invoice[authorized_signature]"]').value = signatureData;
  
  // Update the signature container
  const container = document.getElementById('signatureContainer');
  container.innerHTML = `
    <img src="${signatureData}" alt="Authorized Signature" class="img-fluid" style="max-height: 80px;">
    <div class="mt-2">
      <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeSignature()">
        <i class="fas fa-trash me-1"></i>Remove
      </button>
      <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#signatureModal">
        <i class="fas fa-edit me-1"></i>Change
      </button>
    </div>
  `;
  
  // Close modal
  bootstrap.Modal.getInstance(document.getElementById('signatureModal')).hide();
  
  // Reset file input
  document.getElementById('signatureFile').value = '';
  document.getElementById('signaturePreview').style.display = 'none';
  document.getElementById('saveSignatureBtn').disabled = true;
}

function removeSignature() {
  document.querySelector('[name="purchase_invoice[authorized_signature]"]').value = '';
  
  const container = document.getElementById('signatureContainer');
  container.innerHTML = `
    <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#signatureModal">
      <i class="fas fa-plus me-1"></i>Add Signature
    </button>
  `;
}

function saveAdditionalCharges() {
  const amount = parseFloat(document.getElementById('additionalChargesAmount').value) || 0;
  document.querySelector('[name="purchase_invoice[additional_charges]"]').value = amount;
  
  // Update button display
  document.querySelector('#addChargesBtn .float-end').textContent = `₹ ${amount.toFixed(2)}`;
  
  // Close modal
  bootstrap.Modal.getInstance(document.getElementById('additionalChargesModal')).hide();
  
  // Recalculate totals
  calculateTotals();
}

function saveAdditionalDiscount() {
  const amount = parseFloat(document.getElementById('additionalDiscountAmount').value) || 0;
  document.querySelector('[name="purchase_invoice[additional_discount]"]').value = amount;
  
  // Update button display
  document.querySelector('#addDiscountBtn .float-end').textContent = `- ₹ ${amount.toFixed(2)}`;
  
  // Close modal
  bootstrap.Modal.getInstance(document.getElementById('additionalDiscountModal')).hide();
  
  // Recalculate totals
  calculateTotals();
}

function loadDefaultTerms() {
  const termsField = document.querySelector('[name="purchase_invoice[terms_and_conditions]"]');
  termsField.value = "1. Goods once sold will not be taken back or exchanged\n2. All disputes are subject to [ENTER_YOUR_CITY_NAME] jurisdiction only";
}
</script>