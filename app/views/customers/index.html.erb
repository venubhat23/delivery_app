<!-- app/views/customers/index.html.erb -->
<div class="customers-content-wrapper">
<div class="page-header">
  <div class="d-flex justify-content-between align-items-center">
    <div>
      <h1 class="h2 mb-2">
        <i class="fas fa-users me-3"></i>Customer Management
      </h1>
      <p class="text-muted mb-0">Manage your customer database and delivery assignments</p>
    </div>
    <div class="d-flex gap-2">
      <%= link_to enhanced_bulk_import_customers_path, class: "btn btn-success" do %>
        <i class="fas fa-rocket me-2"></i>Enhanced Bulk Import
      <% end %>
      <%= link_to bulk_import_customers_path, class: "btn btn-outline-success" do %>
        <i class="fas fa-upload me-2"></i>Standard Import
      <% end %>
      <%= link_to new_customer_path, class: "btn btn-primary" do %>
        <i class="fas fa-user-plus me-2"></i>Add Customer
      <% end %>
    </div>
  </div>
</div>

<!-- Enhanced Stats Cards -->
<div class="row mb-4">
  <div class="col-md-3 mb-3">
    <div class="stats-card">
      <div class="stats-icon">
        <i class="fas fa-users"></i>
      </div>
      <div class="stats-number"><%= @total_customers %></div>
      <div class="stats-label">Total Customers</div>
    </div>
  </div>
  <div class="col-md-3 mb-3">
    <div class="stats-card stats-card-success">
      <div class="stats-icon">
        <i class="fas fa-user-check"></i>
      </div>
      <div class="stats-number"><%= @customers.select { |c| c.delivery_person.present? }.count %></div>
      <div class="stats-label">Assigned</div>
    </div>
  </div>
  <div class="col-md-3 mb-3">
    <div class="stats-card stats-card-warning">
      <div class="stats-icon">
        <i class="fas fa-user-times"></i>
      </div>
      <div class="stats-number"><%= @customers.select { |c| c.delivery_person.blank? }.count %></div>
      <div class="stats-label">Unassigned</div>
    </div>
  </div>
  <div class="col-md-3 mb-3">
    <div class="stats-card stats-card-info">
      <div class="stats-icon">
        <i class="fas fa-map-marker-alt"></i>
      </div>
      <div class="stats-number"><%= @customers.select { |c| c.latitude.present? && c.longitude.present? }.count %></div>
      <div class="stats-label">Geo-Located</div>
    </div>
  </div>
</div>

<!-- Enhanced Filters -->
<div class="card mb-4" style="height:220px;">
  <div class="card-body">
    <div class="row align-items-center">
      <div class="col-md-8">
        <%= form_with url: customers_path, method: :get, local: true, class: "d-flex align-items-center" do |form| %>
          <div class="me-3 position-relative" style="display:flex;align-items:center;gap:8px;">
            <div class="customer-search-container position-relative">
              <input type="text" 
                     class="form-control customer-search-input" 
                     id="customer-search-input"
                     placeholder="Search customers by name..."
                     autocomplete="off"
                     style="min-width: 350px;">
              <div class="search-icon">
                <i class="fas fa-search"></i>
              </div>
              <%= form.hidden_field :search, id: 'customer-search-hidden' %>
              <div class="customer-suggestions" id="customer-suggestions" style="display: none;">
                <!-- Customer suggestions will be populated here -->
              </div>
              <div class="customer-loading" id="customer-loading" style="display: none;">
                <i class="fas fa-spinner fa-spin me-2"></i>Searching customers...
              </div>
            </div>
          </div>
          <div class="me-3">
            <label for="delivery_person_filter" class="form-label me-2 mb-0" style="white-space: nowrap;">
              <i class="fas fa-filter me-1"></i>Delivery Person:
            </label>
            <%= form.select :delivery_person_id, 
                  options_for_select([['All Personnel', 'all']] + 
                  @delivery_people.map { |dp| [dp.name, dp.id] }, 
                  @selected_delivery_person_id),
                  {}, 
                  { 
                    class: "form-select",
                    id: "delivery_person_filter"
                  } %>
          </div>
          <%= form.submit "Search & Filter", class: "btn btn-outline-primary d-none", id: "customer-search-submit" %>
        <% end %>
        <script>
          document.addEventListener('DOMContentLoaded', function() {
            initializeCustomerSearch();
            initializeDeliveryPersonFilter();
          });

          document.addEventListener('turbo:load', function() {
            initializeCustomerSearch();
            initializeDeliveryPersonFilter();
          });

          function initializeCustomerSearch() {
            const customerSearchInput = document.getElementById('customer-search-input');
            const customerSuggestions = document.getElementById('customer-suggestions');
            const customerLoading = document.getElementById('customer-loading');
            const customerSearchHidden = document.getElementById('customer-search-hidden');
            
            let customerSearchTimeout;
            let currentCustomerSearchTerm = '';
            
            if (customerSearchInput) {
              // Set initial value from URL params
              const urlParams = new URLSearchParams(window.location.search);
              const searchParam = urlParams.get('search');
              if (searchParam) {
                customerSearchInput.value = searchParam;
                customerSearchHidden.value = searchParam;
              }

              // Trigger customer search as you type
              customerSearchInput.addEventListener('input', function(e) {
                clearTimeout(customerSearchTimeout);
                const query = this.value.trim();
                currentCustomerSearchTerm = query;
                
                if (query.length === 0) {
                  hideCustomerSuggestions();
                  customerSearchHidden.value = '';
                  // Auto-submit to clear results
                  customerSearchTimeout = setTimeout(() => {
                    this.closest('form').submit();
                  }, 300);
                  return;
                }
                
                // Add debouncing - wait 300ms after user stops typing
                customerSearchTimeout = setTimeout(() => {
                  showCustomerLoading();
                  fetchCustomerSuggestions(query);
                }, 300);
              });
              
              // Handle focus - show dropdown
              customerSearchInput.addEventListener('focus', function() {
                const query = this.value.trim();
                if (query.length > 0) {
                  showCustomerLoading();
                  fetchCustomerSuggestions(query);
                }
              });
              
              // Handle blur (with delay to allow clicking suggestions)
              customerSearchInput.addEventListener('blur', function() {
                setTimeout(() => {
                  hideCustomerSuggestions();
                }, 200);
              });

              // Handle Enter key
              customerSearchInput.addEventListener('keydown', function(e) {
                if (e.key === 'Enter') {
                  e.preventDefault();
                  customerSearchHidden.value = this.value;
                  this.closest('form').submit();
                }
              });
            }
            
            function fetchCustomerSuggestions(query) {
              fetch(`/customers/search_suggestions?q=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                  hideCustomerLoading();
                  displayCustomerSuggestions(data.customers || []);
                })
                .catch(error => {
                  console.error('Customer search error:', error);
                  hideCustomerLoading();
                });
            }
            
            function displayCustomerSuggestions(customers) {
              if (customers.length === 0) {
                customerSuggestions.innerHTML = '<div class="customer-suggestion-item">No customers found</div>';
                customerSuggestions.style.display = 'block';
                return;
              }
              
              const html = customers.map(customer => {
                const highlightedName = highlightSearchTerm(customer.name, currentCustomerSearchTerm);
                const phone = customer.phone_number || '';
                const address = customer.address ? customer.address.substring(0, 40) + '...' : '';
                
                return `
                  <div class="customer-suggestion-item" data-customer-name="${customer.name}">
                    <div class="customer-suggestion-main">
                      <div class="customer-suggestion-name">${highlightedName}</div>
                      ${phone ? `<div class="customer-suggestion-phone"><i class="fas fa-phone me-1"></i>${phone}</div>` : ''}
                      ${address ? `<div class="customer-suggestion-address"><i class="fas fa-map-marker-alt me-1"></i>${address}</div>` : ''}
                    </div>
                    ${customer.delivery_person ? `<div class="customer-suggestion-delivery"><i class="fas fa-truck me-1"></i>${customer.delivery_person.name}</div>` : ''}
                  </div>
                `;
              }).join('');
              
              customerSuggestions.innerHTML = html;
              customerSuggestions.style.display = 'block';
              
              // Add click handlers
              document.querySelectorAll('.customer-suggestion-item').forEach(item => {
                item.addEventListener('click', function() {
                  const customerName = this.dataset.customerName;
                  selectCustomer(customerName);
                });
              });
            }
            
            function selectCustomer(customerName) {
              customerSearchInput.value = customerName;
              customerSearchHidden.value = customerName;
              hideCustomerSuggestions();
              customerSearchInput.closest('form').submit();
            }
            
            function highlightSearchTerm(text, term) {
              if (!term) return text;
              
              const regex = new RegExp(`(${term})`, 'gi');
              return text.replace(regex, '<span class="search-highlight">$1</span>');
            }
            
            function showCustomerLoading() {
              customerLoading.style.display = 'block';
              customerSuggestions.style.display = 'none';
            }
            
            function hideCustomerLoading() {
              customerLoading.style.display = 'none';
            }
            
            function hideCustomerSuggestions() {
              customerSuggestions.style.display = 'none';
              customerLoading.style.display = 'none';
            }
          }

          function initializeDeliveryPersonFilter() {
            const select = document.getElementById('delivery_person_filter');
            if (!select) return;
            const form = select.closest('form');
            if (!form) return;

            select.addEventListener('change', function() {
              form.submit();
            });
          }
        </script>
      </div>
      <div class="col-md-4 text-end">
        <div class="d-flex align-items-center justify-content-end">
          <% if params[:search].present? || (params[:delivery_person_id].present? && params[:delivery_person_id] != 'all') %>
            <%= link_to customers_path, class: "btn btn-outline-secondary me-2" do %>
              <i class="fas fa-times me-1"></i>Clear All
            <% end %>
          <% end %>
          <span class="badge bg-primary me-2"><%= @customers.count %> customers</span>
          <div class="btn-group btn-group-sm" role="group">
            <button type="button" class="btn btn-outline-secondary active" id="tableView">
              <i class="fas fa-table"></i>
            </button>
            <button type="button" class="btn btn-outline-secondary" id="cardView">
              <i class="fas fa-th"></i>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Customers Table -->
<div class="card">
  <div class="card-header">
    <div class="d-flex justify-content-between align-items-center">
      <h6 class="mb-0">
        <i class="fas fa-list me-2"></i>Customers List
      </h6>
      <div class="d-flex align-items-center">
        <% if params[:delivery_person_id].present? && params[:delivery_person_id] != 'all' %>
          <span class="badge bg-info me-2">
            Filtered by: <%= @delivery_people.find { |dp| dp.id.to_s == params[:delivery_person_id] }&.name %>
          </span>
        <% end %>
      </div>
    </div>
  </div>
  <div class="card-body p-0">
    <% if @customers.any? %>
      <!-- Table View -->
      <div id="tableViewContent" class="table-responsive">
        <table class="table table-hover mb-0">
          <thead>
            <tr>
              <th width="8%" class="text-center"><i class="fas fa-image me-1"></i>Image</th>
              <th width="30%"><i class="fas fa-user me-1"></i>Customer Details</th>
              <th width="20%" class="text-center"><i class="fas fa-truck me-1"></i>Delivery Person</th>
              <th width="17%" class="text-center"><i class="fas fa-calendar me-1"></i>Added</th>
              <th width="25%" class="text-center"><i class="fas fa-cogs me-1"></i>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% @customers.each do |customer| %>
              <tr class="customer-row customer-clickable" 
                  data-customer-id="<%= customer.id %>"
                  data-customer-name="<%= customer.name %>"
                  data-customer-image="<%= customer.image_url %>"
                  style="cursor: pointer;">
                <td class="text-center align-middle">
                  <div class="customer-image-cell">
                    <% if customer.image_url.present? %>
                      <img src="<%= customer.image_url %>"
                           alt="<%= customer.name %>"
                           class="customer-table-image rounded-circle"
                           style="width: 45px; height: 45px; object-fit: cover; border: 2px solid #fff; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                    <% else %>
                      <div class="customer-avatar-small bg-secondary text-white rounded-circle d-inline-flex align-items-center justify-content-center"
                           style="width: 45px; height: 45px; font-size: 16px; font-weight: 600;">
                        <%= customer.name.first.upcase %>
                      </div>
                    <% end %>
                  </div>
                </td>
                <td class="align-middle">
                  <div class="customer-details-cell">
                    <div class="customer-name mb-2">
                      <strong class="text-primary d-block"><%= customer.name %></strong>
                      <% if customer.member_id.present? %>
                        <small class="text-muted">ID: <%= customer.member_id %></small>
                      <% end %>
                    </div>

                    <div class="customer-contact-info">
                      <% if customer.phone_number.present? %>
                        <div class="text-muted small mb-1">
                          <i class="fas fa-phone me-2 text-primary"></i><%= customer.phone_number %>
                        </div>
                      <% end %>

                      <% if customer.address.present? %>
                        <div class="text-muted small mb-1" title="<%= customer.address %>">
                          <i class="fas fa-map-marker-alt me-2 text-muted"></i>
                          <%= truncate(customer.address, length: 30) %>
                        </div>
                      <% end %>

                      <% if customer.latitude.present? && customer.longitude.present? %>
                        <div class="text-muted small">
                          <i class="fas fa-map-pin me-2 text-success"></i>
                          Geo-located
                        </div>
                      <% end %>
                    </div>
                  </div>
                </td>
                <td class="text-center align-middle">
                  <% if customer.delivery_person.present? %>
                    <div class="delivery-person-badge">
                      <span class="badge bg-primary px-3 py-2">
                        <i class="fas fa-truck me-1"></i>
                        <%= customer.delivery_person.name %>
                      </span>
                    </div>
                  <% else %>
                    <span class="badge bg-warning text-dark px-3 py-2">
                      <i class="fas fa-exclamation-triangle me-1"></i>
                      Not Assigned
                    </span>
                  <% end %>
                </td>
                <td class="text-center align-middle">
                  <div class="added-info">
                    <div class="text-muted mb-1">
                      <i class="fas fa-calendar me-1"></i>
                      <%= customer.created_at.strftime("%b %d, %Y") %>
                    </div>
                    <div class="text-muted small">
                      <i class="fas fa-user me-1"></i>
                      <%= customer.user&.name || 'Unknown' %>
                    </div>
                  </div>
                </td>
                <td class="text-center align-middle">
                  <div class="btn-group btn-group-sm" role="group">
                    <%= link_to customer_path(customer), class: "btn btn-outline-primary", title: "View Details" do %>
                      <i class="fas fa-eye"></i>
                    <% end %>
                    <%= link_to edit_customer_path(customer), class: "btn btn-outline-warning", title: "Edit Customer" do %>
                      <i class="fas fa-edit"></i>
                    <% end %>
                    <% if customer.delivery_person.present? %>
                      <button type="button"
                              class="btn btn-outline-info"
                              title="Reassign Delivery Person"
                              data-bs-toggle="modal"
                              data-bs-target="#unassignModal"
                              data-customer-id="<%= customer.id %>"
                              data-customer-name="<%= customer.name %>"
                              data-current-delivery-person-id="<%= customer.delivery_person_id %>"
                              data-current-delivery-person-name="<%= customer.delivery_person.name %>">
                        <i class="fas fa-user-times"></i>
                      </button>
                    <% end %>
                    <%= button_to customer_path(customer),
                        method: :delete,
                        form: { "data-turbo-confirm": "Are you sure you want to delete this customer?", class: "d-inline" },
                        class: "btn btn-outline-danger",
                        title: "Delete Customer" do %>
                      <i class="fas fa-trash"></i>
                    <% end %>
                  </div>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
      
      <!-- Pagination -->
      <div class="d-flex justify-content-center mt-4">
        <%= paginate @customers, theme: 'twitter-bootstrap-4' %>
      </div>
      
      <!-- Card View (Hidden by default) -->
      <div id="cardViewContent" class="d-none">
        <div class="row p-4">
          <% @customers.each do |customer| %>
            <div class="col-md-6 col-lg-4 mb-4">
              <div class="customer-card customer-clickable" 
                   data-customer-id="<%= customer.id %>"
                   data-customer-name="<%= customer.name %>"
                   data-customer-image="<%= customer.image_url %>"
                   style="cursor: pointer;">
                <div class="customer-card-header">
                  <div class="customer-avatar-large">
                    <%= customer.name.split.map(&:first).join.upcase %>
                  </div>
                  <div class="customer-actions">
                    <div class="dropdown">
                      <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="fas fa-ellipsis-v"></i>
                      </button>
                      <ul class="dropdown-menu">
                        <li><%= link_to "View", customer_path(customer), class: "dropdown-item" %></li>
                        <li><%= link_to "Edit", edit_customer_path(customer), class: "dropdown-item" %></li>
                        <% if customer.delivery_person.present? %>
                          <li>
                            <button type="button" 
                                    class="dropdown-item text-info"
                                    data-bs-toggle="modal" 
                                    data-bs-target="#unassignModal"
                                    data-customer-id="<%= customer.id %>"
                                    data-customer-name="<%= customer.name %>"
                                    data-current-delivery-person-id="<%= customer.delivery_person_id %>"
                                    data-current-delivery-person-name="<%= customer.delivery_person.name %>">
                              <i class="fas fa-user-times me-2"></i>Unassign Delivery Person
                            </button>
                          </li>
                        <% end %>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                          <%= button_to "Delete", customer_path(customer), method: :delete, 
                              form: { "data-turbo-confirm": "Are you sure?" }, 
                              class: "dropdown-item text-danger" %>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
                
                <div class="customer-card-body">
                  <h6 class="customer-name"><%= customer.name %></h6>
                  
                  <div class="customer-meta">
                    <% if customer.phone_number.present? %>
                      <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-phone me-2 text-primary"></i>
                        <span class="text-muted"><%= customer.phone_number %></span>
                      </div>
                    <% end %>
                    
                    <% if customer.address.present? %>
                      <div class="d-flex align-items-start mb-2">
                        <i class="fas fa-map-marker-alt me-2 text-danger mt-1"></i>
                        <span class="text-muted small"><%= truncate(customer.address, length: 100) %></span>
                      </div>
                    <% end %>
                    
                    <% if customer.latitude.present? && customer.longitude.present? %>
                      <div class="d-flex align-items-start mb-2">
                        <i class="fas fa-map-pin me-2 text-success mt-1"></i>
                        <span class="text-muted small"><%= customer.latitude.round(6) %>, <%= customer.longitude.round(6) %></span>
                      </div>
                    <% end %>
                  </div>
                  
                  <div class="customer-badges">
                    <% if customer.delivery_person.present? %>
                      <span class="badge bg-primary mb-2">
                        <i class="fas fa-truck me-1"></i>
                        <%= customer.delivery_person.name %>
                      </span>
                    <% else %>
                      <span class="badge bg-warning text-dark mb-2">
                        <i class="fas fa-exclamation-triangle me-1"></i>
                        Not Assigned
                      </span>
                    <% end %>
                  </div>
                  
                  <div class="customer-footer">
                    <div class="d-flex justify-content-between align-items-center">
                      <small class="text-muted">
                        <div>
                          <i class="fas fa-calendar me-1"></i>
                          <%= customer.created_at.strftime("%b %d, %Y") %>
                        </div>
                        <div class="mt-1">
                          <i class="fas fa-user me-1"></i>
                          <%= customer.user&.name || 'Unknown' %>
                        </div>
                      </small>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </div>
        
        <!-- Pagination for Card View -->
        <div class="d-flex justify-content-center mt-4">
          <%= paginate @customers, theme: 'twitter-bootstrap-4' %>
        </div>
      </div>
    <% else %>
      <div class="empty-state">
        <i class="fas fa-users"></i>
        <h4>No Customers Found</h4>
        <% if params[:delivery_person_id].present? && params[:delivery_person_id] != 'all' %>
          <p>No customers found for the selected delivery person.</p>
          <%= link_to customers_path, class: "btn btn-outline-primary me-2" do %>
            <i class="fas fa-times me-2"></i>Clear Filter
          <% end %>
        <% else %>
          <p>Start building your customer database by adding your first customer.</p>
        <% end %>
        <div class="mt-3">
          <%= link_to enhanced_bulk_import_customers_path, class: "btn btn-success me-2" do %>
            <i class="fas fa-rocket me-2"></i>Enhanced Import
          <% end %>
          <%= link_to bulk_import_customers_path, class: "btn btn-outline-success me-2" do %>
            <i class="fas fa-upload me-2"></i>Standard Import
          <% end %>
          <%= link_to new_customer_path, class: "btn btn-primary" do %>
            <i class="fas fa-user-plus me-2"></i>Add Customer
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
</div>

<style>
/* Enhanced Customer Index Styles - Modern & Professional */

/* Page Layout Improvements */
.page-header {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-radius: 20px;
  padding: 2.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
  position: relative;
  overflow: hidden;
}

.page-header::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  animation: rotate 20s linear infinite;
}

.page-header h1 {
  color: white !important;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 2;
}

.page-header p {
  color: rgba(255, 255, 255, 0.9) !important;
  position: relative;
  z-index: 2;
}

.page-header .btn {
  position: relative;
  z-index: 2;
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.15) !important;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.page-header .btn:hover {
  background: rgba(255, 255, 255, 0.25) !important;
  transform: translateY(-2px);
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhanced Stats Cards */
.stats-card {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(102, 126, 234, 0.1);
}

.stats-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: var(--primary-gradient);
}

.stats-card::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
  border-radius: 0 0 0 60px;
}

.stats-card:hover {
  box-shadow: 0 20px 60px rgba(102, 126, 234, 0.15);
  transform: translateY(-8px) scale(1.02);
}

.stats-card .stats-icon {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 50px;
  height: 50px;
  background: var(--primary-gradient);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 20px;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  z-index: 2;
}

.stats-card .stats-number {
  font-size: 2.5rem;
  font-weight: 800;
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  line-height: 1;
  margin-bottom: 0.5rem;
  position: relative;
  z-index: 2;
}

.stats-card .stats-label {
  color: var(--text-secondary);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.8rem;
  position: relative;
  z-index: 2;
}

.stats-card-success::before {
  background: var(--success-gradient);
}

.stats-card-warning::before {
  background: var(--warning-gradient);
}

.stats-card-info::before {
  background: var(--dark-gradient);
}

.stats-card-success .stats-icon {
  background: var(--success-gradient);
}

.stats-card-warning .stats-icon {
  background: var(--warning-gradient);
}

.stats-card-info .stats-icon {
  background: var(--dark-gradient);
}

/* Enhanced Filter Card */
.card {
  border-radius: 20px;
  border: none;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  overflow: hidden;
}

.card:hover {
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
  transform: translateY(-2px);
}

.card-header {
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  border-bottom: 1px solid rgba(102, 126, 234, 0.1);
  padding: 1.5rem 2rem;
}

.card-body {
  padding: 2rem;
}

/* Enhanced Customer Table */
.table {
  border-radius: 20px;
  overflow: hidden;
  box-shadow: none;
  margin: 0;
  table-layout: fixed;
  width: 100%;
}

.table thead th {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-size: 0.875rem;
  padding: 1.5rem 1rem;
  border: none;
  position: relative;
}

.table thead th i {
  opacity: 0.8;
  margin-right: 0.5rem;
}

.customer-row {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  border-bottom: 1px solid rgba(102, 126, 234, 0.05);
}

.customer-row:hover {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.03) 0%, rgba(118, 75, 162, 0.03) 100%);
  transform: translateX(8px) scale(1.01);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.1);
}

.customer-row td {
  padding: 1rem 0.75rem;
  vertical-align: middle;
  border-color: rgba(102, 126, 234, 0.05);
  word-wrap: break-word;
  overflow-wrap: break-word;
}

/* Specific column styling */
.customer-details-cell {
  max-width: 100%;
}

.customer-details-cell .customer-name {
  line-height: 1.3;
}

.customer-contact-info {
  line-height: 1.4;
}

.customer-contact-info .small {
  font-size: 0.8rem;
}

/* Improved button group styling */
.btn-group-sm .btn {
  padding: 0.4rem 0.6rem;
  font-size: 0.8rem;
  border-radius: 6px;
  margin: 0 1px;
}

.btn-group-sm .btn i {
  font-size: 0.75rem;
}

/* Badge improvements */
.badge.px-3.py-2 {
  font-size: 0.75rem;
  border-radius: 12px;
}

/* Enhanced Customer Avatar */
.customer-avatar {
  width: 50px;
  height: 50px;
  border-radius: 15px;
  background: var(--success-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 700;
  font-size: 18px;
  box-shadow: 0 8px 25px rgba(79, 172, 254, 0.3);
  transition: all 0.3s ease;
}

.customer-avatar:hover {
  transform: scale(1.1) rotate(5deg);
  box-shadow: 0 12px 35px rgba(79, 172, 254, 0.4);
}

.customer-avatar-large {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: var(--success-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 600;
  font-size: 20px;
  box-shadow: 0 4px 15px rgba(79, 172, 254, 0.3);
}

/* Mini Avatars */
.delivery-person-mini-avatar, .user-mini-avatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: var(--primary-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 600;
  font-size: 12px;
  box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
}

/* Enhanced Customer Images */
.customer-image-thumbnail {
  width: 50px;
  height: 50px;
  object-fit: cover;
  border-radius: 15px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  border: 2px solid white;
}

.customer-image-thumbnail:hover {
  transform: scale(1.15) rotate(2deg);
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
}

.customer-image-placeholder {
  width: 50px;
  height: 50px;
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  border: 2px dashed rgba(102, 126, 234, 0.3);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.customer-image-placeholder:hover {
  border-color: #667eea;
  background: rgba(102, 126, 234, 0.05);
  transform: scale(1.05);
}

.customer-image-placeholder i {
  font-size: 20px;
  color: rgba(102, 126, 234, 0.4);
}

/* Enhanced Address Cell */
.address-cell {
  max-width: 200px;
}

.address-cell .text-truncate {
  display: flex;
  align-items: center;
}

/* Enhanced Location Badge */
.location-badge {
  display: flex;
  align-items: center;
}

/* Enhanced Delivery Person Badge */
.delivery-person-badge {
  display: flex;
  align-items: center;
}

/* Enhanced Added By Info */
.added-by-info {
  display: flex;
  align-items: center;
}

/* Enhanced Customer Cards */
.customer-card {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 20px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  border: 1px solid rgba(102, 126, 234, 0.1);
  position: relative;
}

.customer-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: var(--success-gradient);
}

.customer-card:hover {
  box-shadow: 0 25px 50px rgba(79, 172, 254, 0.15);
  transform: translateY(-10px) scale(1.02);
}

.customer-card-header {
  padding: 2rem;
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid rgba(102, 126, 234, 0.1);
  position: relative;
}

.customer-card-body {
  padding: 2rem;
}

.customer-name {
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 1rem;
  font-size: 1.1rem;
}

.customer-meta {
  margin-bottom: 1.5rem;
}

.customer-stats {
  display: flex;
  justify-content: space-around;
  margin-bottom: 1.5rem;
  padding: 1rem;
  background: var(--bg-light);
  border-radius: 12px;
}

.stat-item {
  text-align: center;
}

.stat-label {
  display: block;
  font-size: 0.75rem;
  color: var(--text-secondary);
  margin-bottom: 0.25rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.stat-value {
  display: block;
  font-weight: 700;
  font-size: 0.9rem;
}

.customer-badges {
  margin-bottom: 1.5rem;
}

.customer-footer {
  padding-top: 1rem;
  border-top: 1px solid var(--border-color);
}

/* Enhanced Badges */
.badge {
  padding: 0.5rem 1rem;
  border-radius: 25px;
  font-weight: 600;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.badge:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
}

.badge.bg-info {
  background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%) !important;
}

.badge.bg-success {
  background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;
}

.badge.bg-danger {
  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%) !important;
}

.badge.bg-warning {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%) !important;
}

.badge.bg-secondary {
  background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%) !important;
}

.badge.bg-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
}

/* Enhanced Action Buttons */
.btn-group .btn {
  border-radius: 12px !important;
  margin-right: 6px;
  padding: 0.5rem 0.75rem;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.btn-group .btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.btn-group .btn:last-child {
  margin-right: 0;
}

.btn-outline-primary {
  border: 2px solid #667eea;
  color: #667eea;
  background: transparent;
}

.btn-outline-primary:hover {
  background: #667eea;
  color: white;
  border-color: #667eea;
}

.btn-outline-warning {
  border: 2px solid #f59e0b;
  color: #f59e0b;
  background: transparent;
}

.btn-outline-warning:hover {
  background: #f59e0b;
  color: white;
  border-color: #f59e0b;
}

.btn-outline-danger {
  border: 2px solid #ef4444;
  color: #ef4444;
  background: transparent;
}

.btn-outline-danger:hover {
  background: #ef4444;
  color: white;
  border-color: #ef4444;
}

/* Enhanced View Toggle Buttons */
#cardView, #tableView {
  transition: all 0.3s ease;
  border-radius: 12px;
  padding: 0.75rem 1rem;
  border: 2px solid rgba(102, 126, 234, 0.2);
  background: transparent;
  color: #667eea;
}

#cardView.active, #tableView.active {
  background: var(--primary-gradient);
  color: white;
  border-color: transparent;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  transform: translateY(-2px);
}

#cardView:hover, #tableView:hover {
  border-color: #667eea;
  transform: translateY(-1px);
}

/* Enhanced Empty State */
.empty-state {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--text-secondary);
}

.empty-state i {
  font-size: 5rem;
  opacity: 0.2;
  margin-bottom: 2rem;
  background: var(--success-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.empty-state h4 {
  color: var(--text-primary);
  margin-bottom: 1rem;
  font-weight: 700;
}

.empty-state p {
  font-size: 1.1rem;
  margin-bottom: 2rem;
}

/* Enhanced Form Controls */
.form-select, .form-control {
  border-radius: 12px;
  border: 2px solid rgba(102, 126, 234, 0.2);
  padding: 0.75rem 1rem;
  transition: all 0.3s ease;
  background: white;
}

.form-select:focus, .form-control:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
}

/* Text Truncate Enhancement */
.text-truncate {
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Responsive Enhancements */
@media (max-width: 768px) {
  .page-header {
    padding: 2rem 1.5rem;
    text-align: center;
  }
  
  .stats-card {
    margin-bottom: 1.5rem;
  }
  
  .customer-row:hover {
    transform: translateX(4px);
  }
  
  .customer-card:hover {
    transform: translateY(-5px);
  }
  
  .btn-group {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .btn-group .btn {
    margin-right: 0;
    width: 100%;
  }
}

/* Loading Animation */
@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

.loading-shimmer {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200px 100%;
  animation: shimmer 1.5s infinite;
}

/* Accessibility Improvements */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* High Contrast Mode */
@media (prefers-contrast: high) {
  .card, .customer-card, .stats-card {
    border: 2px solid #000;
  }
  
  .badge {
    border: 1px solid #000;
  }
}

/* Customer Search Dropdown Styles */
.customer-search-container {
  position: relative;
}

.customer-search-input {
  padding-right: 2.5rem !important;
  border-radius: 12px !important;
  border: 2px solid rgba(102, 126, 234, 0.2) !important;
  transition: all 0.3s ease;
  background: white;
}

.customer-search-input:focus {
  border-color: #667eea !important;
  box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25) !important;
}

.customer-search-container .search-icon {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: #667eea;
  pointer-events: none;
  z-index: 10;
}

.customer-suggestions {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 500px;
  width: max-content;
  max-width: 600px;
  background: white;
  border: 1px solid rgba(102, 126, 234, 0.2);
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  max-height: 400px;
  overflow-y: auto;
  margin-top: 0.5rem;
}

.customer-suggestion-item {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid rgba(102, 126, 234, 0.05);
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.customer-suggestion-item:hover {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
}

.customer-suggestion-item:last-child {
  border-bottom: none;
  border-radius: 0 0 12px 12px;
}

.customer-suggestion-item:first-child {
  border-radius: 12px 12px 0 0;
}

.customer-suggestion-main {
  flex: 1;
}

.customer-suggestion-name {
  font-weight: 600;
  color: #2d3748;
  margin-bottom: 0.25rem;
}

.customer-suggestion-phone {
  font-size: 0.875rem;
  color: #718096;
  margin-bottom: 0.125rem;
}

.customer-suggestion-address {
  font-size: 0.75rem;
  color: #a0aec0;
}

.customer-suggestion-delivery {
  font-size: 0.75rem;
  color: #667eea;
  background: rgba(102, 126, 234, 0.1);
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  white-space: nowrap;
}

.customer-loading {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 400px;
  width: max-content;
  max-width: 500px;
  background: white;
  border: 1px solid rgba(102, 126, 234, 0.2);
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  padding: 1rem 1.5rem;
  margin-top: 0.5rem;
  text-align: center;
  color: #718096;
  font-size: 0.875rem;
}

.search-highlight {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.2) 0%, rgba(118, 75, 162, 0.2) 100%);
  padding: 0.1rem 0.3rem;
  border-radius: 4px;
  font-weight: 600;
}

/* Print Styles */
@media print {
  .page-header {
    background: none !important;
    color: #000 !important;
    box-shadow: none !important;
  }
  
  .btn, .badge {
    display: none !important;
  }
  
  .card {
    box-shadow: none !important;
    border: 1px solid #000 !important;
  }
}
</style>

<!-- Unassign Delivery Person Modal -->
<div class="modal fade" id="unassignModal" tabindex="-1" aria-labelledby="unassignModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-info text-white">
        <h5 class="modal-title" id="unassignModalLabel">
          <i class="fas fa-user-times me-2"></i>Reassign Delivery Person
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="unassignModalContent">
          <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            <strong>Customer:</strong> <span id="modalCustomerName"></span><br>
            <strong>Currently Assigned To:</strong> <span id="modalCurrentDeliveryPerson"></span>
          </div>
          
          <form id="unassignForm">
            <div class="mb-3">
              <label for="newDeliveryPersonSelect" class="form-label">
                <i class="fas fa-truck me-2"></i>Select New Delivery Person
              </label>
              <select class="form-select" id="newDeliveryPersonSelect" name="delivery_person_id" required>
                <option value="">Choose a delivery person...</option>
                <!-- Options will be populated by JavaScript -->
              </select>
            </div>
            
            <div class="row">
              <div class="col-md-12">
                <div id="reassignmentSummary" class="alert alert-warning d-none">
                  <h6><i class="fas fa-calendar-alt me-2"></i>Reassignment Impact</h6>
                  <p class="mb-0">This will update delivery assignments from <strong>tomorrow onwards</strong>.</p>
                </div>
              </div>
            </div>
          </form>
        </div>
        
        <!-- Loading state -->
        <div id="unassignModalLoading" class="text-center d-none">
          <div class="spinner-border text-info" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          <p class="mt-2">Processing reassignment...</p>
        </div>
        
        <!-- Success state -->
        <div id="unassignModalSuccess" class="text-center d-none">
          <div class="text-success mb-3">
            <i class="fas fa-check-circle" style="font-size: 4rem;"></i>
          </div>
          <h5 class="text-success">Reassignment Successful!</h5>
          <p id="successMessage" class="text-muted"></p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          <i class="fas fa-times me-2"></i>Cancel
        </button>
        <button type="button" class="btn btn-info" id="confirmUnassignBtn">
          <i class="fas fa-user-check me-2"></i>Reassign Delivery Person
        </button>
        <button type="button" class="btn btn-success d-none" id="successCloseBtn" data-bs-dismiss="modal">
          <i class="fas fa-check me-2"></i>Close
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Customer Image Modal -->
<div class="modal fade" id="customerImageModal" tabindex="-1" aria-labelledby="customerImageModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="customerImageModalLabel">
          <i class="fas fa-user me-2"></i><span id="customerImageModalName">Customer</span>
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body text-center">
        <div id="customerImageContainer">
          <img id="customerImageDisplay" src="" alt="Customer Image" class="img-fluid rounded shadow" style="max-height: 400px; max-width: 100%;">
        </div>
        <div id="customerNoImage" class="d-none">
          <div class="text-center py-5">
            <i class="fas fa-user-circle text-muted" style="font-size: 8rem;"></i>
            <h5 class="mt-3 text-muted">No Image Available</h5>
            <p class="text-muted">This customer doesn't have a profile image.</p>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          <i class="fas fa-times me-2"></i>Close
        </button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const tableView = document.getElementById('tableView');
  const cardView = document.getElementById('cardView');
  const tableContent = document.getElementById('tableViewContent');
  const cardContent = document.getElementById('cardViewContent');
  
  if (tableView && cardView) {
    tableView.addEventListener('click', function() {
      tableView.classList.add('active');
      cardView.classList.remove('active');
      tableContent.classList.remove('d-none');
      cardContent.classList.add('d-none');
      // Re-initialize image zoom functionality after view change
      setTimeout(() => {
        if (window.makeImagesZoomable) {
          window.makeImagesZoomable();
        }
      }, 100);
    });
    
    cardView.addEventListener('click', function() {
      cardView.classList.add('active');
      tableView.classList.remove('active');
      cardContent.classList.remove('d-none');
      tableContent.classList.add('d-none');
      // Re-initialize image zoom functionality after view change
      setTimeout(() => {
        if (window.makeImagesZoomable) {
          window.makeImagesZoomable();
        }
      }, 100);
    });
  }
  
  // Initialize image zoom functionality for customers page
  if (window.makeImagesZoomable) {
    window.makeImagesZoomable();
  }
  
  // Initialize unassign modal functionality
  initializeUnassignModal();
  
  // Initialize customer image modal functionality
  initializeCustomerImageModal();
});

// Re-initialize on Turbo navigation
document.addEventListener('turbo:load', function() {
  if (window.makeImagesZoomable) {
    window.makeImagesZoomable();
  }
  
  // Re-initialize unassign modal on Turbo navigation
  initializeUnassignModal();
  
  // Re-initialize customer image modal on Turbo navigation
  initializeCustomerImageModal();
});

function initializeUnassignModal() {
  const unassignModal = document.getElementById('unassignModal');
  if (!unassignModal) return;

  // Store current customer data
  let currentCustomerId = null;
  let currentDeliveryPersonId = null;

  // Handle modal trigger buttons
  document.querySelectorAll('[data-bs-target="#unassignModal"]').forEach(button => {
    button.addEventListener('click', function() {
      currentCustomerId = this.dataset.customerId;
      currentDeliveryPersonId = this.dataset.currentDeliveryPersonId;
      
      // Populate modal with customer data
      document.getElementById('modalCustomerName').textContent = this.dataset.customerName;
      document.getElementById('modalCurrentDeliveryPerson').textContent = this.dataset.currentDeliveryPersonName;
      
      // Reset modal state
      resetModalState();
      
      // Load delivery people
      loadDeliveryPeople(currentDeliveryPersonId);
    });
  });

  // Handle reassign button click
  document.getElementById('confirmUnassignBtn').addEventListener('click', function() {
    const newDeliveryPersonId = document.getElementById('newDeliveryPersonSelect').value;
    if (!newDeliveryPersonId) {
      alert('Please select a delivery person.');
      return;
    }
    
    performReassignment(currentCustomerId, newDeliveryPersonId);
  });

  function resetModalState() {
    // Show content, hide loading and success
    document.getElementById('unassignModalContent').classList.remove('d-none');
    document.getElementById('unassignModalLoading').classList.add('d-none');
    document.getElementById('unassignModalSuccess').classList.add('d-none');
    
    // Show normal buttons, hide success button
    document.getElementById('confirmUnassignBtn').classList.remove('d-none');
    document.querySelector('[data-bs-dismiss="modal"]').classList.remove('d-none');
    document.getElementById('successCloseBtn').classList.add('d-none');
    
    // Clear select
    document.getElementById('newDeliveryPersonSelect').innerHTML = '<option value="">Choose a delivery person...</option>';
    
    // Hide summary
    document.getElementById('reassignmentSummary').classList.add('d-none');
  }

  function loadDeliveryPeople(excludeId) {
    fetch('/delivery_people.json')
      .then(response => response.json())
      .then(data => {
        const select = document.getElementById('newDeliveryPersonSelect');
        select.innerHTML = '<option value="">Choose a delivery person...</option>';
        
        data.forEach(person => {
          if (person.id != excludeId) {
            const option = document.createElement('option');
            option.value = person.id;
            option.textContent = `${person.name} (${person.customer_count || 0} customers)`;
            select.appendChild(option);
          }
        });
        
        // Show reassignment summary when a selection is made
        select.addEventListener('change', function() {
          if (this.value) {
            document.getElementById('reassignmentSummary').classList.remove('d-none');
          } else {
            document.getElementById('reassignmentSummary').classList.add('d-none');
          }
        });
      })
      .catch(error => {
        console.error('Error loading delivery people:', error);
        alert('Error loading delivery people. Please try again.');
      });
  }

  function performReassignment(customerId, newDeliveryPersonId) {
    // Show loading state
    document.getElementById('unassignModalContent').classList.add('d-none');
    document.getElementById('unassignModalLoading').classList.remove('d-none');
    
    const formData = new FormData();
    formData.append('delivery_person_id', newDeliveryPersonId);
    formData.append('_token', document.querySelector('meta[name="csrf-token"]').content);

    fetch(`/customers/${customerId}/reassign_delivery_person`, {
      method: 'PATCH',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
        'Accept': 'application/json'
      },
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Show success state
        document.getElementById('unassignModalLoading').classList.add('d-none');
        document.getElementById('unassignModalSuccess').classList.remove('d-none');
        document.getElementById('successMessage').textContent = data.message;
        
        // Hide normal buttons, show success button
        document.getElementById('confirmUnassignBtn').classList.add('d-none');
        document.querySelector('[data-bs-dismiss="modal"]').classList.add('d-none');
        document.getElementById('successCloseBtn').classList.remove('d-none');
        
        // Reload page after modal is closed
        document.getElementById('successCloseBtn').addEventListener('click', function() {
          location.reload();
        });
      } else {
        throw new Error(data.message || 'Reassignment failed');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      // Show content again and display error
      document.getElementById('unassignModalLoading').classList.add('d-none');
      document.getElementById('unassignModalContent').classList.remove('d-none');
      alert('Error: ' + error.message);
    });
  }
}

function initializeCustomerImageModal() {
  const customerRows = document.querySelectorAll('.customer-clickable');
  const modal = document.getElementById('customerImageModal');
  const modalName = document.getElementById('customerImageModalName');
  const imageContainer = document.getElementById('customerImageContainer');
  const imageDisplay = document.getElementById('customerImageDisplay');
  const noImageDiv = document.getElementById('customerNoImage');
  
  if (!modal) return;
  
  customerRows.forEach(row => {
    row.addEventListener('click', function(e) {
      // Don't trigger modal if clicking on action buttons
      if (e.target.closest('.btn') || e.target.closest('.btn-group')) {
        return;
      }
      
      const customerName = this.dataset.customerName;
      const customerImage = this.dataset.customerImage;
      
      // Set customer name in modal
      modalName.textContent = customerName;
      
      // Show or hide image based on availability
      if (customerImage && customerImage.trim() !== '') {
        imageContainer.classList.remove('d-none');
        noImageDiv.classList.add('d-none');
        imageDisplay.src = customerImage;
        imageDisplay.alt = `${customerName} Photo`;
      } else {
        imageContainer.classList.add('d-none');
        noImageDiv.classList.remove('d-none');
      }
      
      // Show the modal
      const bootstrapModal = new bootstrap.Modal(modal);
      bootstrapModal.show();
    });
  });
}
</script>
</div> <!-- End customers-content-wrapper -->

<style>
.customers-content-wrapper {
  margin-left: 0px;
  margin-right: 0px;
  padding: 0 15px;
  max-width: none !important;
  width: auto !important;
}

/* Remove scroll functionality and smooth scrolling */
html {
  scroll-behavior: auto !important;
}

body {
  overflow-x: hidden;
}

/* Prevent any smooth scrolling on the page */
* {
  scroll-behavior: auto !important;
}

/* Remove any table or container scrolling */
.table-responsive {
  overflow-x: visible !important;
  overflow-y: visible !important;
  -webkit-overflow-scrolling: auto !important;
}

.card-body {
  overflow: visible !important;
}

/* Ensure table doesn't create scrollbars */
.table {
  width: 100% !important;
  table-layout: auto !important;
}

/* Remove any container overflow */
#tableViewContent,
#cardViewContent {
  overflow: visible !important;
}

/* Disable any smooth scrolling animations */
.scroll-smooth,
.smooth-scroll {
  scroll-behavior: auto !important;
}

/* Make sure content fits properly in the layout */
@media (max-width: 768px) {
  .customers-content-wrapper {
    margin-left: 0px;
    margin-right: 0px;
    padding: 0 10px;
  }
}

@media (max-width: 576px) {
  .customers-content-wrapper {
    margin-left: 0px;
    margin-right: 0px;
    padding: 0 5px;
  }
}
</style>