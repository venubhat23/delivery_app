<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="csrf-token" content="<%= form_authenticity_token %>">
  <title>Invoice List - Atma Nirbhar Farm</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

  <style>
    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      background-attachment: fixed;
    }

    .main-container {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 25px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
      margin: 15px;
      overflow: hidden;
      min-height: calc(100vh - 30px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-section {
      background: linear-gradient(135deg, #5a4ec9 0%, #667eea 50%, #764ba2 100%);
      color: white;
      padding: 40px 30px;
      text-align: center;
      position: relative;
      overflow: hidden;
    }

    .header-section::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 20"><defs><radialGradient id="a" cx="50%" cy="40%"><stop offset="0%" style="stop-color:white;stop-opacity:0.1"/><stop offset="100%" style="stop-color:white;stop-opacity:0"/></radialGradient></defs><rect width="100" height="20" fill="url(%23a)"/></svg>');
      opacity: 0.3;
    }

    .header-section h1 {
      margin: 0;
      font-size: 2.8rem;
      font-weight: 800;
      text-shadow: 0 3px 6px rgba(0, 0, 0, 0.4);
      position: relative;
      z-index: 2;
      letter-spacing: -0.5px;
    }

    .header-section .subtitle {
      margin-top: 15px;
      font-size: 1.2rem;
      opacity: 0.95;
      position: relative;
      z-index: 2;
      font-weight: 400;
    }

    .header-icon {
      display: inline-block;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      padding: 15px;
      margin-bottom: 15px;
      backdrop-filter: blur(10px);
    }

    .header-icon i {
      font-size: 2rem;
    }

    .invoice-count {
      background: rgba(255, 255, 255, 0.2);
      padding: 8px 16px;
      border-radius: 20px;
      font-weight: 700;
      font-size: 1.1rem;
      display: inline-block;
      margin-top: 5px;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .invoice-list {
      padding: 35px;
      background: linear-gradient(to bottom, rgba(248, 249, 250, 0.8), rgba(248, 249, 250, 0.95));
      backdrop-filter: blur(5px);
    }

    .invoice-item {
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.95) 100%);
      border-radius: 20px;
      margin-bottom: 25px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
      overflow: hidden;
      transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(10px);
      position: relative;
    }

    .invoice-item::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 6px;
      background: linear-gradient(135deg, #5a4ec9 0%, #667eea 100%);
      border-radius: 0 3px 3px 0;
    }

    .invoice-item:hover {
      transform: translateY(-5px) scale(1.02);
      box-shadow: 0 15px 45px rgba(90, 78, 201, 0.25);
    }

    .invoice-item:nth-child(even):hover {
      box-shadow: 0 15px 45px rgba(118, 75, 162, 0.25);
    }

    .invoice-content {
      padding: 30px;
      position: relative;
    }

    .invoice-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      flex-wrap: wrap;
      padding-bottom: 15px;
      border-bottom: 2px solid rgba(90, 78, 201, 0.1);
    }

    .invoice-number {
      font-size: 1.6rem;
      font-weight: 800;
      background: linear-gradient(135deg, #5a4ec9 0%, #667eea 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin: 0;
      position: relative;
    }

    .invoice-number::before {
      content: '💰';
      position: absolute;
      left: -35px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 1.2rem;
    }

    .invoice-amount {
      font-size: 1.8rem;
      font-weight: 800;
      background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin: 0;
      text-shadow: 0 2px 4px rgba(40, 167, 69, 0.2);
    }

    .invoice-details {
      margin-bottom: 20px;
    }

    .detail-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 8px;
      font-size: 0.95rem;
    }

    .detail-label {
      color: #666;
      font-weight: 500;
    }

    .detail-value {
      color: #333;
      font-weight: 600;
    }

    .action-buttons {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }

    .btn-view {
      background: linear-gradient(135deg, #5a4ec9 0%, #667eea 50%, #764ba2 100%);
      border: none;
      color: white;
      padding: 15px 25px;
      border-radius: 15px;
      font-weight: 700;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 10px;
      transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
      flex: 1;
      justify-content: center;
      min-width: 140px;
      box-shadow: 0 4px 15px rgba(90, 78, 201, 0.2);
      position: relative;
      overflow: hidden;
    }

    .btn-view::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.6s;
    }

    .btn-view:hover::before {
      left: 100%;
    }

    .btn-view:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(90, 78, 201, 0.4);
      color: white;
      text-decoration: none;
    }

    .btn-whatsapp {
      background: linear-gradient(135deg, #25d366 0%, #20c997 50%, #128c7e 100%);
      border: none;
      color: white;
      padding: 15px 25px;
      border-radius: 15px;
      font-weight: 700;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 10px;
      transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
      flex: 1;
      justify-content: center;
      min-width: 140px;
      box-shadow: 0 4px 15px rgba(37, 211, 102, 0.2);
      position: relative;
      overflow: hidden;
    }

    .btn-whatsapp::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.6s;
    }

    .btn-whatsapp:hover::before {
      left: 100%;
    }

    .btn-whatsapp:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(37, 211, 102, 0.4);
      color: white;
      text-decoration: none;
    }

    .btn-complete {
      background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
      border: none;
      color: white;
      padding: 15px 25px;
      border-radius: 15px;
      font-weight: 700;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 10px;
      transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
      flex: 1;
      justify-content: center;
      min-width: 140px;
      box-shadow: 0 4px 15px rgba(0, 123, 255, 0.2);
      position: relative;
      overflow: hidden;
      cursor: pointer;
    }

    .btn-complete::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.6s;
    }

    .btn-complete:hover::before {
      left: 100%;
    }

    .btn-complete:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(0, 123, 255, 0.4);
      color: white;
    }

    .btn-delete {
      background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
      border: none;
      color: white;
      padding: 15px 25px;
      border-radius: 15px;
      font-weight: 700;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 10px;
      transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
      flex: 1;
      justify-content: center;
      min-width: 140px;
      box-shadow: 0 4px 15px rgba(220, 53, 69, 0.2);
      position: relative;
      overflow: hidden;
      cursor: pointer;
    }

    .btn-delete::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.6s;
    }

    .btn-delete:hover::before {
      left: 100%;
    }

    .btn-delete:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(220, 53, 69, 0.4);
      color: white;
    }

    .status-badge {
      padding: 8px 16px;
      border-radius: 25px;
      font-size: 0.85rem;
      font-weight: 700;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      border: 2px solid transparent;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .status-badge::before {
      content: '';
      width: 8px;
      height: 8px;
      border-radius: 50%;
      animation: pulse 2s infinite;
    }

    .status-pending {
      background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
      color: #856404;
      border-color: #f1c40f;
    }

    .status-pending::before {
      background-color: #f39c12;
    }

    .status-paid {
      background: linear-gradient(135deg, #d1ecf1 0%, #a8e6cf 100%);
      color: #0c5460;
      border-color: #20c997;
    }

    .status-paid::before {
      background-color: #28a745;
    }

    .status-overdue {
      background: linear-gradient(135deg, #f8d7da 0%, #ff9ff3 100%);
      color: #721c24;
      border-color: #e74c3c;
      animation: shake 0.5s ease-in-out infinite alternate;
    }

    .status-overdue::before {
      background-color: #e74c3c;
    }

    @keyframes pulse {
      0% { opacity: 1; }
      50% { opacity: 0.5; }
      100% { opacity: 1; }
    }

    @keyframes shake {
      0% { transform: translateX(0); }
      100% { transform: translateX(2px); }
    }

    .filters-section {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 25px;
      border-bottom: 1px solid rgba(90, 78, 201, 0.1);
    }

    .filters-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 25px;
      margin-bottom: 20px;
      max-width: 800px;
    }

    .filter-group {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    .filter-label {
      font-weight: 600;
      color: #5a4ec9;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .filter-input,
    .filter-select {
      padding: 12px 15px;
      border: 2px solid rgba(90, 78, 201, 0.2);
      border-radius: 12px;
      background: rgba(255, 255, 255, 0.9);
      font-size: 1rem;
      transition: all 0.3s ease;
      backdrop-filter: blur(5px);
    }

    .filter-input:focus,
    .filter-select:focus {
      outline: none;
      border-color: #5a4ec9;
      box-shadow: 0 0 0 3px rgba(90, 78, 201, 0.1);
      transform: translateY(-1px);
    }

    .sort-select {
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 249, 250, 0.95) 100%);
      border: 2px solid rgba(40, 167, 69, 0.3);
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
      background-position: right 12px center;
      background-repeat: no-repeat;
      background-size: 16px;
      padding-right: 40px;
    }

    .sort-select:focus {
      border-color: #28a745;
      box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
    }

    .sort-select option {
      padding: 12px;
      font-size: 1rem;
      background: white;
      color: #333;
    }

    .filter-buttons {
      display: flex;
      gap: 12px;
      flex-wrap: wrap;
    }

    .btn-filter {
      background: linear-gradient(135deg, #5a4ec9 0%, #667eea 100%);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 12px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
      box-shadow: 0 4px 15px rgba(90, 78, 201, 0.2);
    }

    .btn-filter:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(90, 78, 201, 0.3);
    }

    .btn-clear {
      background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 12px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
      box-shadow: 0 4px 15px rgba(108, 117, 125, 0.2);
    }

    .btn-clear:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(108, 117, 125, 0.3);
    }

    .results-summary {
      background: linear-gradient(135deg, rgba(90, 78, 201, 0.1) 0%, rgba(102, 126, 234, 0.1) 100%);
      border-radius: 12px;
      padding: 15px 20px;
      margin-bottom: 20px;
      border-left: 4px solid #5a4ec9;
    }

    .results-summary h4 {
      margin: 0;
      color: #5a4ec9;
      font-size: 1.1rem;
      font-weight: 700;
    }

    .results-summary p {
      margin: 5px 0 0 0;
      color: #666;
      font-size: 0.9rem;
    }

    .empty-state {
      text-align: center;
      padding: 60px 20px;
      color: #666;
    }

    .empty-state i {
      font-size: 4rem;
      margin-bottom: 20px;
      color: #ddd;
    }

    /* Mobile Responsive Design */
    @media (max-width: 768px) {
      .main-container {
        margin: 10px;
        border-radius: 15px;
        min-height: calc(100vh - 20px);
      }

      .header-section {
        padding: 20px 15px;
      }

      .header-section h1 {
        font-size: 2rem;
      }

      .header-section .subtitle {
        font-size: 1rem;
      }

      .filters-section {
        padding: 20px 15px;
      }

      .filters-container {
        grid-template-columns: 1fr;
        gap: 15px;
      }

      .filter-buttons {
        flex-direction: column;
        gap: 10px;
      }

      .btn-filter,
      .btn-clear {
        width: 100%;
        justify-content: center;
        padding: 15px 20px;
        font-size: 1rem;
      }

      .invoice-list {
        padding: 15px;
      }

      .invoice-content {
        padding: 20px;
      }

      .invoice-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }

      .invoice-number {
        font-size: 1.2rem;
      }

      .invoice-number::before {
        left: -25px;
        font-size: 1rem;
      }

      .invoice-amount {
        font-size: 1.3rem;
      }

      .detail-row {
        flex-direction: column;
        gap: 2px;
        margin-bottom: 12px;
      }

      .action-buttons {
        flex-direction: column;
        gap: 10px;
      }

      .btn-view,
      .btn-whatsapp,
      .btn-complete,
      .btn-delete {
        width: 100%;
        padding: 15px;
        font-size: 1rem;
      }
    }

    /* Delete Modal Styles */
    .delete-modal {
      display: none;
      position: fixed;
      z-index: 10000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.8);
      backdrop-filter: blur(5px);
      animation: fadeIn 0.3s ease;
    }

    .delete-modal.show {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }

    .modal-content {
      background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(248, 249, 250, 0.95) 100%);
      border-radius: 25px;
      padding: 40px 30px;
      max-width: 500px;
      width: 100%;
      text-align: center;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      position: relative;
      animation: slideIn 0.3s ease;
    }

    .modal-icon {
      background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
      border-radius: 50%;
      width: 80px;
      height: 80px;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 20px;
      animation: pulse 2s infinite;
    }

    .modal-icon i {
      font-size: 2rem;
      color: white;
    }

    .modal-title {
      font-size: 1.8rem;
      font-weight: 800;
      color: #dc3545;
      margin-bottom: 15px;
    }

    .modal-text {
      font-size: 1.1rem;
      color: #666;
      margin-bottom: 25px;
      line-height: 1.5;
    }

    .modal-input {
      width: 100%;
      padding: 15px 20px;
      border: 2px solid rgba(220, 53, 69, 0.3);
      border-radius: 15px;
      font-size: 1rem;
      margin-bottom: 25px;
      text-align: center;
      background: rgba(255, 255, 255, 0.9);
      transition: all 0.3s ease;
    }

    .modal-input:focus {
      outline: none;
      border-color: #dc3545;
      box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);
      transform: translateY(-1px);
    }

    .modal-input.error {
      border-color: #dc3545;
      background: linear-gradient(135deg, rgba(220, 53, 69, 0.1) 0%, rgba(248, 215, 218, 0.3) 100%);
      animation: shake 0.5s ease-in-out;
    }

    .modal-buttons {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
    }

    .modal-btn {
      flex: 1;
      padding: 15px 25px;
      border: none;
      border-radius: 15px;
      font-weight: 700;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      min-width: 120px;
    }

    .modal-btn-cancel {
      background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
      color: white;
    }

    .modal-btn-cancel:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(108, 117, 125, 0.3);
    }

    .modal-btn-delete {
      background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
      color: white;
      opacity: 0.5;
      cursor: not-allowed;
    }

    .modal-btn-delete.enabled {
      opacity: 1;
      cursor: pointer;
    }

    .modal-btn-delete.enabled:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(220, 53, 69, 0.4);
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(-50px) scale(0.9);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      75% { transform: translateX(5px); }
    }

    /* Success/Error Message Styles */
    .toast-message {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 20px 25px;
      border-radius: 15px;
      color: white;
      font-weight: 700;
      z-index: 10001;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
      animation: slideInRight 0.3s ease;
      max-width: 400px;
    }

    .toast-success {
      background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .toast-error {
      background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
    }

    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX(100%);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    @keyframes fadeOut {
      from {
        opacity: 1;
        transform: scale(1);
      }
      to {
        opacity: 0;
        transform: scale(0.8);
      }
    }

    @keyframes slideOutRight {
      from {
        opacity: 1;
        transform: translateX(0);
      }
      to {
        opacity: 0;
        transform: translateX(100%);
      }
    }

    /* Mobile specific styles for modal */
    @media (max-width: 768px) {
      .modal-content {
        padding: 30px 20px;
        margin: 10px;
      }

      .modal-title {
        font-size: 1.5rem;
      }

      .modal-text {
        font-size: 1rem;
      }

      .modal-buttons {
        flex-direction: column;
      }

      .modal-btn {
        width: 100%;
      }

      .toast-message {
        right: 10px;
        left: 10px;
        max-width: none;
      }
    }

    @media (max-width: 480px) {
      .header-section h1 {
        font-size: 1.8rem;
      }

      .header-section .subtitle {
        font-size: 0.9rem;
      }

      .invoice-content {
        padding: 15px;
      }

      .invoice-number {
        font-size: 1.1rem;
      }

      .invoice-number::before {
        left: -20px;
        font-size: 0.9rem;
      }

      .invoice-amount {
        font-size: 1.2rem;
      }
    }

    /* Pagination styles */
    .pagination-container {
      padding: 20px;
      text-align: center;
    }

    .pagination {
      justify-content: center;
    }

    .page-link {
      color: #5a4ec9;
      border-color: #5a4ec9;
    }

    .page-link:hover {
      background-color: #5a4ec9;
      border-color: #5a4ec9;
      color: white;
    }

    .page-item.active .page-link {
      background-color: #5a4ec9;
      border-color: #5a4ec9;
    }
  </style>
</head>
<body>
  <div class="main-container">
    <!-- Header Section -->
    <div class="header-section">
      <div class="header-icon">
        <i class="fas fa-receipt"></i>
      </div>
      <h1>Invoice List</h1>
      <p class="subtitle">
        Atma Nirbhar Farm -
        <span class="invoice-count">
          <% if params[:customer_name].present? || (params[:delivery_person_id].present? && params[:delivery_person_id] != 'all') %>
            <%= @total_invoice_count %> Filtered Invoices
          <% else %>
            <%= @total_invoice_count %> Total Invoices
          <% end %>
        </span>
      </p>
    </div>

    <!-- Filters Section -->
    <div class="filters-section">
      <form method="GET" action="/invoices_public" id="filtersForm">
        <div class="filters-container">
          <!-- Customer Name Filter -->
          <div class="filter-group">
            <label class="filter-label">
              <i class="fas fa-user me-2"></i>Customer Name
            </label>
            <input
              type="text"
              name="customer_name"
              class="filter-input"
              placeholder="Search by customer name..."
              value="<%= params[:customer_name] %>"
            />
          </div>

          <!-- Delivery Person Filter -->
          <div class="filter-group">
            <label class="filter-label">
              <i class="fas fa-truck me-2"></i>Delivery Person
            </label>
            <select name="delivery_person_id" class="filter-select">
              <option value="all">All Delivery People</option>
              <% @delivery_people.each do |person| %>
                <option value="<%= person.id %>" <%= 'selected' if params[:delivery_person_id] == person.id.to_s %>>
                  <%= person.name %>
                </option>
              <% end %>
            </select>
          </div>

          <!-- Sort By Filter -->
          <div class="filter-group">
            <label class="filter-label">
              <i class="fas fa-sort-amount-down me-2"></i>Sort By
            </label>
            <select name="sort_by" class="filter-select sort-select">
              <option value="amount_high_to_low" <%= 'selected' if params[:sort_by] == 'amount_high_to_low' || params[:sort_by].blank? %>>
                💰 Highest Amount First
              </option>
              <option value="amount_low_to_high" <%= 'selected' if params[:sort_by] == 'amount_low_to_high' %>>
                💸 Lowest Amount First
              </option>
              <option value="date_newest" <%= 'selected' if params[:sort_by] == 'date_newest' %>>
                📅 Newest First
              </option>
              <option value="date_oldest" <%= 'selected' if params[:sort_by] == 'date_oldest' %>>
                📆 Oldest First
              </option>
            </select>
          </div>
        </div>

        <!-- Filter Buttons -->
        <div class="filter-buttons">
          <button type="submit" class="btn-filter">
            <i class="fas fa-search"></i>
            Apply Filters
          </button>
          <button type="button" class="btn-clear" onclick="clearFilters()">
            <i class="fas fa-times"></i>
            Clear All
          </button>
        </div>
      </form>

      <!-- Results Summary -->
      <% if params[:customer_name].present? || (params[:delivery_person_id].present? && params[:delivery_person_id] != 'all') %>
        <div class="results-summary">
          <h4><i class="fas fa-filter me-2"></i>Filtered Results</h4>
          <p>
            <strong>Showing <%= @total_invoice_count %> invoices</strong>
            <% if params[:customer_name].present? %>
              for "<%= params[:customer_name] %>"
            <% end %>
            <% if params[:delivery_person_id].present? && params[:delivery_person_id] != 'all' %>
              <% delivery_person = @delivery_people.find { |p| p.id == params[:delivery_person_id].to_i } %>
              <% if delivery_person %>
                • Delivery Person: <%= delivery_person.name %>
              <% end %>
            <% end %>
          </p>
        </div>
      <% else %>
        <div class="results-summary">
          <h4><i class="fas fa-list me-2"></i>All Invoices</h4>
          <p><strong>Showing <%= @total_invoice_count %> total invoices</strong> from Atma Nirbhar Farm</p>
        </div>
      <% end %>
    </div>

    <!-- Invoice List Section -->
    <div class="invoice-list">
      <% if @invoices.any? %>
        <% @invoices.each do |invoice| %>
          <div class="invoice-item" data-invoice-id="<%= invoice.id %>">
            <div class="invoice-content">
              <!-- Invoice Header -->
              <div class="invoice-header">
                <h3 class="invoice-number">#<%= invoice.formatted_number %></h3>
                <h3 class="invoice-amount">₹<%= number_with_delimiter(invoice.total_amount, delimiter: ',') %></h3>
              </div>

              <!-- Invoice Details -->
              <div class="invoice-details">
                <div class="detail-row">
                  <span class="detail-label"><i class="fas fa-user me-2"></i>Customer:</span>
                  <span class="detail-value"><%= invoice.customer&.name || 'N/A' %></span>
                </div>
                <div class="detail-row">
                  <span class="detail-label"><i class="fas fa-calendar me-2"></i>Invoice Date:</span>
                  <span class="detail-value"><%= invoice.invoice_date&.strftime('%d %b %Y') || invoice.created_at&.strftime('%d %b %Y') %></span>
                </div>
                <div class="detail-row">
                  <span class="detail-label"><i class="fas fa-calendar-check me-2"></i>Due Date:</span>
                  <span class="detail-value"><%= invoice.due_date&.strftime('%d %b %Y') || 'Not set' %></span>
                </div>
                <div class="detail-row">
                  <span class="detail-label"><i class="fas fa-info-circle me-2"></i>Status:</span>
                  <span class="detail-value">
                    <% case invoice.status %>
                    <% when 'paid' %>
                      <span class="status-badge status-paid">Paid</span>
                    <% when 'pending' %>
                      <span class="status-badge status-pending">Pending</span>
                    <% else %>
                      <% if invoice.overdue? %>
                        <span class="status-badge status-overdue">Overdue</span>
                      <% else %>
                        <span class="status-badge status-pending"><%= invoice.status.humanize %></span>
                      <% end %>
                    <% end %>
                  </span>
                </div>
                <% if invoice.customer&.phone_number.present? %>
                  <div class="detail-row">
                    <span class="detail-label"><i class="fas fa-phone me-2"></i>Phone:</span>
                    <span class="detail-value"><%= invoice.customer.phone_number %></span>
                  </div>
                <% end %>
              </div>

              <!-- Action Buttons -->
              <div class="action-buttons">
                <%
                  # Generate share token if not exists
                  invoice.generate_share_token if invoice.share_token.blank?
                  invoice.save! if invoice.changed?

                  # Generate public URL
                  host = 'atmanirbharfarmbangalore.com'
                  public_url = "https://#{host}/invoice/#{invoice.share_token}"
                %>
                <a href="<%= public_url %>" class="btn-view" target="_blank">
                  <i class="fas fa-eye"></i>
                  View Invoice
                </a>
                <% if invoice.customer&.phone_number.present? %>
                  <button class="btn-whatsapp" onclick="shareViaWhatsApp('<%= invoice.customer.phone_number %>', '<%= public_url %>', '<%= invoice.formatted_number %>', '<%= number_with_delimiter(invoice.total_amount, delimiter: ',') %>', '<%= invoice.customer.name %>')">
                    <i class="fab fa-whatsapp"></i>
                    Share WhatsApp
                  </button>
                <% else %>
                  <button class="btn-whatsapp" onclick="shareViaWhatsApp('', '<%= public_url %>', '<%= invoice.formatted_number %>', '<%= number_with_delimiter(invoice.total_amount, delimiter: ',') %>', '<%= invoice.customer&.name || 'Customer' %>')">
                    <i class="fab fa-whatsapp"></i>
                    Share WhatsApp
                  </button>
                <% end %>

                <!-- Complete Button -->
                <% unless invoice.status == 'completed' %>
                  <button class="btn-complete" onclick="completeInvoice('<%= invoice.id %>', '<%= invoice.formatted_number %>')">
                    <i class="fas fa-check-circle"></i>
                    Complete
                  </button>
                <% end %>

                <!-- Delete Button -->
                <button class="btn-delete" onclick="openDeleteModal('<%= invoice.id %>', '<%= invoice.formatted_number %>')">
                  <i class="fas fa-trash-alt"></i>
                  Delete
                </button>
              </div>
            </div>
          </div>
        <% end %>

        <!-- Pagination -->
        <% if @invoices.respond_to?(:total_pages) && @invoices.total_pages > 1 %>
          <div class="pagination-container">
            <%= paginate @invoices, theme: 'twitter_bootstrap_5' %>
          </div>
        <% end %>
      <% else %>
        <div class="empty-state">
          <i class="fas fa-inbox"></i>
          <h3>No Invoices Found</h3>
          <p>There are no invoices available at the moment.</p>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div id="deleteModal" class="delete-modal">
    <div class="modal-content">
      <div class="modal-icon">
        <i class="fas fa-exclamation-triangle"></i>
      </div>
      <h2 class="modal-title">Delete Invoice</h2>
      <p class="modal-text">
        Are you sure you want to delete invoice <span id="invoiceNumber"></span>?<br>
        This action cannot be undone and will delete all associated invoice items.
      </p>
      <p class="modal-text">
        <strong>Type "DELETE" to confirm:</strong>
      </p>
      <input type="text" id="deleteConfirmInput" class="modal-input" placeholder="Type DELETE to confirm" autocomplete="off">
      <div class="modal-buttons">
        <button class="modal-btn modal-btn-cancel" onclick="closeDeleteModal()">
          <i class="fas fa-times me-2"></i>Cancel
        </button>
        <button class="modal-btn modal-btn-delete" id="confirmDeleteBtn" onclick="confirmDelete()">
          <i class="fas fa-trash-alt me-2"></i>Delete Invoice
        </button>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

  <script>
    // CSRF Token helper function
    function getCSRFToken() {
      const metaTag = document.querySelector('meta[name="csrf-token"]');
      return metaTag ? metaTag.getAttribute('content') : '';
    }

    function shareViaWhatsApp(phoneNumber, invoiceUrl, invoiceNumber, amount, customerName) {
      // Get current month and year (you can enhance this to get actual invoice date)
      const currentDate = new Date();
      const monthYear = currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });

      // Build WhatsApp message in the enhanced format
      const message = `👋 Hello ${customerName}!

🎉 Your ${monthYear} Invoice is ready to view! 🧾

───────────────────
📋 Invoice #: ${invoiceNumber}
💵 Total Amount: ₹${amount}
📆 Due Date: ${new Date(Date.now() + 10*24*60*60*1000).toLocaleDateString('en-GB')}
───────────────────

👇 Click below to download your invoice:
${invoiceUrl}

Thank you for trusting Atma Nirbhar Farm! 🙏

🏠 Bangalore
📞 +91 9972808044 | +91 9008860329
📱 WhatsApp: +91 9972808044
📧 atmanirbharfarmbangalore@gmail.com`;

      let whatsappUrl;

      if (phoneNumber && phoneNumber.trim() !== '') {
        // Clean phone number - remove non-digits
        let cleanPhone = phoneNumber.replace(/\D/g, '');

        // Add country code if needed (assuming Indian numbers)
        if (!cleanPhone.startsWith('91')) {
          cleanPhone = '91' + cleanPhone.replace(/^0/, '');
        }

        // Create WhatsApp URL with phone number
        whatsappUrl = `https://wa.me/${cleanPhone}?text=${encodeURIComponent(message)}`;
      } else {
        // No phone number, just open WhatsApp with message
        whatsappUrl = `https://wa.me/?text=${encodeURIComponent(message)}`;
      }

      // Open WhatsApp
      window.open(whatsappUrl, '_blank');
    }

    // Clear all filters function
    function clearFilters() {
      window.location.href = '/invoices_public';
    }

    // Global variables for delete modal
    let currentInvoiceId = null;
    let currentInvoiceNumber = null;

    // Complete Invoice Function
    function completeInvoice(invoiceId, invoiceNumber) {
      const button = event.target.closest('.btn-complete');
      const originalText = button.innerHTML;

      // Show loading state
      button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Completing...';
      button.disabled = true;

      fetch(`/invoices_public/${invoiceId}/complete`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast(data.message, 'success');
          // Remove the complete button since invoice is now completed
          button.remove();
          // Update status badge
          const statusElement = button.closest('.invoice-item').querySelector('.detail-value .status-badge');
          if (statusElement) {
            statusElement.className = 'status-badge status-paid';
            statusElement.textContent = 'Completed';
          }
        } else {
          showToast(data.message, 'error');
          button.innerHTML = originalText;
          button.disabled = false;
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showToast('An error occurred while completing the invoice.', 'error');
        button.innerHTML = originalText;
        button.disabled = false;
      });
    }

    // Open Delete Modal
    function openDeleteModal(invoiceId, invoiceNumber) {
      currentInvoiceId = invoiceId;
      currentInvoiceNumber = invoiceNumber;

      document.getElementById('invoiceNumber').textContent = `#${invoiceNumber}`;
      document.getElementById('deleteConfirmInput').value = '';
      document.getElementById('confirmDeleteBtn').classList.remove('enabled');
      document.getElementById('deleteModal').classList.add('show');

      // Focus on input for better UX
      setTimeout(() => {
        document.getElementById('deleteConfirmInput').focus();
      }, 100);
    }

    // Close Delete Modal
    function closeDeleteModal() {
      document.getElementById('deleteModal').classList.remove('show');
      currentInvoiceId = null;
      currentInvoiceNumber = null;
    }

    // Confirm Delete
    function confirmDelete() {
      if (!currentInvoiceId) return;

      const confirmBtn = document.getElementById('confirmDeleteBtn');
      const originalText = confirmBtn.innerHTML;

      // Show loading state
      confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
      confirmBtn.disabled = true;

      fetch(`/invoices_public/${currentInvoiceId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast(data.message, 'success');
          closeDeleteModal();
          // Remove the invoice item from the DOM
          const invoiceElement = document.querySelector(`[data-invoice-id="${currentInvoiceId}"]`);
          if (invoiceElement) {
            invoiceElement.style.animation = 'fadeOut 0.5s ease';
            setTimeout(() => {
              invoiceElement.remove();
              // Update invoice count
              updateInvoiceCount();
            }, 500);
          } else {
            // Fallback: reload page
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          }
        } else {
          showToast(data.message, 'error');
          confirmBtn.innerHTML = originalText;
          confirmBtn.disabled = false;
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showToast('An error occurred while deleting the invoice.', 'error');
        confirmBtn.innerHTML = originalText;
        confirmBtn.disabled = false;
      });
    }

    // Show Toast Message
    function showToast(message, type) {
      const toast = document.createElement('div');
      toast.className = `toast-message toast-${type}`;
      toast.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
        ${message}
      `;

      document.body.appendChild(toast);

      // Auto remove after 5 seconds
      setTimeout(() => {
        toast.style.animation = 'slideOutRight 0.3s ease';
        setTimeout(() => {
          document.body.removeChild(toast);
        }, 300);
      }, 5000);
    }

    // Update Invoice Count (helper function)
    function updateInvoiceCount() {
      const invoiceItems = document.querySelectorAll('.invoice-item');
      const count = invoiceItems.length;
      const countElements = document.querySelectorAll('.invoice-count, [data-count]');
      countElements.forEach(el => {
        el.textContent = `${count} ${count === 1 ? 'Invoice' : 'Invoices'}`;
      });
    }

    // Delete confirmation input validation
    document.addEventListener('DOMContentLoaded', function() {
      const deleteInput = document.getElementById('deleteConfirmInput');
      const confirmBtn = document.getElementById('confirmDeleteBtn');

      if (deleteInput && confirmBtn) {
        deleteInput.addEventListener('input', function() {
          const value = this.value.trim().toUpperCase();

          if (value === 'DELETE') {
            confirmBtn.classList.add('enabled');
            this.classList.remove('error');
          } else {
            confirmBtn.classList.remove('enabled');
            if (value.length > 0 && value !== 'DELETE') {
              this.classList.add('error');
            } else {
              this.classList.remove('error');
            }
          }
        });

        // Allow Enter key to confirm if validation passes
        deleteInput.addEventListener('keypress', function(e) {
          if (e.key === 'Enter' && confirmBtn.classList.contains('enabled')) {
            confirmDelete();
          }
        });
      }

      // Close modal when clicking outside
      const deleteModal = document.getElementById('deleteModal');
      if (deleteModal) {
        deleteModal.addEventListener('click', function(e) {
          if (e.target === this) {
            closeDeleteModal();
          }
        });
      }

      // Add ESC key listener to close modal
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && deleteModal.classList.contains('show')) {
          closeDeleteModal();
        }
      });

      // Add loading states to buttons
      const whatsappButtons = document.querySelectorAll('.btn-whatsapp');
      whatsappButtons.forEach(button => {
        button.addEventListener('click', function() {
          const originalText = this.innerHTML;
          this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Opening WhatsApp...';

          setTimeout(() => {
            this.innerHTML = originalText;
          }, 2000);
        });
      });

      // Auto-submit form on filter change for better UX
      const filterSelects = document.querySelectorAll('.filter-select');
      filterSelects.forEach(select => {
        select.addEventListener('change', function() {
          // Show loading state for sort select
          if (select.classList.contains('sort-select')) {
            select.style.background = 'linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(32, 201, 151, 0.1) 100%)';
            select.style.borderColor = '#28a745';
          }

          // Small delay for better UX
          setTimeout(() => {
            document.getElementById('filtersForm').submit();
          }, 300);
        });
      });

      // Add search on Enter key for customer name input
      const customerNameInput = document.querySelector('input[name="customer_name"]');
      if (customerNameInput) {
        customerNameInput.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
            e.preventDefault();
            document.getElementById('filtersForm').submit();
          }
        });
      }
    });
  </script>
</body>
</html>