<!-- app/views/reports/show.html.erb -->
<%
  report_icons = {
    'gst' => 'fa-file-invoice',
    'sales' => 'fa-chart-line',
    'enhanced_sales' => 'fa-chart-bar',
    'delivery' => 'fa-truck',
    'customer' => 'fa-users',
    'product' => 'fa-box',
    'financial' => 'fa-dollar-sign'
  }

  report_titles = {
    'gst' => 'GST Report Details',
    'sales' => 'Sales Report Details',
    'enhanced_sales' => 'Enhanced Sales Report Details',
    'delivery' => 'Delivery Report Details',
    'customer' => 'Customer Report Details',
    'product' => 'Product Performance Report Details',
    'financial' => 'Financial Summary Report Details'
  }

  icon = report_icons[@report_type] || 'fa-file-invoice'
  title = report_titles[@report_type] || 'Report Details'
%>

<div class="page-header">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <div>
      <h1 class="h2 mb-2">
        <i class="fas <%= icon %> me-3"></i><%= title %>
      </h1>
      <p class="text-muted mb-0">
        <%= @report.respond_to?(:name) ? @report.name : "Report" %> |
        <%= @from_date.strftime('%d/%m/%Y') %> to <%= @to_date.strftime('%d/%m/%Y') %>
      </p>
    </div>
    <div>
      <%= link_to reports_path, class: "btn btn-outline-secondary me-2" do %>
        <i class="fas fa-arrow-left me-2"></i>Back to Reports
      <% end %>
      <%= link_to report_path(@report.respond_to?(:id) ? @report.id : 1, format: :csv),
                  class: "btn btn-success me-2 download-csv-btn",
                  data: { report_id: @report.respond_to?(:id) ? @report.id : 1, report_type: @report_type } do %>
        <i class="fas fa-file-csv me-2"></i>Download CSV
      <% end %>
      <%= link_to download_pdf_report_path(@report.respond_to?(:id) ? @report.id : 1),
                  class: "btn btn-primary download-pdf-btn",
                  target: "_blank",
                  data: { report_id: @report.respond_to?(:id) ? @report.id : 1, report_type: @report_type } do %>
        <i class="fas fa-download me-2"></i>Download PDF
      <% end %>
    </div>
  </div>
</div>

<% if @report_type == 'gst' %>
  <!-- GST Report Header -->
  <div class="card mb-4">
    <div class="card-body">
      <div class="row">
        <div class="col-md-6">
          <h5 class="fw-bold mb-3">GSTR-1</h5>
          <h6 class="fw-bold mb-2">Atma Nirbhar Farm</h6>
          <p class="mb-1">Mobile: 9972808044</p>
          <p class="mb-1">GST No: 29AOIPT8113K1ZC</p>
        </div>
        <div class="col-md-6 text-md-end">
          <p class="mb-1"><strong>Date Range:</strong> <%= @from_date.strftime('%d/%m/%Y') %> to <%= @to_date.strftime('%d/%m/%Y') %></p>
          <p class="mb-1"><strong>Generated On:</strong> <%= Time.current.strftime('%d/%m/%Y at %I:%M %p') %></p>
        </div>
      </div>
    </div>
  </div>
<% else %>
  <!-- General Report Header -->
  <div class="card mb-4">
    <div class="card-body">
      <div class="row">
        <div class="col-md-6">
          <h5 class="fw-bold mb-3"><%= title %></h5>
          <h6 class="fw-bold mb-2">Atma Nirbhar Farm</h6>
          <p class="mb-1">Mobile: 9972808044</p>
        </div>
        <div class="col-md-6 text-md-end">
          <p class="mb-1"><strong>Date Range:</strong> <%= @from_date.strftime('%d/%m/%Y') %> to <%= @to_date.strftime('%d/%m/%Y') %></p>
          <p class="mb-1"><strong>Generated On:</strong> <%= Time.current.strftime('%d/%m/%Y at %I:%M %p') %></p>
        </div>
      </div>
    </div>
  </div>
<% end %>

<!-- Summary Cards -->
<%= render partial: 'report_summary', locals: { report_type: @report_type, report_data: @report_data } %>

<!-- Report Data Table -->
<%= render partial: 'report_data_table', locals: { report_type: @report_type, report_data: @report_data } %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize DataTable if available
  if (typeof $('#reportTable').DataTable === 'function') {
    $('#reportTable').DataTable({
      responsive: true,
      pageLength: 25,
      order: [[0, 'desc']], // Sort by first column descending
      dom: 'Bfrtip',
      buttons: [
        'copy', 'csv', 'excel', 'print'
      ]
    });
  }

  // Add button loaders for CSV and PDF downloads
  function addDownloadLoaders() {
    // Handle CSV download button clicks
    document.addEventListener('click', function(e) {
      if (e.target.closest('.download-csv-btn')) {
        const btn = e.target.closest('.download-csv-btn');
        showDownloadLoader(btn, 'csv');
      }
    });

    // Handle PDF download button clicks
    document.addEventListener('click', function(e) {
      if (e.target.closest('.download-pdf-btn')) {
        const btn = e.target.closest('.download-pdf-btn');
        showDownloadLoader(btn, 'pdf');
      }
    });
  }

  function showDownloadLoader(button, type) {
    const originalContent = button.innerHTML;
    const reportType = button.dataset.reportType;

    // Store original content
    button.dataset.originalContent = originalContent;

    // Disable button and show loader
    button.disabled = true;
    button.style.pointerEvents = 'none';

    if (type === 'csv') {
      button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Generating CSV...';
      button.className = 'btn btn-success me-2 download-csv-btn generating';

      // Enhanced Sales Report takes longer, adjust timing
      const timeout = reportType === 'enhanced_sales' ? 6000 : 3000;
      setTimeout(() => {
        resetDownloadLoader(button, 'csv');
      }, timeout);

    } else if (type === 'pdf') {
      button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Generating PDF...';
      button.className = 'btn btn-primary download-pdf-btn generating';

      // Enhanced Sales Report PDF takes longer
      const timeout = reportType === 'enhanced_sales' ? 8000 : 5000;
      setTimeout(() => {
        resetDownloadLoader(button, 'pdf');
      }, timeout);
    }
  }

  function resetDownloadLoader(button, type) {
    if (button.dataset.originalContent) {
      button.innerHTML = button.dataset.originalContent;
      button.disabled = false;
      button.style.pointerEvents = 'auto';

      // Restore original classes
      if (type === 'csv') {
        button.className = 'btn btn-success me-2 download-csv-btn';
      } else if (type === 'pdf') {
        button.className = 'btn btn-primary download-pdf-btn';
      }

      delete button.dataset.originalContent;
    }
  }

  // Initialize download loaders
  addDownloadLoaders();
});
</script>

<style>
.stats-card {
  background: #fff;
  border-radius: 10px;
  padding: 1.5rem;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  border-left: 4px solid #007bff;
  text-align: center;
  transition: transform 0.2s;
}

.stats-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.stats-card-primary { border-left-color: #007bff; }
.stats-card-success { border-left-color: #28a745; }
.stats-card-info { border-left-color: #17a2b8; }
.stats-card-warning { border-left-color: #ffc107; }
.stats-card-danger { border-left-color: #dc3545; }

.stats-icon {
  font-size: 2rem;
  margin-bottom: 0.5rem;
  opacity: 0.7;
}

.stats-number {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 0.25rem;
}

.stats-label {
  font-size: 0.875rem;
  color: #6c757d;
  font-weight: 500;
}

.table th {
  font-size: 0.875rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.table td {
  font-size: 0.875rem;
  vertical-align: middle;
}

.page-header {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 2rem 1rem;
  margin: -1rem -1rem 2rem -1rem;
  border-radius: 0 0 10px 10px;
}

.page-header .btn {
  color: white;
  border-color: white;
}

.page-header .btn:hover {
  background-color: white;
  color: #667eea;
}

/* Download Button Loading States */
.download-csv-btn.generating,
.download-pdf-btn.generating {
  opacity: 0.8;
  cursor: not-allowed;
  transform: none !important;
}

.download-csv-btn.generating:hover,
.download-pdf-btn.generating:hover {
  transform: none !important;
}

.download-csv-btn .fa-spinner,
.download-pdf-btn .fa-spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>