<!-- app/views/parties/bulk_import.html.erb -->
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">
    <i class="fas fa-upload me-2"></i>Bulk Add Parties
  </h1>
  <%= link_to parties_path, class: "btn btn-outline-secondary" do %>
    <i class="fas fa-arrow-left me-2"></i>Back to Parties
  <% end %>
</div>

<div class="row">
  <div class="col-12">
    <!-- Upload Limit Notice -->
    <div class="alert alert-warning d-flex align-items-center mb-4">
      <i class="fas fa-exclamation-triangle me-2"></i>
      <strong>You can upload only 4000 parties</strong> at once. For uploading more than 4000 parties, please contact our support team at 7400417400
    </div>

    <!-- Instructions Card -->
    <div class="card shadow mb-4">
      <div class="card-header bg-info text-white py-3">
        <h6 class="m-0 font-weight-bold">
          <i class="fas fa-info-circle me-2"></i>How to Use
        </h6>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <h6 class="text-primary mb-3">Upload Instructions:</h6>
            <ul class="list-unstyled">
              <li class="mb-2">
                <i class="fas fa-check text-success me-2"></i>
                You can upload up to <strong>4000 parties</strong> at once
              </li>
              <li class="mb-2">
                <i class="fas fa-check text-success me-2"></i>
                Use CSV format (.csv) with proper headers
              </li>
              <li class="mb-2">
                <i class="fas fa-check text-success me-2"></i>
                Upload a CSV file or paste your CSV data directly
              </li>
              <li class="mb-2">
                <i class="fas fa-check text-success me-2"></i>
                Ensure data aligns with required fields to avoid upload errors
              </li>
            </ul>
          </div>
          <div class="col-md-6">
            <h6 class="text-primary mb-3">Required Fields:</h6>
            <div class="row">
              <div class="col-6">
                <span class="badge bg-danger mb-1">Required</span>
                <ul class="list-unstyled small text-muted">
                  <li>• name</li>
                  <li>• mobile_number</li>
                </ul>
              </div>
              <div class="col-6">
                <span class="badge bg-secondary mb-1">Optional</span>
                <ul class="list-unstyled small text-muted">
                  <li>• gst_number</li>
                  <li>• shipping_address</li>
                  <li>• shipping_pincode</li>
                  <li>• shipping_city</li>
                  <li>• shipping_state</li>
                  <li>• billing_address</li>
                  <li>• billing_pincode</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Upload Format Selection -->
    <div class="card shadow mb-4">
      <div class="card-header bg-primary text-white py-3">
        <h6 class="m-0 font-weight-bold">
          <i class="fas fa-cog me-2"></i>Select Upload Format
        </h6>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="upload-option">
              <input type="radio" class="btn-check" name="uploadFormat" id="csvFileOption" value="file" checked>
              <label class="btn btn-outline-primary w-100 p-3" for="csvFileOption">
                <i class="fas fa-file-csv fa-2x mb-2 d-block"></i>
                <strong>CSV File Upload</strong>
                <small class="d-block text-muted mt-1">Upload a .csv file from your computer</small>
              </label>
            </div>
          </div>
          <div class="col-md-6">
            <div class="upload-option">
              <input type="radio" class="btn-check" name="uploadFormat" id="csvTextOption" value="text">
              <label class="btn btn-outline-secondary w-100 p-3" for="csvTextOption">
                <i class="fas fa-edit fa-2x mb-2 d-block"></i>
                <strong>Direct CSV Input</strong>
                <small class="d-block text-muted mt-1">Copy and paste CSV data directly</small>
              </label>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- CSV File Upload Card -->
    <div class="card shadow mb-4" id="fileUploadCard">
      <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">
          <i class="fas fa-cloud-upload-alt me-2"></i>CSV File Upload
        </h6>
        <div class="card-header-actions">
          <button type="button" class="btn btn-sm btn-outline-danger" id="clearFileBtn">
            <i class="fas fa-trash me-1"></i>Clear
          </button>
        </div>
      </div>
      <div class="card-body">
        <!-- File Upload Area -->
        <div class="upload-area" id="uploadArea">
          <div class="upload-content">
            <i class="fas fa-cloud-upload-alt upload-icon"></i>
            <h5 class="upload-title">Choose CSV File or Drag & Drop</h5>
            <p class="upload-subtitle text-muted">Select a CSV file with party data</p>
            <input type="file" id="csvFile" accept=".csv" class="file-input" hidden>
            <button type="button" class="btn btn-primary" onclick="document.getElementById('csvFile').click()">
              <i class="fas fa-folder-open me-2"></i>Browse Files
            </button>
            <p class="file-requirements mt-3">
              <small class="text-muted">
                <i class="fas fa-info-circle me-1"></i>
                Supported format: CSV (.csv) • Maximum file size: 5MB
              </small>
            </p>
          </div>
        </div>

        <!-- File Info Display -->
        <div id="fileInfo" class="file-info" style="display: none;">
          <div class="d-flex align-items-center justify-content-between p-3 bg-light rounded">
            <div class="d-flex align-items-center">
              <i class="fas fa-file-csv text-success me-3 fa-2x"></i>
              <div>
                <h6 class="mb-1" id="fileName">filename.csv</h6>
                <small class="text-muted">
                  <span id="fileSize">0 KB</span> • 
                  <span id="fileRows">0 rows</span>
                </small>
              </div>
            </div>
            <button type="button" class="btn btn-sm btn-outline-danger" id="removeFileBtn">
              <i class="fas fa-times"></i>
            </button>
          </div>
        </div>

        <!-- File Validation Status -->
        <div id="fileValidationStatus" class="alert" style="display: none;"></div>

        <!-- File Action Buttons -->
        <div class="d-flex justify-content-between align-items-center mt-4" id="fileActions" style="display: none;">
          <div class="btn-group">
            <button type="button" class="btn btn-outline-primary" id="validateFileBtn">
              <i class="fas fa-check-circle me-2"></i>Validate CSV File
            </button>
          </div>
          <div>
            <button type="button" class="btn btn-success btn-lg" id="importFileBtn" style="display: none;">
              <i class="fas fa-upload me-2"></i>Add Parties
              <span class="badge bg-light text-success ms-2" id="fileImportCount">0</span>
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- CSV Text Input Card -->
    <div class="card shadow mb-4" id="textInputCard" style="display: none;">
      <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">
          <i class="fas fa-edit me-2"></i>Direct CSV Input
        </h6>
        <div class="card-header-actions">
          <button type="button" class="btn btn-sm btn-outline-secondary" id="loadSampleBtn">
            <i class="fas fa-copy me-1"></i>Load Sample
          </button>
          <button type="button" class="btn btn-sm btn-outline-danger" id="clearTextBtn">
            <i class="fas fa-trash me-1"></i>Clear
          </button>
        </div>
      </div>
      <div class="card-body">
        <!-- CSV Input Form -->
        <form id="csvImportForm">
          <!-- CSV Textarea -->
          <div class="mb-4">
            <div class="csv-input-container">
              <textarea 
                class="form-control csv-textarea" 
                id="csvData" 
                name="csv_data"
                rows="15" 
                placeholder="Paste your CSV data here...&#10;&#10;Example:&#10;name,mobile_number,gst_number,shipping_address,shipping_pincode,shipping_city,shipping_state,billing_address,billing_pincode&#10;Sample Party 1,8999999990,09AABCS1429B1ZS,j1204 salar puria,500068,Bangalore,Karnataka,j1204 salar puria,500068&#10;Sample Party 2,8999999991,09AABCS1429B1ZS,255/93 Shastri Nagar Rakabganj Lucknow,226004,Lucknow,Uttar Pradesh,j1205 salar puria,500068"></textarea>
              <div class="csv-counter">
                <small class="text-muted">
                  <span id="lineCount">0</span> lines • 
                  <span id="charCount">0</span> characters
                </small>
              </div>
            </div>
          </div>

          <!-- Text Validation Status -->
          <div id="textValidationStatus" class="alert" style="display: none;"></div>

          <!-- CSV Preview -->
          <div id="csvPreview" style="display: none;">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h6 class="mb-0">
                <i class="fas fa-table me-2"></i>Preview 
                <span class="badge bg-primary" id="previewCount">0</span>
              </h6>
              <small class="text-muted">Showing first 10 rows</small>
            </div>
            <div class="table-responsive preview-table-container">
              <table class="table table-sm table-bordered table-hover" id="csvPreviewTable">
                <thead class="table-light">
                  <tr id="previewHeaders">
                    <!-- Headers will be populated dynamically -->
                  </tr>
                </thead>
                <tbody id="csvPreviewBody">
                  <!-- Rows will be populated dynamically -->
                </tbody>
              </table>
            </div>
          </div>

          <!-- Text Action Buttons -->
          <div class="d-flex justify-content-between align-items-center mt-4">
            <div class="btn-group">
              <button type="button" class="btn btn-outline-primary" id="validateTextBtn">
                <i class="fas fa-check-circle me-2"></i>Validate CSV
              </button>
            </div>
            <div>
              <button type="button" class="btn btn-success btn-lg" id="importTextBtn" style="display: none;">
                <i class="fas fa-upload me-2"></i>Add Parties
                <span class="badge bg-light text-success ms-2" id="textImportCount">0</span>
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Progress Indicator -->
    <div id="importProgress" style="display: none;" class="card shadow mb-4">
      <div class="card-body">
        <div class="progress-container">
          <div class="d-flex justify-content-between align-items-center mb-2">
            <span class="text-muted">
              <i class="fas fa-spinner fa-spin me-2"></i>Your parties are uploading...
            </span>
            <span class="text-muted">Bulk Upload is in progress.</span>
          </div>
          <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" 
                 role="progressbar" style="width: 0%"></div>
          </div>
        </div>
      </div>
    </div>

    <!-- Sample Template Card -->
    <div class="card shadow mt-4">
      <div class="card-header bg-secondary text-white py-3">
        <h6 class="m-0">
          <i class="fas fa-download me-2"></i>CSV Template
        </h6>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-8">
            <h6 class="text-primary mb-3">Download Sample CSV Template</h6>
            <p class="text-muted mb-3">
              Download our sample CSV template to ensure your data is formatted correctly. 
              The template includes sample party data and all required column headers.
            </p>
            <div class="template-preview bg-light p-3 rounded mb-3">
              <small class="text-muted d-block mb-2">Template Preview:</small>
              <pre class="mb-0 small"><%= @csv_template %></pre>
            </div>
          </div>
          <div class="col-md-4 text-center">
            <%= link_to download_template_parties_path(format: :csv), 
                class: "btn btn-outline-primary btn-lg mb-3" do %>
              <i class="fas fa-download me-2"></i>Download Template
            <% end %>
            <div class="template-info">
              <small class="text-muted">
                <i class="fas fa-file-csv me-1"></i>CSV Format<br>
                <i class="fas fa-weight me-1"></i>~2KB File Size
              </small>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Import Results Modal -->
<div class="modal fade" id="importResultsModal" tabindex="-1">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">
          <i class="fas fa-chart-bar me-2"></i>Import Results
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div id="importResultsContent">
          <!-- Results will be populated here -->
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="window.location.reload()">
          <i class="fas fa-sync me-2"></i>Refresh Page
        </button>
      </div>
    </div>
  </div>
</div>

<style>
/* Bulk Import Styles */
.upload-area {
  border: 2px dashed #dee2e6;
  border-radius: 8px;
  padding: 3rem 2rem;
  text-align: center;
  transition: all 0.3s ease;
  background: #f8f9fa;
}

.upload-area:hover {
  border-color: #007bff;
  background: #e3f2fd;
}

.upload-area.dragover {
  border-color: #007bff;
  background: #e3f2fd;
  transform: scale(1.02);
}

.upload-icon {
  font-size: 3rem;
  color: #6c757d;
  margin-bottom: 1rem;
}

.upload-title {
  color: #495057;
  margin-bottom: 0.5rem;
}

.upload-subtitle {
  margin-bottom: 1.5rem;
}

.file-requirements {
  margin-bottom: 0;
}

.csv-input-container {
  position: relative;
}

.csv-textarea {
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  font-size: 0.875rem;
  line-height: 1.4;
  resize: vertical;
}

.csv-counter {
  position: absolute;
  bottom: 8px;
  right: 12px;
  background: rgba(255, 255, 255, 0.9);
  padding: 2px 6px;
  border-radius: 4px;
}

.preview-table-container {
  max-height: 400px;
  overflow-y: auto;
}

.progress-container {
  padding: 1rem;
}

.template-preview {
  max-height: 200px;
  overflow-y: auto;
}

.upload-option .btn {
  height: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Upload format switching
  const fileOption = document.getElementById('csvFileOption');
  const textOption = document.getElementById('csvTextOption');
  const fileCard = document.getElementById('fileUploadCard');
  const textCard = document.getElementById('textInputCard');

  fileOption.addEventListener('change', function() {
    if (this.checked) {
      fileCard.style.display = 'block';
      textCard.style.display = 'none';
    }
  });

  textOption.addEventListener('change', function() {
    if (this.checked) {
      fileCard.style.display = 'none';
      textCard.style.display = 'block';
    }
  });

  // CSV text input functionality
  const csvData = document.getElementById('csvData');
  const lineCount = document.getElementById('lineCount');
  const charCount = document.getElementById('charCount');
  const validateTextBtn = document.getElementById('validateTextBtn');
  const importTextBtn = document.getElementById('importTextBtn');
  const loadSampleBtn = document.getElementById('loadSampleBtn');
  const clearTextBtn = document.getElementById('clearTextBtn');

  // Update counters
  function updateCounters() {
    const text = csvData.value;
    const lines = text.split('\n').length;
    lineCount.textContent = lines;
    charCount.textContent = text.length;
  }

  csvData.addEventListener('input', updateCounters);

  // Load sample data
  loadSampleBtn.addEventListener('click', function() {
    csvData.value = `<%= @csv_template.strip.gsub(/\n/, '\\n') %>`;
    updateCounters();
  });

  // Clear text
  clearTextBtn.addEventListener('click', function() {
    csvData.value = '';
    updateCounters();
    document.getElementById('csvPreview').style.display = 'none';
    document.getElementById('textValidationStatus').style.display = 'none';
    importTextBtn.style.display = 'none';
  });

  // Validate CSV
  validateTextBtn.addEventListener('click', function() {
    const data = csvData.value.trim();
    if (!data) {
      showValidationStatus('textValidationStatus', false, 'Please paste CSV data');
      return;
    }

    fetch('<%= validate_csv_parties_path %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ csv_data: data })
    })
    .then(response => response.json())
    .then(result => {
      if (result.valid) {
        showValidationStatus('textValidationStatus', true, result.message);
        showPreview(data);
        importTextBtn.style.display = 'inline-block';
        document.getElementById('textImportCount').textContent = result.row_count;
      } else {
        showValidationStatus('textValidationStatus', false, result.message);
        document.getElementById('csvPreview').style.display = 'none';
        importTextBtn.style.display = 'none';
      }
    })
    .catch(error => {
      showValidationStatus('textValidationStatus', false, 'Error validating CSV');
    });
  });

  // Import CSV
  importTextBtn.addEventListener('click', function() {
    const data = csvData.value.trim();
    if (!data) return;

    showProgress();
    
    fetch('<%= process_bulk_import_parties_path %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ csv_data: data })
    })
    .then(response => response.json())
    .then(result => {
      hideProgress();
      showImportResults(result);
    })
    .catch(error => {
      hideProgress();
      alert('Error importing parties: ' + error.message);
    });
  });

  // Helper functions
  function showValidationStatus(elementId, isValid, message) {
    const statusEl = document.getElementById(elementId);
    statusEl.className = `alert ${isValid ? 'alert-success' : 'alert-danger'}`;
    statusEl.innerHTML = `<i class="fas ${isValid ? 'fa-check-circle' : 'fa-exclamation-triangle'} me-2"></i>${message}`;
    statusEl.style.display = 'block';
  }

  function showPreview(csvData) {
    // Simple CSV preview implementation
    const lines = csvData.split('\n');
    const headers = lines[0].split(',');
    const previewRows = lines.slice(1, 11); // Show first 10 rows

    const headersHtml = headers.map(h => `<th>${h.trim()}</th>`).join('');
    const rowsHtml = previewRows.map(row => {
      const cells = row.split(',');
      return '<tr>' + cells.map(cell => `<td>${cell.trim()}</td>`).join('') + '</tr>';
    }).join('');

    document.getElementById('previewHeaders').innerHTML = headersHtml;
    document.getElementById('csvPreviewBody').innerHTML = rowsHtml;
    document.getElementById('previewCount').textContent = previewRows.length;
    document.getElementById('csvPreview').style.display = 'block';
  }

  function showProgress() {
    document.getElementById('importProgress').style.display = 'block';
    // Animate progress bar
    const progressBar = document.querySelector('.progress-bar');
    let width = 0;
    const interval = setInterval(() => {
      width += Math.random() * 10;
      if (width >= 90) {
        clearInterval(interval);
        width = 90;
      }
      progressBar.style.width = width + '%';
    }, 200);
  }

  function hideProgress() {
    document.getElementById('importProgress').style.display = 'none';
    document.querySelector('.progress-bar').style.width = '0%';
  }

  function showImportResults(result) {
    let html = `
      <div class="row mb-4">
        <div class="col-md-3">
          <div class="card bg-success text-white">
            <div class="card-body text-center">
              <h3>${result.imported_count}</h3>
              <p class="mb-0">Imported</p>
            </div>
          </div>
        </div>
        <div class="col-md-3">
          <div class="card bg-warning text-white">
            <div class="card-body text-center">
              <h3>${result.total_processed || 0}</h3>
              <p class="mb-0">Processed</p>
            </div>
          </div>
        </div>
        <div class="col-md-3">
          <div class="card bg-danger text-white">
            <div class="card-body text-center">
              <h3>${result.errors ? result.errors.length : 0}</h3>
              <p class="mb-0">Errors</p>
            </div>
          </div>
        </div>
        <div class="col-md-3">
          <div class="card bg-info text-white">
            <div class="card-body text-center">
              <h3>${result.skipped_rows ? result.skipped_rows.length : 0}</h3>
              <p class="mb-0">Skipped</p>
            </div>
          </div>
        </div>
      </div>
    `;

    if (result.errors && result.errors.length > 0) {
      html += `
        <div class="card">
          <div class="card-header bg-danger text-white">
            <h6 class="mb-0">Errors (${result.errors.length})</h6>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-sm">
                <thead>
                  <tr>
                    <th>Row</th>
                    <th>Data</th>
                    <th>Errors</th>
                  </tr>
                </thead>
                <tbody>
                  ${result.errors.map(error => `
                    <tr>
                      <td>${error.row}</td>
                      <td><small>${JSON.stringify(error.data)}</small></td>
                      <td><small class="text-danger">${error.errors.join(', ')}</small></td>
                    </tr>
                  `).join('')}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      `;
    }

    document.getElementById('importResultsContent').innerHTML = html;
    new bootstrap.Modal(document.getElementById('importResultsModal')).show();
  }
});
</script>