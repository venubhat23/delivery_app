<div class="delivery-review-page">
  <div class="page-header mb-3">
    <h2>ðŸšš Delivery Review</h2>
    <p class="text-muted">Track and analyze delivery performance and customer delivery details</p>
  </div>

  <div class="filter-section card mb-3" data-enhanced-selects>
    <div class="card-body">
      <form id="deliveryReviewFilters" class="row g-3">
        <div class="col-md-4">
          <label class="form-label">Select Customer</label>
          <select id="filterCustomer" class="form-select">
            <option value="all" selected>All Customers</option>
            <% @customers.each do |c| %>
              <option value="<%= c.id %>"><%= c.name %> - <%= c.phone_number %> (<%= c.member_id %>)</option>
            <% end %>
          </select>
        </div>

        <div class="col-md-3">
          <label class="form-label">Date Range</label>
          <select id="filterDate" class="form-select">
            <option value="monthly" selected>Monthly</option>
            <option value="weekly">Weekly</option>
            <option value="today">Today</option>
            <option value="custom">Custom Range</option>
          </select>
        </div>

        <div class="col-md-2 d-none" id="customStartWrap">
          <label class="form-label">Start Date</label>
          <input type="date" id="startDate" class="form-control" />
        </div>
        <div class="col-md-2 d-none" id="customEndWrap">
          <label class="form-label">End Date</label>
          <input type="date" id="endDate" class="form-control" />
        </div>

        <div class="col-md-3">
          <label class="form-label">Product</label>
          <select id="filterProduct" class="form-select">
            <option value="all" selected>All Products</option>
            <% @products.each do |p| %>
              <option value="<%= p.id %>"><%= p.name %></option>
            <% end %>
          </select>
        </div>

        <div class="col-md-3">
          <label class="form-label">Status</label>
          <select id="filterStatus" class="form-select">
            <option value="all" selected>All</option>
            <option value="completed">Completed</option>
            <option value="pending">Pending</option>
            <option value="cancelled">Cancelled</option>
          </select>
        </div>

        <div class="col-md-4">
          <label class="form-label">Delivery Person</label>
          <select id="filterDeliveryPerson" class="form-select">
            <option value="all" selected>All Delivery Persons</option>
            <% @delivery_persons.each do |dp| %>
              <option value="<%= dp.id %>"><%= dp.name %></option>
            <% end %>
          </select>
        </div>

        <div class="col-md-2">
          <label class="form-label">Search</label>
          <input type="text" id="globalSearch" class="form-control" placeholder="Customer/Product" />
        </div>

        <div class="col-md-12 text-end">
          <button type="button" id="applyFiltersBtn" class="btn btn-primary me-2">Apply Filters</button>
          <button type="button" id="exportCsvBtn" class="btn btn-outline-secondary me-2">Export CSV</button>
          <button type="button" id="printBtn" class="btn btn-outline-secondary">Print</button>
        </div>
      </form>
    </div>
  </div>

  <div class="summary-section row g-3 mb-3">
    <div class="col-6 col-md-3">
      <div class="card text-center">
        <div class="card-body">
          <h6 class="card-title">Total Deliveries</h6>
          <div class="fs-4" id="sumTotalDeliveries">0</div>
        </div>
      </div>
    </div>
    <div class="col-6 col-md-3">
      <div class="card text-center">
        <div class="card-body">
          <h6 class="card-title">Total Customers</h6>
          <div class="fs-4" id="sumTotalCustomers">0</div>
        </div>
      </div>
    </div>
    <div class="col-6 col-md-3">
      <div class="card text-center">
        <div class="card-body">
          <h6 class="card-title">Total Amount</h6>
          <div class="fs-4" id="sumTotalAmount">â‚¹0</div>
        </div>
      </div>
    </div>
    <div class="col-6 col-md-3">
      <div class="card text-center">
        <div class="card-body">
          <h6 class="card-title">Completion Rate</h6>
          <div class="fs-4" id="sumCompletionRate">0%</div>
        </div>
      </div>
    </div>
  </div>

  <div class="table-section card">
    <div class="card-header d-flex justify-content-between align-items-center">
      <h5 class="mb-0">ðŸ“‹ Delivery Details</h5>
      <div class="text-muted small" id="hasMoreNotice" style="display:none;">Showing first 1000 rows</div>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-striped mb-0">
          <thead class="table-light">
            <tr>
              <th scope="col">Date</th>
              <th scope="col">Customer Name</th>
              <th scope="col">Product</th>
              <th scope="col">Quantity</th>
              <th scope="col">Amount</th>
              <th scope="col">Status</th>
              <th scope="col">Delivery Person</th>
            </tr>
          </thead>
          <tbody id="deliveryTableBody">
            <tr><td colspan="7" class="text-center text-muted">Use filters to load data</td></tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
(function() {
  'use strict';

  function formatINR(value) {
    try {
      return new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', maximumFractionDigits: 2 }).format(value || 0);
    } catch(e) { return 'â‚¹' + (value || 0); }
  }

  function statusBadge(status) {
    switch(status) {
      case 'completed': return '<span class="badge bg-success">Completed</span>';
      case 'pending': return '<span class="badge bg-warning text-dark">Pending</span>';
      case 'cancelled': return '<span class="badge bg-danger">Cancelled</span>';
      case 'in_progress': return '<span class="badge bg-info text-white">In Progress</span>';
      default: return '<span class="badge bg-secondary">' + (status || '-') + '</span>';
    }
  }

  function toggleCustomDates() {
    var type = document.getElementById('filterDate').value;
    var s = document.getElementById('customStartWrap');
    var e = document.getElementById('customEndWrap');
    if (type === 'custom') { s.classList.remove('d-none'); e.classList.remove('d-none'); }
    else { s.classList.add('d-none'); e.classList.add('d-none'); }
  }

  function getFilters() {
    var dateType = document.getElementById('filterDate').value;
    var params = {
      customer_id: document.getElementById('filterCustomer').value,
      date_filter: dateType,
      product_id: document.getElementById('filterProduct').value,
      status: document.getElementById('filterStatus').value,
      delivery_person_id: document.getElementById('filterDeliveryPerson').value,
      search: document.getElementById('globalSearch').value.trim()
    };
    if (dateType === 'custom') {
      params.start_date = document.getElementById('startDate').value;
      params.end_date = document.getElementById('endDate').value;
    }
    return params;
  }

  function setSummary(summary) {
    document.getElementById('sumTotalDeliveries').textContent = summary.total_deliveries || 0;
    document.getElementById('sumTotalCustomers').textContent = summary.total_customers || 0;
    document.getElementById('sumTotalAmount').textContent = formatINR(summary.total_amount || 0);
    document.getElementById('sumCompletionRate').textContent = (summary.completion_rate || 0) + '%';
  }

  function renderRows(deliveries) {
    var tbody = document.getElementById('deliveryTableBody');
    tbody.innerHTML = '';
    if (!deliveries || deliveries.length === 0) {
      tbody.innerHTML = '<tr><td colspan="7" class="text-center text-muted">No records found</td></tr>';
      return;
    }
    var rows = deliveries.map(function(d) {
      return '<tr>' +
        '<td>' + d.date + '</td>' +
        '<td>' + (d.customer_name || '-') + '</td>' +
        '<td>' + (d.product || '-') + '</td>' +
        '<td>' + (d.quantity || '-') + '</td>' +
        '<td>' + formatINR(d.amount || 0) + '</td>' +
        '<td>' + statusBadge(d.status) + '</td>' +
        '<td>' + (d.delivery_person || '-') + '</td>' +
      '</tr>';
    }).join('');
    tbody.innerHTML = rows;
  }

  function fetchData() {
    var btn = document.getElementById('applyFiltersBtn');
    btn.disabled = true; btn.classList.add('loading');
    var params = getFilters();
    var query = new URLSearchParams(params).toString();
    fetch('/delivery-review/data.json?' + query, { headers: { 'Accept': 'application/json' } })
      .then(function(r) { return r.json(); })
      .then(function(data) {
        setSummary(data.summary || {});
        renderRows(data.deliveries || []);
        document.getElementById('hasMoreNotice').style.display = data.has_more ? '' : 'none';
      })
      .catch(function(e) { console.error(e); })
      .finally(function(){ btn.disabled = false; btn.classList.remove('loading'); });
  }

  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Select2 if available
    if (window.jQuery && jQuery.fn.select2) {
      jQuery('#filterCustomer, #filterProduct, #filterStatus, #filterDeliveryPerson').select2({ theme: 'bootstrap-5', width: '100%' });
    }
    document.getElementById('filterDate').addEventListener('change', toggleCustomDates);
    document.getElementById('applyFiltersBtn').addEventListener('click', fetchData);
    document.getElementById('printBtn').addEventListener('click', function(){ window.print(); });

    document.getElementById('exportCsvBtn').addEventListener('click', function() {
      var params = getFilters();
      var form = document.createElement('form');
      form.method = 'POST';
      form.action = '/delivery-review/export';
      form.style.display = 'none';
      var csrf = document.querySelector('meta[name="csrf-token"]');
      if (csrf) {
        var t = document.createElement('input'); t.type = 'hidden'; t.name = 'authenticity_token'; t.value = csrf.getAttribute('content'); form.appendChild(t);
      }
      Object.keys(params).forEach(function(k){
        var input = document.createElement('input'); input.type = 'hidden'; input.name = k; input.value = params[k]; form.appendChild(input);
      });
      document.body.appendChild(form);
      form.submit();
      setTimeout(function(){ document.body.removeChild(form); }, 1000);
    });

    // Auto load defaults (Monthly + All Customers)
    fetchData();
  });
})();
</script>