<% content_for :title, "Customer Wallets" %>

<div class="container-fluid">
  <!-- Header Section -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <h1 class="h3 mb-0">Customer Wallets</h1>
          <p class="text-muted mb-0">Manage customer wallet balances and transactions</p>
        </div>
        <div class="d-flex gap-2">
          <span class="badge bg-primary fs-6">Total Wallet Balance: ₹<%= number_with_delimiter(@total_wallet_amount, delimiter: ',') %></span>
        </div>
      </div>
    </div>
  </div>

  <!-- Filters Section -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="card border-0 shadow-sm">
        <div class="card-body">
          <%= form_with url: customer_wallets_path, method: :get, local: true, class: "d-flex gap-3 align-items-end" do |form| %>
            <div class="flex-grow-1">
              <%= form.text_field :search,
                                  placeholder: "Search customers by name...",
                                  value: params[:search],
                                  class: "form-control" %>
            </div>
            <div>
              <%= form.submit "Search", class: "btn btn-primary" %>
            </div>
            <% if params[:search].present? %>
              <div>
                <%= link_to "Clear", customer_wallets_path, class: "btn btn-outline-secondary" %>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- Customer Wallets Table -->
  <div class="row">
    <div class="col-12">
      <div class="card border-0 shadow-sm">
        <div class="card-header bg-white border-bottom">
          <h5 class="card-title mb-0">Customer Wallet Balances</h5>
        </div>
        <div class="card-body p-0">
          <% if @customers.any? %>
            <div class="table-responsive">
              <table class="table table-hover mb-0">
                <thead class="table-light">
                  <tr>
                    <th scope="col">Customer Name</th>
                    <th scope="col">Phone Number</th>
                    <th scope="col">Wallet Balance</th>
                    <th scope="col">Delivery Person</th>
                    <th scope="col" class="text-center">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% @customers.each do |customer| %>
                    <tr>
                      <td>
                        <div class="d-flex align-items-center">
                          <div class="avatar-circle bg-primary text-white me-3">
                            <%= customer.name&.first&.upcase %>
                          </div>
                          <div>
                            <div class="fw-semibold"><%= customer.name %></div>
                            <small class="text-muted">ID: <%= customer.id %></small>
                          </div>
                        </div>
                      </td>
                      <td>
                        <span class="badge bg-light text-dark">
                          <%= customer.phone_number.present? ? customer.phone_number : "Not provided" %>
                        </span>
                      </td>
                      <td>
                        <span class="badge <%= customer.wallet_amount > 0 ? 'bg-success' : 'bg-warning' %> fs-6">
                          ₹<%= number_with_delimiter(customer.wallet_amount, delimiter: ',') %>
                        </span>
                      </td>
                      <td>
                        <% if customer.delivery_person.present? %>
                          <span class="badge bg-info text-dark">
                            <%= customer.delivery_person.name %>
                          </span>
                        <% else %>
                          <span class="text-muted">Not assigned</span>
                        <% end %>
                      </td>
                      <td class="text-center">
                        <div class="btn-group" role="group">
                          <!-- Add Funds Button -->
                          <button type="button"
                                  class="btn btn-sm btn-success"
                                  onclick="openAddFundsModal(<%= customer.id %>, '<%= customer.name %>', <%= customer.wallet_amount %>)">
                            <i class="fas fa-plus"></i> Add
                          </button>

                          <!-- Deduct Funds Button -->
                          <button type="button"
                                  class="btn btn-sm btn-warning"
                                  onclick="openDeductFundsModal(<%= customer.id %>, '<%= customer.name %>', <%= customer.wallet_amount %>)">
                            <i class="fas fa-minus"></i> Deduct
                          </button>

                          <!-- Edit Button -->
                          <button type="button"
                                  class="btn btn-sm btn-outline-primary"
                                  onclick="openEditWalletModal(<%= customer.id %>, '<%= customer.name %>', <%= customer.wallet_amount %>)">
                            <i class="fas fa-edit"></i>
                          </button>
                        </div>

                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>

            <!-- Pagination -->
            <div class="card-footer bg-white border-top">
              <%= paginate @customers, theme: 'twitter-bootstrap-4' %>
            </div>
          <% else %>
            <div class="text-center py-5">
              <i class="fas fa-wallet fa-3x text-muted mb-3"></i>
              <h5 class="text-muted">No customers found</h5>
              <p class="text-muted">
                <% if params[:search].present? %>
                  No customers match your search criteria.
                <% else %>
                  No customers available in the system.
                <% end %>
              </p>
              <% if params[:search].present? %>
                <%= link_to "Clear Search", customer_wallets_path, class: "btn btn-outline-primary" %>
              <% end %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Funds Modal -->
<div id="addFundsModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop" onclick="closeAddFundsModal()"></div>
  <div class="custom-edit-modal-content">
    <div class="custom-modal-header">
      <h5 class="custom-modal-title">
        <i class="fas fa-plus me-2"></i>
        <span id="addFundsModalTitle">Add Funds</span>
      </h5>
      <button type="button" class="custom-close-btn" onclick="closeAddFundsModal()">×</button>
    </div>
    <div class="custom-modal-body">
      <form id="addFundsForm">
        <div class="mb-3">
          <label class="form-label fw-bold">Customer</label>
          <input type="text" id="addFundsCustomerName" class="form-control" readonly style="background-color: #f8f9fa;">
          <input type="hidden" id="addFundsCustomerId">
        </div>
        <div class="mb-3">
          <label class="form-label fw-bold">Amount to Add (₹)</label>
          <input type="number" id="addFundsAmount" class="form-control" step="0.01" min="0.01" placeholder="Enter amount to add" required>
        </div>
        <div class="alert alert-info">
          <i class="fas fa-info-circle me-2"></i>
          Current Balance: ₹<span id="addFundsCurrentBalance">0</span>
        </div>
      </form>
    </div>
    <div class="custom-modal-footer">
      <button type="button" class="btn btn-secondary me-2" onclick="closeAddFundsModal()">Cancel</button>
      <button type="button" class="btn btn-success" onclick="submitAddFunds()">
        <i class="fas fa-plus me-1"></i>Add Funds
      </button>
    </div>
  </div>
</div>

<!-- Deduct Funds Modal -->
<div id="deductFundsModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop" onclick="closeDeductFundsModal()"></div>
  <div class="custom-edit-modal-content">
    <div class="custom-modal-header">
      <h5 class="custom-modal-title">
        <i class="fas fa-minus me-2"></i>
        <span id="deductFundsModalTitle">Deduct Funds</span>
      </h5>
      <button type="button" class="custom-close-btn" onclick="closeDeductFundsModal()">×</button>
    </div>
    <div class="custom-modal-body">
      <form id="deductFundsForm">
        <div class="mb-3">
          <label class="form-label fw-bold">Customer</label>
          <input type="text" id="deductFundsCustomerName" class="form-control" readonly style="background-color: #f8f9fa;">
          <input type="hidden" id="deductFundsCustomerId">
        </div>
        <div class="mb-3">
          <label class="form-label fw-bold">Amount to Deduct (₹)</label>
          <input type="number" id="deductFundsAmount" class="form-control" step="0.01" min="0.01" placeholder="Enter amount to deduct" required>
        </div>
        <div class="alert alert-warning">
          <i class="fas fa-exclamation-triangle me-2"></i>
          Current Balance: ₹<span id="deductFundsCurrentBalance">0</span>
        </div>
      </form>
    </div>
    <div class="custom-modal-footer">
      <button type="button" class="btn btn-secondary me-2" onclick="closeDeductFundsModal()">Cancel</button>
      <button type="button" class="btn btn-warning" onclick="submitDeductFunds()">
        <i class="fas fa-minus me-1"></i>Deduct Funds
      </button>
    </div>
  </div>
</div>

<!-- Edit Wallet Modal -->
<div id="editWalletModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop" onclick="closeEditWalletModal()"></div>
  <div class="custom-edit-modal-content">
    <div class="custom-modal-header">
      <h5 class="custom-modal-title">
        <i class="fas fa-edit me-2"></i>
        <span id="editWalletModalTitle">Edit Wallet</span>
      </h5>
      <button type="button" class="custom-close-btn" onclick="closeEditWalletModal()">×</button>
    </div>
    <div class="custom-modal-body">
      <form id="editWalletForm">
        <div class="mb-3">
          <label class="form-label fw-bold">Customer</label>
          <input type="text" id="editWalletCustomerName" class="form-control" readonly style="background-color: #f8f9fa;">
          <input type="hidden" id="editWalletCustomerId">
        </div>
        <div class="mb-3">
          <label class="form-label fw-bold">Wallet Balance (₹)</label>
          <input type="number" id="editWalletAmount" class="form-control" step="0.01" min="0" placeholder="Enter wallet balance" required>
        </div>
        <div class="alert alert-info">
          <i class="fas fa-info-circle me-2"></i>
          Current Balance: ₹<span id="editWalletCurrentBalance">0</span>
        </div>
      </form>
    </div>
    <div class="custom-modal-footer">
      <button type="button" class="btn btn-secondary me-2" onclick="closeEditWalletModal()">Cancel</button>
      <button type="button" class="btn btn-primary" onclick="submitEditWallet()">
        <i class="fas fa-save me-1"></i>Update Wallet
      </button>
    </div>
  </div>
</div>

<style>
.avatar-circle {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 16px;
}

/* Custom Modal Styles - Same as Customer Patterns */
.custom-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

.custom-modal.show {
  display: flex !important;
}

.custom-modal-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.custom-edit-modal-content {
  background: white;
  border-radius: 12px;
  width: 600px;
  max-width: 90vw;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  position: relative;
}

.custom-modal-header {
  padding: 20px 24px;
  border-bottom: 1px solid #e9ecef;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-radius: 12px 12px 0 0;
}

.custom-modal-title {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
}

.custom-close-btn {
  background: none;
  border: none;
  color: white;
  font-size: 24px;
  cursor: pointer;
  padding: 8px;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.custom-close-btn:hover {
  opacity: 1;
  background: rgba(255, 255, 255, 0.1);
}

.custom-modal-body {
  padding: 24px;
}

.custom-modal-footer {
  padding: 16px 24px;
  border-top: 1px solid #e9ecef;
  display: flex;
  justify-content: flex-end;
  background-color: #f8f9fa;
  border-radius: 0 0 12px 12px;
}

body.modal-open {
  overflow: hidden;
}
</style>

<script>
// Global variables to store current modal data
let currentCustomer = null;

// Add Funds Modal Functions
function openAddFundsModal(customerId, customerName, currentBalance) {
  currentCustomer = { id: customerId, name: customerName, balance: currentBalance };

  document.getElementById('addFundsModalTitle').textContent = `Add Funds - ${customerName}`;
  document.getElementById('addFundsCustomerName').value = customerName;
  document.getElementById('addFundsCustomerId').value = customerId;
  document.getElementById('addFundsCurrentBalance').textContent = numberWithCommas(currentBalance);
  document.getElementById('addFundsAmount').value = '';

  const modal = document.getElementById('addFundsModal');
  modal.style.display = 'flex';
  document.body.classList.add('modal-open');
}

function closeAddFundsModal() {
  const modal = document.getElementById('addFundsModal');
  modal.style.display = 'none';
  document.body.classList.remove('modal-open');
  currentCustomer = null;
}

function submitAddFunds() {
  const amount = parseFloat(document.getElementById('addFundsAmount').value);

  if (!amount || amount <= 0) {
    alert('Please enter a valid amount');
    return;
  }

  if (!currentCustomer) {
    alert('Error: Customer information not found');
    return;
  }

  // Create and submit form
  const form = document.createElement('form');
  form.method = 'POST';
  form.action = `/customer-wallets/${currentCustomer.id}/add_funds`;

  // Add CSRF token
  const csrfToken = document.querySelector('meta[name="csrf-token"]');
  if (csrfToken) {
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = 'authenticity_token';
    csrfInput.value = csrfToken.getAttribute('content');
    form.appendChild(csrfInput);
  }

  // Add method override for PATCH
  const methodInput = document.createElement('input');
  methodInput.type = 'hidden';
  methodInput.name = '_method';
  methodInput.value = 'patch';
  form.appendChild(methodInput);

  // Add amount
  const amountInput = document.createElement('input');
  amountInput.type = 'hidden';
  amountInput.name = 'amount';
  amountInput.value = amount;
  form.appendChild(amountInput);

  // Submit form
  document.body.appendChild(form);
  form.submit();
}

// Deduct Funds Modal Functions
function openDeductFundsModal(customerId, customerName, currentBalance) {
  currentCustomer = { id: customerId, name: customerName, balance: currentBalance };

  document.getElementById('deductFundsModalTitle').textContent = `Deduct Funds - ${customerName}`;
  document.getElementById('deductFundsCustomerName').value = customerName;
  document.getElementById('deductFundsCustomerId').value = customerId;
  document.getElementById('deductFundsCurrentBalance').textContent = numberWithCommas(currentBalance);
  document.getElementById('deductFundsAmount').value = '';
  document.getElementById('deductFundsAmount').max = currentBalance;

  const modal = document.getElementById('deductFundsModal');
  modal.style.display = 'flex';
  document.body.classList.add('modal-open');
}

function closeDeductFundsModal() {
  const modal = document.getElementById('deductFundsModal');
  modal.style.display = 'none';
  document.body.classList.remove('modal-open');
  currentCustomer = null;
}

function submitDeductFunds() {
  const amount = parseFloat(document.getElementById('deductFundsAmount').value);

  if (!amount || amount <= 0) {
    alert('Please enter a valid amount');
    return;
  }

  if (!currentCustomer) {
    alert('Error: Customer information not found');
    return;
  }

  if (amount > currentCustomer.balance) {
    alert('Insufficient wallet balance');
    return;
  }

  // Create and submit form
  const form = document.createElement('form');
  form.method = 'POST';
  form.action = `/customer-wallets/${currentCustomer.id}/deduct_funds`;

  // Add CSRF token
  const csrfToken = document.querySelector('meta[name="csrf-token"]');
  if (csrfToken) {
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = 'authenticity_token';
    csrfInput.value = csrfToken.getAttribute('content');
    form.appendChild(csrfInput);
  }

  // Add method override for PATCH
  const methodInput = document.createElement('input');
  methodInput.type = 'hidden';
  methodInput.name = '_method';
  methodInput.value = 'patch';
  form.appendChild(methodInput);

  // Add amount
  const amountInput = document.createElement('input');
  amountInput.type = 'hidden';
  amountInput.name = 'amount';
  amountInput.value = amount;
  form.appendChild(amountInput);

  // Submit form
  document.body.appendChild(form);
  form.submit();
}

// Edit Wallet Modal Functions
function openEditWalletModal(customerId, customerName, currentBalance) {
  currentCustomer = { id: customerId, name: customerName, balance: currentBalance };

  document.getElementById('editWalletModalTitle').textContent = `Edit Wallet - ${customerName}`;
  document.getElementById('editWalletCustomerName').value = customerName;
  document.getElementById('editWalletCustomerId').value = customerId;
  document.getElementById('editWalletCurrentBalance').textContent = numberWithCommas(currentBalance);
  document.getElementById('editWalletAmount').value = currentBalance;

  const modal = document.getElementById('editWalletModal');
  modal.style.display = 'flex';
  document.body.classList.add('modal-open');
}

function closeEditWalletModal() {
  const modal = document.getElementById('editWalletModal');
  modal.style.display = 'none';
  document.body.classList.remove('modal-open');
  currentCustomer = null;
}

function submitEditWallet() {
  const amount = parseFloat(document.getElementById('editWalletAmount').value);

  if (amount < 0) {
    alert('Wallet balance cannot be negative');
    return;
  }

  if (!currentCustomer) {
    alert('Error: Customer information not found');
    return;
  }

  // Create and submit form
  const form = document.createElement('form');
  form.method = 'POST';
  form.action = `/customer-wallets/${currentCustomer.id}`;

  // Add CSRF token
  const csrfToken = document.querySelector('meta[name="csrf-token"]');
  if (csrfToken) {
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = 'authenticity_token';
    csrfInput.value = csrfToken.getAttribute('content');
    form.appendChild(csrfInput);
  }

  // Add method override for PATCH
  const methodInput = document.createElement('input');
  methodInput.type = 'hidden';
  methodInput.name = '_method';
  methodInput.value = 'patch';
  form.appendChild(methodInput);

  // Add wallet amount
  const amountInput = document.createElement('input');
  amountInput.type = 'hidden';
  amountInput.name = 'customer[wallet_amount]';
  amountInput.value = amount;
  form.appendChild(amountInput);

  // Submit form
  document.body.appendChild(form);
  form.submit();
}

// Utility function to format numbers with commas
function numberWithCommas(x) {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

// Close modals when pressing Escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeAddFundsModal();
    closeDeductFundsModal();
    closeEditWalletModal();
  }
});
</script>