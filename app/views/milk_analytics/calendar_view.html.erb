<% content_for :title, "Calendar View - Milk Supply & Analytics" %>

<div class="container-fluid">
  <!-- Header Section -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <div>
      <h1 class="h3 mb-0 text-gray-800">
        <i class="fas fa-calendar text-primary me-2"></i>
        Calendar View
      </h1>
      <p class="text-muted mb-0">Calendar-based milk procurement overview with CRUD operations</p>
      
      <!-- Debug Info - Remove in production -->
      <% if Rails.env.development? %>
        <div class="alert alert-info mt-2">
          <strong>Debug:</strong> 
          Assignments: <%= @assignments&.count || 0 %> | 
          Daily Summaries: <%= @daily_summaries&.count || 0 %> | 
          Date Range: <%= @start_date %> to <%= @end_date %>
        </div>
      <% end %>
    </div>
    
    <div class="d-flex gap-2 align-items-center flex-wrap">
      <!-- View Type Filter -->
      <div class="dropdown">
        <button class="btn btn-outline-info dropdown-toggle" type="button" data-bs-toggle="dropdown">
          <i class="fas fa-eye me-1"></i>
          <%= @view_type.capitalize %> View
        </button>
        <ul class="dropdown-menu">
          <li><%= link_to "Day", calendar_view_milk_analytics_path(view_type: 'day', date: @date), class: "dropdown-item #{'active' if @view_type == 'day'}" %></li>
          <li><%= link_to "Week", calendar_view_milk_analytics_path(view_type: 'week', date: @date), class: "dropdown-item #{'active' if @view_type == 'week'}" %></li>
          <li><%= link_to "Month", calendar_view_milk_analytics_path(view_type: 'month', date: @date), class: "dropdown-item #{'active' if @view_type == 'month'}" %></li>
        </ul>
      </div>
      
      <!-- Date Navigation -->
      <div class="btn-group" role="group">
        <%= link_to calendar_view_milk_analytics_path(date: @date - 1.send(@view_type == 'month' ? :month : @view_type == 'week' ? :week : :day), view_type: @view_type), 
                    class: "btn btn-outline-secondary" do %>
          <i class="fas fa-chevron-left"></i>
        <% end %>
        
        <%= form_with url: calendar_view_milk_analytics_path, method: :get, local: true, class: "d-inline" do |form| %>
          <%= form.hidden_field :view_type, value: @view_type %>
          <%= form.date_field :date, value: @date, onchange: "this.form.submit()", class: "btn btn-outline-primary border-0 text-center", style: "width: 150px;" %>
        <% end %>
        
        <%= link_to calendar_view_milk_analytics_path(date: @date + 1.send(@view_type == 'month' ? :month : @view_type == 'week' ? :week : :day), view_type: @view_type), 
                    class: "btn btn-outline-secondary" do %>
          <i class="fas fa-chevron-right"></i>
        <% end %>
      </div>
      
      <!-- Today Button -->
      <%= link_to calendar_view_milk_analytics_path(view_type: @view_type), class: "btn btn-primary" do %>
        <i class="fas fa-home me-1"></i>
        Today
      <% end %>
      
      <!-- Add New Assignment Button -->
      <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#newAssignmentModal">
        <i class="fas fa-plus me-1"></i>
        New Assignment
      </button>
      
      <!-- Back Button -->
      <%= link_to milk_analytics_path, class: "btn btn-outline-secondary" do %>
        <i class="fas fa-arrow-left me-1"></i>
        Back to Dashboard
      <% end %>
    </div>
  </div>

  <!-- Current Period Display -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="card shadow">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
              <% case @view_type %>
              <% when 'day' %>
                <%= @date.strftime('%A, %B %d, %Y') %>
              <% when 'week' %>
                Week of <%= @start_date.strftime('%B %d') %> - <%= @end_date.strftime('%B %d, %Y') %>
              <% when 'month' %>
                <%= @date.strftime('%B %Y') %>
              <% end %>
            </h5>
            <div class="text-muted">
              Showing <%= @view_type %> view from <%= @start_date.strftime('%b %d') %> to <%= @end_date.strftime('%b %d, %Y') %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Enhanced Calendar Grid -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="card shadow">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h6 class="m-0 font-weight-bold text-primary">Calendar Overview</h6>
          <div class="dropdown">
            <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
              <i class="fas fa-filter me-1"></i>Filter
            </button>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#" onclick="filterByStatus('all')">All Assignments</a></li>
              <li><a class="dropdown-item" href="#" onclick="filterByStatus('pending')">Pending Only</a></li>
              <li><a class="dropdown-item" href="#" onclick="filterByStatus('completed')">Completed Only</a></li>
            </ul>
          </div>
        </div>
        <div class="card-body">
          <div class="calendar-grid">
            <% @daily_summaries.each do |summary| %>
              <div class="calendar-day <%= 'today' if summary[:date] == Date.current %> <%= 'has-assignments' if summary[:assignments_count] > 0 %>" 
                   data-date="<%= summary[:date].strftime('%Y-%m-%d') %>" 
                   onclick="showDayDetails('<%= summary[:date].strftime('%Y-%m-%d') %>')">
                <div class="day-header">
                  <div class="day-name"><%= summary[:date].strftime('%a') %></div>
                  <div class="day-number"><%= summary[:date].day %></div>
                </div>
                
                <div class="day-content">
                  <% if summary[:assignments_count] > 0 %>
                    <div class="assignment-count">
                      <span class="badge badge-primary"><%= summary[:assignments_count] %></span>
                    </div>
                    <div class="day-metrics">
                      <div class="metric">
                        <small class="text-success"><%= summary[:total_actual] %>L</small>
                      </div>
                      <div class="metric">
                        <small class="text-primary">â‚¹<%= number_with_delimiter(summary[:profit].round(0)) %></small>
                      </div>
                      <div class="completion-bar">
                        <div class="progress" style="height: 3px;">
                          <div class="progress-bar bg-success" 
                               style="width: <%= summary[:assignments_count] > 0 ? (summary[:completed_count].to_f / summary[:assignments_count] * 100) : 0 %>%"></div>
                        </div>
                      </div>
                    </div>
                  <% else %>
                    <div class="no-assignments">
                      <button class="btn btn-sm btn-outline-success btn-add" 
                              onclick="openNewAssignmentModal('<%= summary[:date].strftime('%Y-%m-%d') %>')">
                        <i class="fas fa-plus"></i>
                      </button>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Assignment Details Panel -->
  <div class="row">
    <div class="col-12">
      <div class="card shadow">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h6 class="m-0 font-weight-bold text-primary">Assignment Management</h6>
          <div>
            <button class="btn btn-sm btn-success" onclick="openBulkEditModal()">
              <i class="fas fa-edit me-1"></i>Bulk Edit
            </button>
          </div>
        </div>
        <div class="card-body" id="assignmentDetails">
          <% if @assignments_by_date.any? %>
            <% @assignments_by_date.each do |date, assignments| %>
              <div class="assignment-day-section mb-4" data-date="<%= date.strftime('%Y-%m-%d') %>">
                <div class="d-flex justify-content-between align-items-center mb-3">
                  <h6 class="text-primary mb-0">
                    <%= date.strftime('%A, %B %d, %Y') %>
                    <span class="text-muted small">(<%= assignments.count %> assignments)</span>
                  </h6>
                  <button class="btn btn-sm btn-outline-primary" 
                          onclick="openNewAssignmentModal('<%= date.strftime('%Y-%m-%d') %>')">
                    <i class="fas fa-plus me-1"></i>Add Assignment
                  </button>
                </div>
                
                <div class="assignments-grid">
                  <% assignments.each do |assignment| %>
                    <div class="assignment-card <%= assignment.status %>" data-id="<%= assignment.id %>">
                      <div class="assignment-header">
                        <div class="vendor-name"><%= assignment.vendor_name %></div>
                        <div class="assignment-actions">
                          <button class="btn btn-sm btn-outline-primary" 
                                  onclick="editAssignment(<%= assignment.id %>)" 
                                  title="Edit">
                            <i class="fas fa-edit"></i>
                          </button>
                          <button class="btn btn-sm btn-outline-danger" 
                                  onclick="deleteAssignment(<%= assignment.id %>)" 
                                  title="Delete">
                            <i class="fas fa-trash"></i>
                          </button>
                        </div>
                      </div>
                      
                      <div class="assignment-details">
                        <div class="detail-row">
                          <span class="label">Planned:</span>
                          <span class="value"><%= assignment.planned_quantity %>L @ â‚¹<%= assignment.buying_price %></span>
                        </div>
                        <div class="detail-row">
                          <span class="label">Actual:</span>
                          <span class="value actual-qty" data-field="actual_quantity">
                            <% if assignment.actual_quantity.present? %>
                              <%= assignment.actual_quantity %>L
                            <% else %>
                              <span class="text-muted">-</span>
                            <% end %>
                          </span>
                        </div>
                        <div class="detail-row">
                          <span class="label">Profit:</span>
                          <span class="value <%= (assignment.actual_quantity.present? ? assignment.actual_profit : assignment.planned_profit) >= 0 ? 'text-success' : 'text-danger' %>">
                            â‚¹<%= number_with_delimiter((assignment.actual_quantity.present? ? assignment.actual_profit : assignment.planned_profit).round(2)) %>
                          </span>
                        </div>
                        <div class="detail-row">
                          <span class="label">Status:</span>
                          <span class="badge badge-<%= case assignment.status
                                                      when 'completed' then 'success'
                                                      when 'pending' then 'secondary'
                                                      when 'cancelled' then 'danger'
                                                      else 'secondary'
                                                      end %>">
                            <%= assignment.status.humanize %>
                          </span>
                        </div>
                      </div>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          <% else %>
            <div class="text-center py-5">
              <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
              <p class="text-muted">No assignments found for the selected period.</p>
              <button class="btn btn-primary" onclick="openNewAssignmentModal()">
                <i class="fas fa-plus me-1"></i>
                Create New Assignment
              </button>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- New Assignment Modal -->
<div class="modal fade" id="newAssignmentModal" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">New Procurement Assignment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <%= form_with model: ProcurementAssignment.new, 
                      url: procurement_assignments_path, 
                      id: 'newAssignmentForm', 
                      local: true do |form| %>
          <div class="row">
            <div class="col-md-6 mb-3">
              <%= form.label :date, class: 'form-label' %>
              <%= form.date_field :date, class: 'form-control', required: true %>
            </div>
            <div class="col-md-6 mb-3">
              <%= form.label :vendor_name, class: 'form-label' %>
              <%= form.text_field :vendor_name, class: 'form-control', required: true %>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-4 mb-3">
              <%= form.label :planned_quantity, "Planned Quantity (L)", class: 'form-label' %>
              <%= form.number_field :planned_quantity, step: 0.01, class: 'form-control', required: true %>
            </div>
            <div class="col-md-4 mb-3">
              <%= form.label :buying_price, "Buying Price (â‚¹/L)", class: 'form-label' %>
              <%= form.number_field :buying_price, step: 0.01, class: 'form-control', required: true %>
            </div>
            <div class="col-md-4 mb-3">
              <%= form.label :selling_price, "Selling Price (â‚¹/L)", class: 'form-label' %>
              <%= form.number_field :selling_price, step: 0.01, class: 'form-control', required: true %>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6 mb-3">
              <%= form.label :unit, class: 'form-label' %>
              <%= form.select :unit, options_for_select([['Liters', 'L'], ['Kilograms', 'Kg']]), {}, 
                              {class: 'form-select', required: true} %>
            </div>
            <div class="col-md-6 mb-3">
              <%= form.label :status, class: 'form-label' %>
              <%= form.select :status, options_for_select([['Pending', 'pending'], ['Completed', 'completed']]), {}, 
                              {class: 'form-select', required: true} %>
            </div>
          </div>
          
          <div class="mb-3">
            <%= form.label :actual_quantity, "Actual Quantity (L)", class: 'form-label' %>
            <%= form.number_field :actual_quantity, step: 0.01, class: 'form-control' %>
          </div>
          
          <%= form.hidden_field :procurement_schedule_id, value: 1 %>
          <%= form.hidden_field :user_id, value: current_user&.id %>
        <% end %>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" form="newAssignmentForm" class="btn btn-primary">Create Assignment</button>
      </div>
    </div>
  </div>
</div>

<!-- Edit Assignment Modal -->
<div class="modal fade" id="editAssignmentModal" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit Procurement Assignment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="editAssignmentForm">
          <div class="row">
            <div class="col-md-6 mb-3">
              <label class="form-label">Date</label>
              <input type="date" name="date" class="form-control" required>
            </div>
            <div class="col-md-6 mb-3">
              <label class="form-label">Vendor Name</label>
              <input type="text" name="vendor_name" class="form-control" required>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-4 mb-3">
              <label class="form-label">Planned Quantity (L)</label>
              <input type="number" name="planned_quantity" step="0.01" class="form-control" required>
            </div>
            <div class="col-md-4 mb-3">
              <label class="form-label">Buying Price (â‚¹/L)</label>
              <input type="number" name="buying_price" step="0.01" class="form-control" required>
            </div>
            <div class="col-md-4 mb-3">
              <label class="form-label">Selling Price (â‚¹/L)</label>
              <input type="number" name="selling_price" step="0.01" class="form-control" required>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-4 mb-3">
              <label class="form-label">Actual Quantity (L)</label>
              <input type="number" name="actual_quantity" step="0.01" class="form-control">
            </div>
            <div class="col-md-4 mb-3">
              <label class="form-label">Unit</label>
              <select name="unit" class="form-select" required>
                <option value="L">Liters</option>
                <option value="Kg">Kilograms</option>
              </select>
            </div>
            <div class="col-md-4 mb-3">
              <label class="form-label">Status</label>
              <select name="status" class="form-select" required>
                <option value="pending">Pending</option>
                <option value="completed">Completed</option>
                <option value="cancelled">Cancelled</option>
              </select>
            </div>
          </div>
          
          <input type="hidden" name="assignment_id" id="editAssignmentId">
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="updateAssignment()">Update Assignment</button>
      </div>
    </div>
  </div>
</div>

<style>
/* Calendar Grid Styles */
.calendar-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 15px;
  margin-bottom: 20px;
}

.calendar-day {
  border: 2px solid #e3e6f0;
  border-radius: 8px;
  padding: 12px;
  min-height: 120px;
  cursor: pointer;
  transition: all 0.2s ease;
  background: white;
}

.calendar-day:hover {
  border-color: #4e73df;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  transform: translateY(-2px);
}

.calendar-day.today {
  border-color: #1cc88a;
  background: linear-gradient(135deg, #1cc88a05, #1cc88a10);
}

.calendar-day.has-assignments {
  border-color: #4e73df;
  background: linear-gradient(135deg, #4e73df05, #4e73df10);
}

.day-header {
  text-align: center;
  margin-bottom: 8px;
}

.day-name {
  font-size: 0.7rem;
  color: #6c757d;
  text-transform: uppercase;
  font-weight: 600;
}

.day-number {
  font-size: 1.2rem;
  font-weight: bold;
  color: #2c3e50;
}

.day-content {
  text-align: center;
}

.assignment-count .badge {
  font-size: 0.75rem;
  margin-bottom: 5px;
}

.day-metrics {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.metric {
  font-size: 0.7rem;
}

.completion-bar {
  margin-top: 5px;
}

.no-assignments .btn-add {
  border: 2px dashed #28a745;
  background: transparent;
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.no-assignments .btn-add:hover {
  background: #28a745;
  color: white;
}

/* Assignment Cards */
.assignments-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 15px;
}

.assignment-card {
  border: 1px solid #e3e6f0;
  border-radius: 8px;
  padding: 15px;
  background: white;
  transition: all 0.2s ease;
}

.assignment-card:hover {
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  transform: translateY(-2px);
}

.assignment-card.completed {
  border-left: 4px solid #1cc88a;
}

.assignment-card.pending {
  border-left: 4px solid #f6c23e;
}

.assignment-card.cancelled {
  border-left: 4px solid #e74a3b;
}

.assignment-header {
  display: flex;
  justify-content: between;
  align-items: center;
  margin-bottom: 10px;
}

.vendor-name {
  font-weight: 600;
  color: #2c3e50;
  flex: 1;
}

.assignment-actions {
  display: flex;
  gap: 5px;
}

.assignment-details {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.detail-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.85rem;
}

.detail-row .label {
  font-weight: 500;
  color: #6c757d;
}

.detail-row .value {
  font-weight: 600;
}

/* Badge Styles */
.badge-success {
  background-color: #1cc88a;
}

.badge-warning {
  background-color: #f6c23e;
}

.badge-secondary {
  background-color: #858796;
}

.badge-danger {
  background-color: #e74a3b;
}

.badge-primary {
  background-color: #4e73df;
}

/* Responsive */
@media (max-width: 768px) {
  .calendar-grid {
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 10px;
  }
  
  .assignments-grid {
    grid-template-columns: 1fr;
  }
  
  .calendar-day {
    min-height: 100px;
    padding: 8px;
  }
}
</style>

<script>
function showDayDetails(date) {
  // Scroll to the assignment details for this date
  const daySection = document.querySelector(`[data-date="${date}"]`);
  if (daySection) {
    daySection.scrollIntoView({ behavior: 'smooth', block: 'start' });
    // Highlight the section briefly
    daySection.style.background = '#4e73df10';
    setTimeout(() => {
      daySection.style.background = '';
    }, 1000);
  }
}

function openNewAssignmentModal(date = null) {
  let url = '/milk-assignments/new';
  if (date) {
    url += `?date=${date}`;
  }
  window.location.href = url;
}

function editAssignment(assignmentId) {
  // Redirect to edit page instead of modal for better UX
  window.location.href = `/milk-assignments/${assignmentId}/edit`;
}

function updateAssignment() {
  const form = document.getElementById('editAssignmentForm');
  const formData = new FormData(form);
  const assignmentId = document.getElementById('editAssignmentId').value;
  
  // Convert FormData to JSON
  const data = {};
  formData.forEach((value, key) => {
    if (value !== '') data[key] = value;
  });
  
  fetch(`/milk-assignments/${assignmentId}`, {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
    },
    body: JSON.stringify({ procurement_assignment: data })
  })
  .then(response => {
    if (response.ok) {
      location.reload(); // Refresh the page to show updates
    } else {
      throw new Error('Update failed');
    }
  })
  .catch(error => {
    console.error('Error updating assignment:', error);
    alert('Error updating assignment');
  });
}

function deleteAssignment(assignmentId) {
  if (confirm('Are you sure you want to delete this assignment?')) {
    fetch(`/milk-assignments/${assignmentId}`, {
      method: 'DELETE',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      }
    })
    .then(response => {
      if (response.ok) {
        // Remove the assignment card from the DOM
        document.querySelector(`[data-id="${assignmentId}"]`).remove();
        location.reload(); // Refresh to update counters
      } else {
        throw new Error('Delete failed');
      }
    })
    .catch(error => {
      console.error('Error deleting assignment:', error);
      alert('Error deleting assignment');
    });
  }
}

function filterByStatus(status) {
  const cards = document.querySelectorAll('.assignment-card');
  cards.forEach(card => {
    if (status === 'all') {
      card.style.display = 'block';
    } else {
      card.style.display = card.classList.contains(status) ? 'block' : 'none';
    }
  });
}

function openBulkEditModal() {
  // Implementation for bulk editing assignments
  alert('Bulk edit functionality coming soon!');
}
</script>