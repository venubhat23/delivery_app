<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="card-body">
        <%= form_with model: @delivery_assignment, local: true, class: "row g-3" do |form| %>
          <% if @delivery_assignment.errors.any? %>
            <div class="col-12">
              <div class="alert alert-danger">
                <h5>Please fix the following errors:</h5>
                <ul class="mb-0">
                  <% @delivery_assignment.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            </div>
          <% end %>

          <!-- Customer Dropdown -->
          <div class="col-md-6">
            <%= form.label :customer_id, class: "form-label fw-bold" do %>
              <i class="fas fa-user me-1"></i>Customer *
            <% end %>
            <%= form.select :customer_id, 
                options_for_select([['Select customer', '']] + @customers.map { |c| [c.name, c.id] }), 
                {}, 
                { 
                  class: "form-select customer-select2", 
                  required: true,
                  'data-placeholder' => 'Search customers by name, phone, email, or member ID...'
                } %>
            <div class="form-text">
              <small><i class="fas fa-info-circle me-1"></i>Search and select a customer</small>
            </div>
          </div>

          <!-- Delivery Person Dropdown -->
          <div class="col-md-6">
            <%= form.label :delivery_person_id, class: "form-label fw-bold" do %>
              <i class="fas fa-truck me-1"></i>Delivery Person *
            <% end %>
            <%= form.select :delivery_person_id, 
                options_for_select([['Select delivery person', '']] + @delivery_people.map { |dp| [dp.name, dp.id] }), 
                {}, 
                { 
                  class: "form-select delivery-person-select2", 
                  required: true,
                  'data-placeholder' => 'Search delivery people by name...'
                } %>
            <div class="form-text">
              <small><i class="fas fa-info-circle me-1"></i>Search and select a delivery person</small>
            </div>
          </div>

          <!-- Product Dropdown -->
          <div class="col-md-6">
            <%= form.label :product_id, class: "form-label fw-bold" do %>
              <i class="fas fa-box me-1"></i>Product *
            <% end %>
            <%= form.select :product_id, 
                options_for_select([['Select product', '']] + @products.map { |p| ["#{p.name} - Rs#{p.price}", p.id] }), 
                {}, 
                { 
                  class: "form-select product-select2", 
                  required: true,
                  'data-placeholder' => 'Search products by name...'
                } %>
            <div class="form-text">
              <small><i class="fas fa-info-circle me-1"></i>Search and select a product</small>
            </div>
          </div>

          <div class="col-md-6">
            <%= form.label :quantity, class: "form-label fw-bold" %>
            <%= form.number_field :quantity, class: "form-control", required: true, step: "0.01" %>
          </div>

          <!-- Delivery Date -->
          <div class="col-md-6">
            <%= form.label :scheduled_date, "Delivery Date", class: "form-label fw-bold" %>
            <%= form.date_field :scheduled_date, class: "form-control", required: true, value: Date.today %>
          </div>

          <div class="col-md-6">
            <%= form.label :status, class: "form-label fw-bold" %>
            <%= form.select :status, 
                options_for_select([
                  ['Pending', 'pending'],
                  ['In Progress', 'in_progress'],
                  ['Completed', 'completed'],
                  ['Cancelled', 'cancelled']
                ], 'pending'), 
                {}, { class: "form-select", required: true } %>
          </div>

          <div class="col-12">
            <%= form.label :special_instructions, class: "form-label fw-bold" %>
            <%= form.text_area :special_instructions, class: "form-control", rows: 3, 
                placeholder: "Any special delivery instructions..." %>
          </div>
        </div>

        <!-- GPS Coordinates Tip -->
        <div class="alert alert-info mt-3">
          <i class="fas fa-lightbulb me-2"></i>
          <strong>Tip:</strong> You can get GPS coordinates by searching the address on Google Maps and copying the coordinates from the URL.
        </div>

        <!-- Multiple Products Delivery Setup -->
        <div class="card mt-4">
          <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <strong><i class="fas fa-truck me-2"></i>Optional: Create Additional Product Assignments</strong>
            <button type="button" class="btn btn-sm btn-primary" id="addProductBtn">
              <i class="fas fa-plus me-1"></i>Add Product
            </button>
          </div>
          <div class="card-body">
            <!-- Products Section -->
            <div class="products-section">
              <h6 class="mb-3"><i class="fas fa-boxes me-2"></i>Additional Products & Quantities</h6>
              <div id="productsContainer">
                <!-- Product rows will be added here -->
              </div>
              
              <div class="empty-products-message text-center text-muted py-4" id="emptyProductsMessage">
                <i class="fas fa-box-open fa-2x mb-2"></i>
                <p class="mb-1">No additional products added yet</p>
                <small>Click "Add Product" to create multiple delivery assignments for different products</small>
              </div>
            </div>

            <div class="form-text mt-3">
              <i class="fas fa-info-circle me-1"></i>
              Add multiple products to create separate delivery assignments with the same customer and delivery details.
            </div>
          </div>
        </div>

        <div class="row mt-4">
          <div class="col-12">
            <div class="d-flex gap-2">
              <%= form.submit "Create Assignment", class: "btn btn-primary" %>
              <%= link_to "Cancel", delivery_assignments_path, class: "btn btn-secondary" %>
            </div>
          </div>
        </div>
        <% end %>
      </div>
    </div>
  </div>

</div>

<!-- jQuery and Select2 are included in the layout -->

<script>
document.addEventListener('DOMContentLoaded', function() {
  initializeSelect2Dropdowns();
});

function initializeSelect2Dropdowns() {
  // Initialize Customer Select2
  $('.customer-select2').select2({
    placeholder: 'Search customers by name, phone, email, or member ID...',
    allowClear: true,
    ajax: {
      url: '/api/customers/search',
      dataType: 'json',
      delay: 250,
      data: function (params) {
        return {
          q: params.term || '',
          page: params.page || 1
        };
      },
      processResults: function (data, params) {
        return {
          results: data.results.map(function(customer) {
            return {
              id: customer.id,
              text: customer.name + (customer.phone ? ' ¬∑ ' + customer.phone : '') + (customer.member_id ? ' ¬∑ ID: ' + customer.member_id : ''),
              customer: customer
            };
          }),
          pagination: data.pagination
        };
      },
      cache: true
    },
    templateResult: function(customer) {
      if (customer.loading) return customer.text;
      
      if (!customer.customer) return customer.text;
      
      var $container = $(
        '<div class="select2-result-customer">' +
          '<div class="select2-result-customer__avatar">' + 
            (customer.customer.name ? customer.customer.name.charAt(0).toUpperCase() : 'C') +
          '</div>' +
          '<div class="select2-result-customer__meta">' +
            '<div class="select2-result-customer__name"></div>' +
            '<div class="select2-result-customer__details"></div>' +
          '</div>' +
        '</div>'
      );

      $container.find('.select2-result-customer__name').text(customer.customer.name);
      
      var details = [];
      if (customer.customer.phone) details.push('üìû ' + customer.customer.phone);
      if (customer.customer.member_id) details.push('üÜî ' + customer.customer.member_id);
      if (customer.customer.address) details.push('üìç ' + customer.customer.address);
      
      $container.find('.select2-result-customer__details').text(details.join(' ¬∑ '));

      return $container;
    },
    templateSelection: function(customer) {
      return customer.customer ? customer.customer.name : customer.text;
    }
  });

  // Initialize Delivery Person Select2
  $('.delivery-person-select2').select2({
    placeholder: 'Search delivery people by name...',
    allowClear: true,
    ajax: {
      url: '/api/delivery_people/search',
      dataType: 'json',
      delay: 250,
      data: function (params) {
        return {
          q: params.term || '',
          page: params.page || 1
        };
      },
      processResults: function (data, params) {
        return {
          results: data.results.map(function(person) {
            return {
              id: person.id,
              text: person.data ? person.data.name : person.text,
              person: person
            };
          }),
          pagination: data.pagination
        };
      },
      cache: true
    },
    templateResult: function(person) {
      if (person.loading) return person.text;
      
      if (!person.person) return person.text;
      
      var personData = person.person.data || person.person;
      var $container = $(
        '<div class="select2-result-person">' +
          '<div class="select2-result-person__avatar">' + 
            (personData.name ? personData.name.charAt(0).toUpperCase() : 'D') +
          '</div>' +
          '<div class="select2-result-person__meta">' +
            '<div class="select2-result-person__name"></div>' +
            '<div class="select2-result-person__details"></div>' +
          '</div>' +
        '</div>'
      );

      $container.find('.select2-result-person__name').text(personData.name);
      
      var details = [];
      if (personData.phone) details.push('üìû ' + personData.phone);
      if (personData.email) details.push('üìß ' + personData.email);
      
      $container.find('.select2-result-person__details').text(details.join(' ¬∑ ') || 'üöö Delivery Person');

      return $container;
    },
    templateSelection: function(person) {
      return person.person ? (person.person.data ? person.person.data.name : person.person.name) : person.text;
    }
  });

  // Initialize Product Select2 (local search)
  $('.product-select2').select2({
    placeholder: 'Search products by name...',
    allowClear: true
  });

  // Multiple Products Management
  let productCount = 0;
  const productsContainer = document.getElementById('productsContainer');
  const emptyMessage = document.getElementById('emptyProductsMessage');
  const addProductBtn = document.getElementById('addProductBtn');

  // Available products data for additional product selection
  const availableProducts = [
    <% @products.each_with_index do |p, index| %>
      {
        id: <%= p.id %>,
        name: "<%= j(p.name) %>",
        price: "<%= p.price %>",
        unit_type: "<%= p.unit_type %>"
      }<%= index < @products.count - 1 ? ',' : '' %>
    <% end %>
  ];

  addProductBtn.addEventListener('click', function() {
    addProductRow();
  });

  function addProductRow() {
    productCount++;
    const productRow = createProductRow(productCount);
    productsContainer.appendChild(productRow);
    
    // Initialize Select2 for the new product dropdown
    $(productRow).find('.additional-product-select').select2({
      placeholder: 'Search and select product...',
      allowClear: true,
      data: availableProducts.map(function(product) {
        return {
          id: product.id,
          text: product.name + ' - Rs' + product.price + ' (' + product.unit_type + ')',
          product: product
        };
      }),
      templateResult: function(product) {
        if (product.loading) return product.text;
        if (!product.product) return product.text;
        
        return $('<div>' +
          '<div class="fw-bold">' + product.product.name + '</div>' +
          '<div class="text-muted small">Rs' + product.product.price + ' per ' + product.product.unit_type + '</div>' +
        '</div>');
      },
      templateSelection: function(product) {
        return product.product ? product.product.name : product.text;
      }
    });

    updateEmptyMessage();
  }

  function createProductRow(index) {
    const row = document.createElement('div');
    row.className = 'product-row border rounded p-3 mb-3 bg-light';
    row.innerHTML = `
      <div class="row align-items-center">
        <div class="col-md-5">
          <label class="form-label fw-bold">Product</label>
          <select name="additional_products[${index}][product_id]" class="form-select additional-product-select" required>
            <option value="">Select product...</option>
          </select>
        </div>
        <div class="col-md-3">
          <label class="form-label fw-bold">Quantity</label>
          <input type="number" name="additional_products[${index}][quantity]" class="form-control" 
                 placeholder="Quantity" min="0.01" step="0.01" required>
        </div>
        <div class="col-md-3">
          <label class="form-label fw-bold">Unit</label>
          <select name="additional_products[${index}][unit]" class="form-select">
            <option value="pieces">Pieces</option>
            <option value="kg">Kilograms</option>
            <option value="liters">Liters</option>
            <option value="boxes">Boxes</option>
          </select>
        </div>
        <div class="col-md-1">
          <label class="form-label">&nbsp;</label>
          <button type="button" class="btn btn-danger btn-sm w-100 remove-product-btn" title="Remove Product">
            <i class="fas fa-trash"></i>
          </button>
        </div>
      </div>
    `;

    // Add remove functionality
    row.querySelector('.remove-product-btn').addEventListener('click', function() {
      row.remove();
      updateEmptyMessage();
    });

    return row;
  }

  function updateEmptyMessage() {
    const hasProducts = productsContainer.children.length > 0;
    emptyMessage.style.display = hasProducts ? 'none' : 'block';
  }

  // Initialize empty message
  updateEmptyMessage();
}
</script>

<style>
/* Form Styles */
.form-label.fw-bold {
  color: #5a5c69;
  font-weight: 600;
}

/* Select2 Custom Styles - Light Theme */
.select2-container {
  width: 100% !important;
}

.select2-selection {
  border: 1px solid #e1e8ed !important;
  border-radius: 0.5rem !important;
  height: auto !important;
  min-height: 42px !important;
  background: #fafbfc !important;
  transition: all 0.2s ease !important;
}

.select2-selection__rendered {
  padding: 0.5rem 0.75rem !important;
  line-height: 1.5 !important;
  color: #333 !important;
}

.select2-selection:focus,
.select2-container--default.select2-container--focus .select2-selection {
  border-color: #a8d5f0 !important;
  box-shadow: 0 0 0 0.15rem rgba(135, 206, 235, 0.2) !important;
  background: #fff !important;
}

.select2-selection:hover {
  border-color: #c1d9ec !important;
  background: #fff !important;
}

.select2-dropdown {
  border: 1px solid #e1e8ed !important;
  border-radius: 0.5rem !important;
  box-shadow: 0 0.25rem 1rem 0 rgba(0, 0, 0, 0.1) !important;
  background: #fff !important;
}

.select2-search__field {
  border: 1px solid #e1e8ed !important;
  border-radius: 0.4rem !important;
  padding: 0.4rem 0.6rem !important;
  background: #fafbfc !important;
}

.select2-results__option {
  padding: 0.6rem 0.8rem !important;
  border-bottom: 1px solid #f5f7fa !important;
}

.select2-results__option--highlighted {
  background-color: #e8f4f8 !important;
  color: #2c5aa0 !important;
}

/* Custom Result Templates */
.select2-result-customer,
.select2-result-person {
  display: flex;
  align-items: center;
  padding: 0.5rem 0;
}

.select2-result-customer__avatar,
.select2-result-person__avatar {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background: linear-gradient(45deg, #a8d5f0, #87ceeb);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #2c5aa0;
  font-weight: bold;
  font-size: 14px;
  margin-right: 0.75rem;
  flex-shrink: 0;
  border: 2px solid #e1e8ed;
}

.select2-result-person__avatar {
  background: linear-gradient(45deg, #b8e6b8, #98d982);
  color: #2d5c2d;
}

.select2-result-customer__meta,
.select2-result-person__meta {
  flex-grow: 1;
  min-width: 0;
}

.select2-result-customer__name,
.select2-result-person__name {
  font-weight: 600;
  color: #5a5c69;
  margin-bottom: 0.25rem;
}

.select2-result-customer__details,
.select2-result-person__details {
  font-size: 0.875rem;
  color: #858796;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Form Control Focus */
.form-control:focus,
.form-select:focus {
  border-color: #4e73df;
  box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
}

/* Card Enhancement */
.card {
  border: 1px solid #e3e6f0;
  box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
}

.card-header {
  background-color: #f8f9fc;
  border-bottom: 1px solid #e3e6f0;
}

/* Alert Styles */
.alert-warning {
  background-color: #fff3cd;
  border-color: #ffecb3;
  color: #856404;
}

.alert-danger {
  background-color: #f8d7da;
  border-color: #f5c6cb;
  color: #721c24;
}

/* Button Styles */
.btn-primary {
  background-color: #4e73df;
  border-color: #4e73df;
}

.btn-primary:hover {
  background-color: #2e59d9;
  border-color: #2653d4;
}

.btn-secondary {
  background-color: #858796;
  border-color: #858796;
}

.btn-secondary:hover {
  background-color: #717384;
  border-color: #6c757d;
}

.btn-success {
  background-color: #1cc88a;
  border-color: #1cc88a;
}

.btn-success:hover {
  background-color: #17a673;
  border-color: #169b6b;
}

.btn-info {
  background-color: #36b9cc;
  border-color: #36b9cc;
}

.btn-info:hover {
  background-color: #2c9faf;
  border-color: #2a96a5;
}

/* Status Badge Styles */
.badge {
  font-size: 0.875em;
  font-weight: 500;
  padding: 0.5em 0.75em;
  border-radius: 0.35rem;
}

/* Responsive Improvements */
@media (max-width: 768px) {
  .select2-result-customer__avatar,
  .select2-result-person__avatar {
    width: 30px;
    height: 30px;
    font-size: 12px;
  }
  
  .form-text small {
    font-size: 0.75rem;
  }
}

/* Form Group Spacing */
.row.g-3 > * {
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
  margin-top: var(--bs-gutter-y);
}

/* Text Area Styling */
.form-control[rows] {
  resize: vertical;
}

/* Code Styling */
code {
  color: #e83e8c;
  font-size: 87.5%;
  word-wrap: break-word;
  background-color: #f8f9fa;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}
</style>