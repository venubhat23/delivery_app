<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">New Delivery Assignment</h1>
  <%= link_to "Back to Assignments", delivery_assignments_path, class: "btn btn-secondary" %>
</div>

<div class="row">
  <div class="col-md-8">
    <div class="card">
      <div class="card-body">
        <%= form_with model: @delivery_assignment, local: true, class: "row g-3", id: "delivery-form" do |form| %>
          <% if @delivery_assignment.errors.any? %>
            <div class="col-12">
              <div class="alert alert-danger">
                <h5>Please fix the following errors:</h5>
                <ul class="mb-0">
                  <% @delivery_assignment.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            </div>
          <% end %>

          <div class="col-md-6">
            <%= form.label :customer_id, class: "form-label" %>
            <%= form.select :customer_id, 
                options_for_select([['Select Customer', '']] + @customers.map { |c| [c.name, c.id] }, @delivery_assignment.customer_id), 
                {}, { class: "form-select", required: true } %>
          </div>

          <div class="col-md-6">
            <%= form.label :delivery_person_id, "Delivery Person", class: "form-label" %>
            <%= form.select :delivery_person_id, 
                options_for_select([['Select Delivery Person', '']] + @delivery_people.map { |dp| [dp.name, dp.id] }, @delivery_assignment.user_id), 
                {}, { class: "form-select", required: true } %>
          </div>

          <div class="col-md-6">
            <%= form.label :product_id, class: "form-label" %>
            <%= form.select :product_id, 
                options_for_select([['Select Product', '']] + @products.map { |p| ["#{p.name} - Rs#{p.price}", p.id] }, @delivery_assignment.product_id), 
                {}, { class: "form-select", required: true } %>
          </div>

          <div class="col-md-6">
            <%= form.label :quantity, class: "form-label" %>
            <%= form.number_field :quantity, class: "form-control", min: 1, required: true %>
          </div>

          <!-- Scheduled Delivery Fields (always visible) -->
          <div class="col-md-6" id="start-date-field">
            <%= form.label :start_date, "Start Date", class: "form-label" %>
            <%= form.date_field :start_date, class: "form-control", min: Date.current, required: true %>
          </div>

          <div class="col-md-6" id="end-date-field">
            <%= form.label :end_date, "End Date", class: "form-label" %>
            <%= form.date_field :end_date, class: "form-control", min: Date.current, required: true %>
          </div>

          <div class="col-md-6" id="frequency-field">
            <%= form.label :frequency, class: "form-label" %>
            <%= form.select :frequency, 
                options_for_select([
                  ['Daily', 'daily'],
                  ['Weekly', 'weekly'],
                  ['Bi-Weekly', 'bi_weekly'],
                  ['Monthly', 'monthly']
                ], 'daily'), 
                { prompt: 'Select Frequency' }, 
                { class: "form-select", required: true } %>
          </div>

          <div class="col-12">
            <%= form.label :special_instructions, class: "form-label" %>
            <%= form.text_area :special_instructions, class: "form-control", rows: 3, 
                placeholder: "Any special delivery instructions..." %>
          </div>

          <div class="col-12">
            <div class="d-flex gap-2">
              <%= form.submit "Create Delivery Schedule", class: "btn btn-primary", id: "submit-btn" %>
              <%= link_to "Cancel", delivery_assignments_path, class: "btn btn-secondary" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>

  <!-- Preview/Info Panel -->
  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h5 class="card-title mb-0">Assignment Info</h5>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <strong>Status:</strong><br>
          <span class="badge bg-warning text-dark">Pending</span>
        </div>
        
        <div class="mb-3">
          <strong>Available Delivery People:</strong><br>
          <small class="text-muted"><%= @delivery_people.count %> available</small>
        </div>
        
        <div class="mb-3">
          <strong>Total Customers:</strong><br>
          <small class="text-muted"><%= @customers.count %> customers</small>
        </div>
        
        <div class="mb-3">
          <strong>Available Products:</strong><br>
          <small class="text-muted"><%= @products.count %> products</small>
        </div>

        <div id="schedule-preview">
          <div class="alert alert-info">
            <h6><i class="fas fa-info-circle me-1"></i>Schedule Preview</h6>
            <small id="schedule-info">Select dates and frequency to see preview</small>
          </div>
        </div>
      </div>
    </div>
    
    <div class="card mt-3">
      <div class="card-header">
        <h5 class="card-title mb-0">Quick Tips</h5>
      </div>
      <div class="card-body">
        <ul class="list-unstyled small">
          <li class="mb-2">
            <i class="fas fa-repeat text-primary me-1"></i>
            <span>Scheduled deliveries create multiple assignments automatically</span>
          </li>
          <li class="mb-2">
            <i class="fas fa-calendar text-warning me-1"></i>
            <span>Start and end date cannot be in the past</span>
          </li>
          <li class="mb-2">
            <i class="fas fa-truck text-success me-1"></i>
            <span>Delivery person assignment can be changed later</span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const startDateField = document.getElementById('delivery_assignment_start_date');
  const endDateField = document.getElementById('delivery_assignment_end_date');
  const frequencyField = document.getElementById('delivery_assignment_frequency');
  const schedulePreview = document.getElementById('schedule-preview');
  const submitBtn = document.getElementById('submit-btn');

  function updateSchedulePreview() {
    const startDate = startDateField.value;
    const endDate = endDateField.value;
    const frequency = frequencyField.value;
    
    if (startDate && endDate && frequency) {
      const start = new Date(startDate);
      const end = new Date(endDate);
      
      if (start <= end) {
        let deliveryCount = 0;
        let current = new Date(start);
        
        // Calculate approximate number of deliveries
        while (current <= end) {
          deliveryCount++;
          switch (frequency) {
            case 'daily':
              current.setDate(current.getDate() + 1);
              break;
            case 'weekly':
              current.setDate(current.getDate() + 7);
              break;
            case 'bi_weekly':
              current.setDate(current.getDate() + 14);
              break;
            case 'monthly':
              current.setMonth(current.getMonth() + 1);
              break;
          }
        }
        
        document.getElementById('schedule-info').innerHTML = 
          `<strong>${deliveryCount}</strong> delivery assignments will be created<br>
           <small>From ${start.toLocaleDateString()} to ${end.toLocaleDateString()}</small>`;
      } else {
        document.getElementById('schedule-info').innerHTML = 
          '<span class="text-danger">End date must be after start date</span>';
      }
    } else {
      document.getElementById('schedule-info').textContent = 'Select dates and frequency to see preview';
    }
  }

  // Preview update listeners
  startDateField.addEventListener('change', updateSchedulePreview);
  endDateField.addEventListener('change', updateSchedulePreview);
  frequencyField.addEventListener('change', updateSchedulePreview);

  // Initialize
  updateSchedulePreview();
});
</script>