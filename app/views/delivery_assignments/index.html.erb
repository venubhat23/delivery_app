<!-- Delivery Assignments Header -->
<div class="container-fluid">
  <div class="row" style="margin-top: 2rem; margin-left: 1rem; padding-top: 1.5rem;">
    <div class="col-12">
<div class="page-header">
  <div class="d-flex justify-content-between align-items-center">
    <div>
      <h1 class="h2 mb-2">
        <i class="fas fa-truck me-3"></i>Delivery Assignments
        <% if @current_date != Date.today %>
          <span class="badge bg-info ms-2">
            <i class="fas fa-calendar-alt me-1"></i>
            <%= @current_date.strftime("%d %b %Y") %>
          </span>
        <% else %>
          <span class="badge bg-success ms-2">
            <i class="fas fa-calendar-day me-1"></i>TODAY
          </span>
        <% end %>
      </h1>
      <p class="text-muted mb-0">Manage delivery assignments and track delivery progress</p>
    </div>
    <div class="d-flex gap-2">
      <%= link_to new_delivery_assignment_path, class: "btn btn-primary" do %>
        <i class="fas fa-plus me-2"></i>New Assignment
      <% end %>
    </div>
  </div>
</div>

<!-- Enhanced Stats Cards -->
<div class="row mb-3">
  <div class="col-md-3 mb-2">
    <div class="stats-card">
      <div class="stats-icon">
        <i class="fas fa-clipboard-list"></i>
      </div>
      <div class="stats-number"><%= @total_assignments %></div>
      <div class="stats-label">Total Assignments</div>
    </div>
  </div>
  <div class="col-md-3 mb-2">
    <div class="stats-card stats-card-warning">
      <div class="stats-icon">
        <i class="fas fa-clock"></i>
      </div>
      <div class="stats-number"><%= @pending_assignments %></div>
      <div class="stats-label">Pending</div>
    </div>
  </div>
  <div class="col-md-3 mb-2">
    <div class="stats-card stats-card-success">
      <div class="stats-icon">
        <i class="fas fa-check-circle"></i>
      </div>
      <div class="stats-number"><%= @completed_assignments %></div>
      <div class="stats-label">Completed</div>
    </div>
  </div>
  <div class="col-md-3 mb-2">
    <div class="stats-card stats-card-info">
      <div class="stats-icon">
        <i class="fas fa-percentage"></i>
      </div>
      <div class="stats-number"><%= @completion_rate %>%</div>
      <div class="stats-label">Completion Rate</div>
    </div>
  </div>
</div>

<!-- Ultra Compact Single Line Filter -->
<div class="compact-filter-container mb-3">
  <%= form_with url: delivery_assignments_path, method: :get, local: true, class: "compact-filter-form" do |form| %>
    <div class="filter-row">
      <div class="filter-item">
        <%= form.date_field :date,
                            value: params[:date].present? ? params[:date] : Date.current,
                            class: "form-control compact-input",
                            title: "Select date",
                            placeholder: "Date" %>
      </div>
      <div class="filter-item">
        <%= form.select :status,
                        options_for_select([['All Statuses', '']] + @statuses.map { |s| [s.humanize, s] }, params[:status]),
                        { include_blank: false },
                        { class: "form-select compact-input" } %>
      </div>
      <div class="filter-item">
        <%= form.select :delivery_person_id,
                        options_for_select([['All Personnel', '']] + @delivery_people.map { |dp| [dp.name, dp.id] }, params[:delivery_person_id]),
                        { include_blank: false },
                        { class: "form-select compact-input" } %>
      </div>
      <div class="filter-actions">
        <% if params[:status].present? || params[:delivery_person_id].present? %>
          <%= link_to delivery_assignments_path, class: "btn btn-outline-secondary btn-sm clear-btn" do %>
            <i class="fas fa-times"></i>
          <% end %>
        <% end %>
        <span class="badge compact-badge bg-primary">
          <i class="fas fa-list me-1"></i><%= @delivery_assignments&.count || 0 %>
        </span>
      </div>
    </div>
    <%= form.submit "Filter", class: "d-none" %>
  <% end %>
</div>

<!-- Compact Action Bar -->
<div class="compact-action-bar mb-3">
  <div class="action-left">
    <%
    # Get all today's pending assignments (regardless of filters)
    all_today_pending = DeliveryAssignment.where(status: 'pending').where('scheduled_date <= ?', Date.current)
    all_today_count = all_today_pending.count

    # Get current filtered results pending assignments
    current_filtered_pending_ids = @delivery_assignments.where(status: 'pending').where('scheduled_date <= ?', Date.current).pluck(:id)
    current_filtered_count = current_filtered_pending_ids.size

    # Check if filters are applied (status, delivery_person, search, or non-today date)
    filters_applied = params[:status].present? || params[:delivery_person_id].present? || params[:search].present?
    %>

    <!-- Bulk Actions -->
    <% if all_today_count > 0 %>
      <%= form_with url: bulk_complete_delivery_assignments_path, method: :post, local: true, class: "d-inline-flex" do |form| %>
        <%= form.hidden_field :complete_type, value: "all_today" %>
        <%= form.submit "Complete All (#{all_today_count})",
            class: "btn btn-outline-success btn-sm me-2",
            title: "Complete all pending assignments for today",
            data: {
              confirm: "Are you sure you want to mark all #{all_today_count} pending assignment(s) for today as completed?"
            } %>
      <% end %>
    <% end %>

    <% if current_filtered_count > 0 %>
      <%= form_with url: bulk_complete_delivery_assignments_path, method: :post, local: true, class: "d-inline-flex" do |form| %>
        <%= form.hidden_field :delivery_person_id, value: params[:delivery_person_id] %>
        <%= form.hidden_field :search, value: params[:search] %>
        <%= form.hidden_field :date, value: params[:date] %>
        <%= form.hidden_field :complete_type, value: "filtered" %>
        <% current_filtered_pending_ids.each do |id| %>
          <%= hidden_field_tag 'assignment_ids[]', id %>
        <% end %>
        <%
          button_text = if filters_applied
            "Complete (#{current_filtered_count})"
          else
            current_page_count = [@delivery_assignments.size, current_filtered_count].min
            "Complete (#{current_page_count})"
          end
        %>
        <%= form.submit button_text,
            class: "btn btn-success btn-sm me-2",
            title: filters_applied ? "Complete filtered pending assignments" : "Complete pending assignments on current page",
            data: {
              confirm: "Are you sure you want to mark #{current_filtered_count} pending assignment(s) as completed?"
            } %>
      <% end %>
    <% end %>
  </div>

  <div class="action-center">
    <!-- Navigation -->
    <div class="btn-group btn-group-sm me-3" role="group">
      <%= link_to delivery_assignments_path(date: Date.yesterday),
          class: "btn btn-outline-primary",
          title: "Yesterday" do %>
        <i class="fas fa-chevron-left"></i>
      <% end %>
      <%= link_to delivery_assignments_path,
          class: "btn btn-outline-primary",
          title: "Today" do %>
        <i class="fas fa-home"></i>
      <% end %>
      <%= link_to delivery_assignments_path(date: Date.tomorrow),
          class: "btn btn-outline-primary",
          title: "Tomorrow" do %>
        <i class="fas fa-chevron-right"></i>
      <% end %>
    </div>
  </div>

  <div class="action-right">
    <!-- View Toggle -->
    <div class="btn-group btn-group-sm me-2" role="group">
      <button type="button" class="btn btn-outline-secondary active" id="tableView" title="Table View">
        <i class="fas fa-table"></i>
      </button>
      <button type="button" class="btn btn-outline-secondary" id="cardView" title="Card View">
        <i class="fas fa-th"></i>
      </button>
    </div>

    <!-- Clear All Button -->
    <% if params[:status].present? || params[:delivery_person_id].present? || params[:search].present? || (params[:date].present? && params[:date] != Date.today.to_s) %>
      <%= link_to delivery_assignments_path, class: "btn btn-outline-secondary btn-sm" do %>
        <i class="fas fa-times"></i>
      <% end %>
    <% end %>
  </div>
</div>

<!-- Assignments Table -->
<div class="card">
  <div class="card-header">
    <div class="d-flex justify-content-between align-items-center">
      <h6 class="mb-0">
        <i class="fas fa-list me-2"></i>Delivery Assignments List
      </h6>
      <div class="d-flex align-items-center">
        <% if params[:status].present? || params[:delivery_person_id].present? %>
          <span class="badge bg-info me-2">Filtered Results</span>
        <% end %>
      </div>
    </div>
  </div>
  <div class="card-body p-0">
    <% if @delivery_assignments.any? %>
      <!-- Table View -->
      <div id="tableViewContent" class="table-responsive">
        <table class="table table-hover mb-0">
          <thead>
            <tr>
              <th><i class="fas fa-hashtag me-1"></i>ID</th>
              <th><i class="fas fa-user me-1"></i>Customer</th>
              <th><i class="fas fa-truck me-1"></i>Delivery Person</th>
              <th><i class="fas fa-cube me-1"></i>Product</th>
              <th><i class="fas fa-sort-numeric-up me-1"></i>Quantity</th>
              <th><i class="fas fa-money-bill-wave me-1"></i>Amount</th>
              <th><i class="fas fa-calendar me-1"></i>Delivery Date</th>
              <th><i class="fas fa-info-circle me-1"></i>Status</th>
              <th><i class="fas fa-cogs me-1"></i>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% @delivery_assignments.each do |assignment| %>
              <tr class="assignment-row">
                <td>
                  <div class="d-flex align-items-center">
                    <div class="assignment-avatar me-3">
                      <%= assignment.id %>
                    </div>
                  </div>
                </td>
                <td>
                  <div class="customer-info">
                    <strong class="text-primary"><%= assignment.customer.name %></strong>
                    <% if assignment.customer.phone_number.present? %>
                      <div class="text-muted small">
                        <i class="fas fa-phone me-1"></i><%= assignment.customer.phone_number %>
                      </div>
                    <% end %>
                  </div>
                </td>
                <td>
                  <div class="delivery-person-info">
                    <% if assignment.delivery_person %>
                      <div class="d-flex align-items-center">
                        <div class="delivery-person-avatar me-2">
                          <%= assignment.delivery_person.name.first.upcase %>
                        </div>
                        <strong><%= assignment.delivery_person.name %></strong>
                      </div>
                    <% else %>
                      <span class="text-muted">Not assigned</span>
                    <% end %>
                  </div>
                </td>
                <td>
                  <div class="product-info">
                    <strong><%= assignment.product.name %></strong>
                    <div class="text-muted small">
                      <i class="fas fa-tag me-1"></i><%= assignment.product.unit_type %>
                    </div>
                  </div>
                </td>
                <td>
                  <span class="fw-bold text-info">
                    <%= assignment.quantity %> <%= assignment.product.unit_type %>
                  </span>
                </td>
                <td>
                  <div class="amount-info">
                    <div class="d-flex flex-column">
                      <span class="fw-bold text-success">
                        Rs <%= assignment.final_amount.round(2) %>
                      </span>
                      <% if assignment.has_discount? %>
                        <small class="text-muted text-decoration-line-through">
                          Rs <%= assignment.total_amount.round(2) %>
                        </small>
                        <small class="text-warning">
                          <i class="fas fa-percentage me-1"></i>-Rs <%= assignment.discount_amount.round(2) %>
                        </small>
                      <% end %>
                    </div>
                  </div>
                </td>
                <td>
                  <span class="<%= assignment.overdue? ? 'text-danger fw-bold' : 'text-muted' %>">
                    <%= assignment.scheduled_date.strftime('%d.%m.%Y') %>
                  </span>
                  <% if assignment.overdue? %>
                    <div class="text-danger small">
                      <i class="fas fa-exclamation-triangle me-1"></i>Overdue
                    </div>
                  <% end %>
                </td>
                <td>
                  <% case assignment.status %>
                  <% when 'pending' %>
                    <span class="badge bg-warning">
                      <i class="fas fa-clock me-1"></i>Pending
                    </span>
                  <% when 'completed' %>
                    <span class="badge bg-success">
                      <i class="fas fa-check me-1"></i>Completed
                    </span>
                  <% when 'cancelled' %>
                    <span class="badge bg-danger">
                      <i class="fas fa-times me-1"></i>Cancelled
                    </span>
                  <% else %>
                    <span class="badge bg-secondary">
                      <i class="fas fa-question me-1"></i><%= assignment.status.humanize %>
                    </span>
                  <% end %>
                </td>
                <td>
                  <div class="btn-group" role="group">
                    <%= link_to delivery_assignment_path(assignment), class: "btn btn-sm btn-outline-primary", title: "View Details" do %>
                      <i class="fas fa-eye"></i>
                    <% end %>
                    <%= link_to edit_delivery_assignment_path(assignment), class: "btn btn-sm btn-outline-warning", title: "Edit Assignment" do %>
                      <i class="fas fa-edit"></i>
                    <% end %>
                    <% if assignment.status == 'pending' %>
                      <%= button_to complete_delivery_assignment_path(assignment),
                          method: :patch,
                          form: { "data-turbo-confirm": "Are you sure you want to mark this assignment as completed?", class: "d-inline" },
                          class: "btn btn-sm btn-outline-success",
                          title: "Mark as Complete" do %>
                        <i class="fas fa-check"></i>
                      <% end %>
                    <% end %>
                    <%= button_to delivery_assignment_path(assignment),
                        method: :delete,
                        form: { "data-turbo-confirm": "Are you sure you want to delete this assignment?", class: "d-inline" },
                        class: "btn btn-sm btn-outline-danger",
                        title: "Delete Assignment" do %>
                      <i class="fas fa-trash"></i>
                    <% end %>
                  </div>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
      
      <!-- Pagination -->
      <div class="d-flex justify-content-center mt-4">
        <%= paginate @delivery_assignments, theme: 'twitter-bootstrap-4' %>
      </div>
      
      <!-- Card View (Hidden by default) -->
      <div id="cardViewContent" class="d-none">
        <div class="row p-4">
          <% @delivery_assignments.each do |assignment| %>
            <div class="col-md-6 col-lg-4 mb-4">
              <div class="assignment-card">
                <div class="assignment-card-header">
                  <div class="assignment-id">
                    <i class="fas fa-clipboard-list me-2"></i>
                    Assignment #<%= assignment.id %>
                  </div>
                  <div class="assignment-status">
                    <% case assignment.status %>
                    <% when 'pending' %>
                      <span class="badge bg-warning">Pending</span>
                    <% when 'completed' %>
                      <span class="badge bg-success">Completed</span>
                    <% when 'cancelled' %>
                      <span class="badge bg-danger">Cancelled</span>
                    <% else %>
                      <span class="badge bg-secondary"><%= assignment.status.humanize %></span>
                    <% end %>
                  </div>
                </div>
                
                <div class="assignment-card-body">
                  <h6 class="customer-name"><%= assignment.customer.name %></h6>
                  
                  <div class="assignment-details">
                    <div class="detail-item">
                      <i class="fas fa-truck me-2 text-muted"></i>
                      <span><%= assignment.delivery_person&.name || 'Not assigned' %></span>
                    </div>
                    <div class="detail-item">
                      <i class="fas fa-cube me-2 text-muted"></i>
                      <span><%= assignment.product.name %> (<%= assignment.quantity %> <%= assignment.product.unit_type %>)</span>
                    </div>
                    <div class="detail-item">
                      <i class="fas fa-money-bill-wave me-2 text-muted"></i>
                      <span class="fw-bold text-success">Rs <%= assignment.final_amount.round(2) %></span>
                      <% if assignment.has_discount? %>
                        <small class="text-muted ms-1">
                          (was Rs <%= assignment.total_amount.round(2) %>)
                        </small>
                      <% end %>
                    </div>
                    <div class="detail-item">
                      <i class="fas fa-calendar me-2 text-muted"></i>
                      <span class="<%= assignment.overdue? ? 'text-danger' : '' %>">
                        <%= assignment.scheduled_date.strftime('%d.%m.%Y') %>
                      </span>
                    </div>
                  </div>
                  
                  <div class="assignment-actions mt-3">
                    <%= link_to delivery_assignment_path(assignment), class: "btn btn-sm btn-outline-primary me-1" do %>
                      <i class="fas fa-eye me-1"></i>View
                    <% end %>
                    <%= link_to edit_delivery_assignment_path(assignment), class: "btn btn-sm btn-outline-warning me-1" do %>
                      <i class="fas fa-edit me-1"></i>Edit
                    <% end %>
                    <% if assignment.status == 'pending' %>
                      <%= button_to complete_delivery_assignment_path(assignment),
                          method: :patch,
                          form: { "data-turbo-confirm": "Mark as completed?", class: "d-inline" },
                          class: "btn btn-sm btn-outline-success me-1" do %>
                        <i class="fas fa-check me-1"></i>Complete
                      <% end %>
                    <% end %>
                    <%= button_to delivery_assignment_path(assignment),
                        method: :delete,
                        form: { "data-turbo-confirm": "Delete assignment?", class: "d-inline" },
                        class: "btn btn-sm btn-outline-danger" do %>
                      <i class="fas fa-trash me-1"></i>Delete
                    <% end %>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </div>
        
        <!-- Pagination for Card View -->
        <div class="d-flex justify-content-center mt-4">
          <%= paginate @delivery_assignments, theme: 'twitter-bootstrap-4' %>
        </div>
      </div>
    <% else %>
      <div class="empty-state">
        <i class="fas fa-truck"></i>
        <h4>No Delivery Assignments Found</h4>
        <% if params[:status].present? || params[:delivery_person_id].present? %>
          <p>No assignments match your current filters.</p>
          <%= link_to delivery_assignments_path, class: "btn btn-outline-primary me-2" do %>
            <i class="fas fa-times me-2"></i>Clear Filters
          <% end %>
        <% else %>
          <p>Start by creating your first delivery assignment.</p>
        <% end %>
        <div class="mt-3">
          <%= link_to new_delivery_assignment_path, class: "btn btn-primary" do %>
            <i class="fas fa-plus me-2"></i>New Assignment
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
</div>

<style>
/* Modern Delivery Assignments UI - Enhanced Professional Design */

/* Modern Page Header */
.modern-page-header {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 16px;
  padding: 2rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 10px 25px rgba(102, 126, 234, 0.2);
  position: relative;
  overflow: hidden;
}

.modern-page-header::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 300px;
  height: 300px;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  transform: translate(50%, -50%);
}

.header-content {
  position: relative;
  z-index: 2;
}

.header-icon {
  width: 60px;
  height: 60px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 1rem;
  backdrop-filter: blur(10px);
}

.header-icon i {
  font-size: 24px;
  color: white;
}

.page-title {
  font-size: 2rem;
  font-weight: 700;
  color: white;
  margin-bottom: 0.5rem;
}

.page-subtitle {
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 0;
  font-size: 1rem;
}

.date-badge-container {
  margin-top: 0.5rem;
}

.modern-badge {
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-weight: 600;
  font-size: 0.875rem;
  display: inline-flex;
  align-items: center;
}

.badge-info {
  background: rgba(59, 130, 246, 0.2);
  color: #3b82f6;
  border: 1px solid rgba(59, 130, 246, 0.3);
}

.badge-today {
  background: rgba(34, 197, 94, 0.2);
  color: #22c55e;
  border: 1px solid rgba(34, 197, 94, 0.3);
  animation: pulse 2s infinite;
}

.header-actions {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  position: relative;
  z-index: 2;
}

.modern-btn-primary {
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
}

.modern-btn-primary:hover {
  background: rgba(255, 255, 255, 0.25);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Modern Stats Dashboard */
.stats-dashboard {
  margin-bottom: 2rem;
}

.modern-stats-card {
  background: white;
  border-radius: 12px;
  padding: 1.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  border-left: 4px solid transparent;
}

.modern-stats-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
}

.modern-stats-card.primary {
  border-left-color: #667eea;
}

.modern-stats-card.warning {
  border-left-color: #f59e0b;
}

.modern-stats-card.success {
  border-left-color: #10b981;
}

.modern-stats-card.danger {
  border-left-color: #ef4444;
}

.modern-stats-card.info {
  border-left-color: #667eea;
}

.stats-content {
  position: relative;
  z-index: 2;
}

.stats-header {
  display: flex;
  justify-content: between;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.stats-icon-wrapper {
  width: 48px;
  height: 48px;
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  color: white;
}

.primary .stats-icon-wrapper {
  background: linear-gradient(135deg, #667eea, #764ba2);
}

.warning .stats-icon-wrapper {
  background: linear-gradient(135deg, #f59e0b, #d97706);
}

.success .stats-icon-wrapper {
  background: linear-gradient(135deg, #10b981, #059669);
}

.danger .stats-icon-wrapper {
  background: linear-gradient(135deg, #ef4444, #dc2626);
}

.info .stats-icon-wrapper {
  background: linear-gradient(135deg, #667eea, #764ba2);
}

.stats-trend {
  margin-left: auto;
}

.stats-badge {
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 600;
  background: rgba(102, 126, 234, 0.1);
  color: #667eea;
}

.stats-badge.urgent {
  background: rgba(239, 68, 68, 0.1);
  color: #ef4444;
}

.stats-body h3.stats-number {
  font-size: 2rem;
  font-weight: 700;
  margin: 0;
  color: #1f2937;
}

.stats-body p.stats-label {
  margin: 0.25rem 0 0 0;
  color: #6b7280;
  font-weight: 500;
  font-size: 0.875rem;
}

/* Modern Filter Panel */
.modern-filter-panel {
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.filter-header {
  background: #f8fafc;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid #e2e8f0;
}

.filter-title {
  font-weight: 600;
  color: #374151;
  display: flex;
  align-items: center;
}

.filter-toggle {
  cursor: pointer;
  color: #6b7280;
  transition: color 0.2s;
}

.filter-toggle:hover {
  color: #374151;
}

.filter-content {
  padding: 1.5rem;
}

.modern-filter-form {
  margin: 0;
}

.modern-filter-label {
  font-weight: 600;
  color: #374151;
  margin-bottom: 0.5rem;
  display: block;
  font-size: 0.875rem;
}

.modern-input {
  border: 1px solid #d1d5db;
  border-radius: 8px;
  padding: 0.75rem;
  font-size: 0.875rem;
  transition: all 0.2s ease;
  background: white;
}

.modern-input:focus {
  outline: none;
  border-color: #667eea;
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

.modern-btn-secondary {
  background: white;
  border: 1px solid #d1d5db;
  color: #374151;
  transition: all 0.2s ease;
}

.modern-btn-secondary:hover {
  background: #f9fafb;
  border-color: #9ca3af;
}

/* Action Buttons Section */
.actions-section {
  background: white;
  border-radius: 12px;
  padding: 1rem 0;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Animations */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modern-stats-card {
  animation: fadeIn 0.5s ease-out;
}

.modern-stats-card:nth-child(2) {
  animation-delay: 0.1s;
}

.modern-stats-card:nth-child(3) {
  animation-delay: 0.2s;
}

.modern-stats-card:nth-child(4) {
  animation-delay: 0.3s;
}

.modern-stats-card:nth-child(5) {
  animation-delay: 0.4s;
}

/* Responsive Design */
@media (max-width: 768px) {
  .modern-page-header {
    padding: 1.5rem;
    text-align: center;
  }
  
  .page-title {
    font-size: 1.5rem;
  }
  
  .header-actions {
    justify-content: center;
    margin-top: 1rem;
  }
  
  .modern-stats-card {
    margin-bottom: 1rem;
  }
  
  .filter-content {
    padding: 1rem;
  }
  
  .modern-input {
    font-size: 16px; /* Prevents zoom on iOS */
  }
}

/* Table Improvements */
.table {
  border-radius: 12px;
  overflow: hidden;
}

.table thead th {
  background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
  color: white;
  font-weight: 600;
  border: none;
  padding: 1rem;
}

.table tbody tr:hover {
  background-color: rgba(102, 126, 234, 0.05);
}

/* Button Improvements */
.btn {
  border-radius: 8px;
  font-weight: 500;
  transition: all 0.2s ease;
}

.btn:hover {
  transform: translateY(-1px);
}

.btn-primary {
  background: linear-gradient(135deg, #667eea, #764ba2);
  border: none;
}

.btn-primary:hover {
  background: linear-gradient(135deg, #5a67d8, #6b46c1);
  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
}

/* Card improvements */
.card {
  border: none;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.card-header {
  background: #f8fafc;
  border-bottom: 1px solid #e2e8f0;
  font-weight: 600;
}

.page-header::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  animation: rotate 20s linear infinite;
}

.page-header h1 {
  color: white !important;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 2;
}

.page-header p {
  color: rgba(255, 255, 255, 0.9) !important;
  position: relative;
  z-index: 2;
}

.page-header .btn {
  position: relative;
  z-index: 2;
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.15) !important;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.page-header .btn:hover {
  background: rgba(255, 255, 255, 0.25) !important;
  transform: translateY(-2px);
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhanced Stats Cards */
.stats-card {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 20px;
  padding: 2rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(102, 126, 234, 0.1);
}

.stats-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: var(--primary-gradient);
}

.stats-card::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
  border-radius: 0 0 0 60px;
}

.stats-card:hover {
  box-shadow: 0 20px 60px rgba(102, 126, 234, 0.15);
  transform: translateY(-8px) scale(1.02);
}

.stats-card .stats-icon {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 50px;
  height: 50px;
  background: var(--primary-gradient);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 20px;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  z-index: 2;
}

.stats-card .stats-number {
  font-size: 2.5rem;
  font-weight: 800;
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  line-height: 1;
  margin-bottom: 0.5rem;
  position: relative;
  z-index: 2;
}

.stats-card .stats-label {
  color: var(--text-secondary);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.8rem;
  position: relative;
  z-index: 2;
}

.stats-card-success::before {
  background: var(--success-gradient);
}

.stats-card-warning::before {
  background: var(--warning-gradient);
}

.stats-card-danger::before {
  background: var(--danger-gradient);
}

.stats-card-info::before {
  background: var(--dark-gradient);
}

.stats-card-success .stats-icon {
  background: var(--success-gradient);
}

.stats-card-warning .stats-icon {
  background: var(--warning-gradient);
}

.stats-card-danger .stats-icon {
  background: var(--danger-gradient);
}

.stats-card-info .stats-icon {
  background: var(--dark-gradient);
}

/* Enhanced Filter Card */
.card {
  border-radius: 20px;
  border: none;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
  overflow: hidden;
}

.card:hover {
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12);
  transform: translateY(-2px);
}

.card-header {
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  border-bottom: 1px solid rgba(102, 126, 234, 0.1);
  padding: 1.5rem 2rem;
}

.card-body {
  padding: 2rem;
}

/* Enhanced Assignment Table */
.table {
  border-radius: 20px;
  overflow: hidden;
  box-shadow: none;
  margin: 0;
}

.table thead th {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-size: 0.875rem;
  padding: 1.5rem 1rem;
  border: none;
  position: relative;
}

.table thead th i {
  opacity: 0.8;
  margin-right: 0.5rem;
}

.assignment-row {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  border-bottom: 1px solid rgba(102, 126, 234, 0.05);
}

.assignment-row:hover {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.03) 0%, rgba(118, 75, 162, 0.03) 100%);
  transform: translateX(8px) scale(1.01);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.1);
}

.assignment-row td {
  padding: 1.5rem 1rem;
  vertical-align: middle;
  border-color: rgba(102, 126, 234, 0.05);
}

/* Enhanced Assignment Avatar */
.assignment-avatar {
  width: 50px;
  height: 50px;
  border-radius: 15px;
  background: var(--primary-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 700;
  font-size: 18px;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  transition: all 0.3s ease;
}

.assignment-avatar:hover {
  transform: scale(1.1) rotate(5deg);
  box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);
}

.delivery-person-avatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background: var(--primary-gradient);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 600;
  font-size: 12px;
  box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
}

/* Enhanced Assignment Cards */
.assignment-card {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 20px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  border: 1px solid rgba(102, 126, 234, 0.1);
  position: relative;
}

.assignment-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: var(--primary-gradient);
}

.assignment-card:hover {
  box-shadow: 0 25px 50px rgba(102, 126, 234, 0.15);
  transform: translateY(-10px) scale(1.02);
}

.assignment-card-header {
  padding: 2rem;
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid rgba(102, 126, 234, 0.1);
  position: relative;
}

.assignment-card-body {
  padding: 2rem;
}

.assignment-id {
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 1rem;
  font-size: 1.1rem;
}

.customer-name {
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 1rem;
  font-size: 1.1rem;
}

.assignment-details {
  margin-bottom: 1.5rem;
}

.detail-item {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
}

.assignment-actions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

/* Info Sections */
.customer-info,
.delivery-person-info,
.product-info {
  display: flex;
  flex-direction: column;
}

/* Enhanced Badges */
.badge {
  padding: 0.5rem 1rem;
  border-radius: 25px;
  font-weight: 600;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.badge:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
}

.badge.bg-info {
  background: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%) !important;
}

.badge.bg-success {
  background: linear-gradient(135deg, #10b981 0%, #059669 100%) !important;
}

.badge.bg-danger {
  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%) !important;
}

.badge.bg-warning {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%) !important;
}

.badge.bg-secondary {
  background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%) !important;
}

.badge.bg-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
}

/* Enhanced Action Buttons */
.btn-group .btn {
  border-radius: 12px !important;
  margin-right: 6px;
  padding: 0.5rem 0.75rem;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.btn-group .btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.btn-group .btn:last-child {
  margin-right: 0;
}

.btn-outline-primary {
  border: 2px solid #667eea;
  color: #667eea;
  background: transparent;
}

.btn-outline-primary:hover {
  background: #667eea;
  color: white;
  border-color: #667eea;
}

.btn-outline-warning {
  border: 2px solid #f59e0b;
  color: #f59e0b;
  background: transparent;
}

.btn-outline-warning:hover {
  background: #f59e0b;
  color: white;
  border-color: #f59e0b;
}

.btn-outline-danger {
  border: 2px solid #ef4444;
  color: #ef4444;
  background: transparent;
}

.btn-outline-danger:hover {
  background: #ef4444;
  color: white;
  border-color: #ef4444;
}

/* Enhanced View Toggle Buttons */
#cardView, #tableView {
  transition: all 0.3s ease;
  border-radius: 12px;
  padding: 0.75rem 1rem;
  border: 2px solid rgba(102, 126, 234, 0.2);
  background: transparent;
  color: #667eea;
}

#cardView.active, #tableView.active {
  background: var(--primary-gradient);
  color: white;
  border-color: transparent;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  transform: translateY(-2px);
}

#cardView:hover, #tableView:hover {
  border-color: #667eea;
  transform: translateY(-1px);
}

/* Enhanced Empty State */
.empty-state {
  text-align: center;
  padding: 4rem 2rem;
  color: var(--text-secondary);
}

.empty-state i {
  font-size: 5rem;
  opacity: 0.2;
  margin-bottom: 2rem;
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.empty-state h4 {
  color: var(--text-primary);
  margin-bottom: 1rem;
  font-weight: 700;
}

.empty-state p {
  font-size: 1.1rem;
  margin-bottom: 2rem;
}

/* Enhanced Form Controls */
.form-select, .form-control {
  border-radius: 12px;
  border: 2px solid rgba(102, 126, 234, 0.2);
  padding: 0.75rem 1rem;
  transition: all 0.3s ease;
  background: white;
}

.form-select:focus, .form-control:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
}

/* Customer Search Styles */
.customer-search-container {
  position: relative;
}

.customer-search-input {
  padding-right: 2.5rem !important;
  border-radius: 12px !important;
  border: 2px solid rgba(102, 126, 234, 0.2) !important;
  transition: all 0.3s ease;
  background: white;
}

.customer-search-input:focus {
  border-color: #667eea !important;
  box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25) !important;
}

.customer-search-container .search-icon {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: #667eea;
  pointer-events: none;
  z-index: 10;
}

.customer-suggestions {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 400px;
  width: max-content;
  max-width: 500px;
  background: white;
  border: 1px solid rgba(102, 126, 234, 0.2);
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  max-height: 450px;
  overflow-y: auto;
  margin-top: 0.5rem;
}

.customer-suggestion-item {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid rgba(102, 126, 234, 0.05);
  cursor: pointer;
  transition: all 0.3s ease;
}

.customer-suggestion-item:hover {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
}

.customer-suggestion-item:last-child {
  border-bottom: none;
  border-radius: 0 0 12px 12px;
}

.customer-suggestion-item:first-child {
  border-radius: 12px 12px 0 0;
}

.customer-suggestion-name {
  font-weight: 600;
  color: #2d3748;
  margin-bottom: 0.25rem;
}

.customer-suggestion-phone {
  font-size: 0.875rem;
  color: #718096;
}

.customer-loading {
  position: absolute;
  top: 100%;
  left: 0;
  min-width: 400px;
  width: max-content;
  max-width: 500px;
  background: white;
  border: 1px solid rgba(102, 126, 234, 0.2);
  border-radius: 12px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  padding: 1rem 1.5rem;
  margin-top: 0.5rem;
  text-align: center;
  color: #718096;
  font-size: 0.875rem;
}

.selected-customer {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
  border: 2px solid #667eea;
  border-radius: 12px;
  padding: 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.selected-customer-info {
  flex: 1;
}

.selected-customer-name {
  font-weight: 600;
  color: #2d3748;
  margin-bottom: 0.25rem;
}

.selected-customer-phone {
  font-size: 0.875rem;
  color: #718096;
}

.clear-customer {
  border-radius: 8px !important;
  padding: 0.25rem 0.5rem !important;
}

.search-highlight {
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.2) 0%, rgba(118, 75, 162, 0.2) 100%);
  padding: 0.1rem 0.3rem;
  border-radius: 4px;
  font-weight: 600;
}

/* CSS Variables */
:root {
  --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  --warning-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
  --danger-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
  --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
  --text-primary: #2d3748;
  --text-secondary: #718096;
  --border-color: #e2e8f0;
}

/* Responsive Enhancements */
@media (max-width: 768px) {
  .page-header {
    padding: 2rem 1.5rem;
    text-align: center;
  }
  
  .stats-card {
    margin-bottom: 1.5rem;
  }
  
  .assignment-row:hover {
    transform: translateX(4px);
  }
  
  .assignment-card:hover {
    transform: translateY(-5px);
  }
  
  .btn-group {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .btn-group .btn {
    margin-right: 0;
    width: 100%;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const tableView = document.getElementById('tableView');
  const cardView = document.getElementById('cardView');
  const tableContent = document.getElementById('tableViewContent');
  const cardContent = document.getElementById('cardViewContent');
  
  // View toggle functionality
  if (tableView && cardView) {
    tableView.addEventListener('click', function() {
      tableView.classList.add('active');
      cardView.classList.remove('active');
      tableContent.classList.remove('d-none');
      cardContent.classList.add('d-none');
    });
    
    cardView.addEventListener('click', function() {
      cardView.classList.add('active');
      tableView.classList.remove('active');
      cardContent.classList.remove('d-none');
      tableContent.classList.add('d-none');
    });
  }
  
  // Enhanced filter functionality
  const form = document.getElementById('delivery-filter-form');
  const dateInput = document.getElementById('date-filter-input');
  const statusSelect = document.getElementById('status-filter-select');
  const deliveryPersonSelect = document.getElementById('delivery-person-filter-select');
  const filterToggle = document.getElementById('filterToggle');
  const filterContent = document.getElementById('filterContent');
  let autoRefreshTimeout;
  
  // Customer Search Functionality
  const customerSearchInput = document.getElementById('customer-search-input');
  const customerSuggestions = document.getElementById('customer-suggestions');
  const customerLoading = document.getElementById('customer-loading');
  const selectedCustomer = document.getElementById('selected-customer');
  const customerSelect = document.getElementById('customer-select');
  
  let customerSearchTimeout;
  let currentCustomerSearchTerm = '';
  let currentPage = 1;
  let isLoadingMore = false;
  let hasMoreData = true;
  
  // Initialize selected customer if there's a value
  if (customerSelect && customerSelect.value && customerSearchInput) {
    // Hide input and show selected customer display
    const selectedCustomerName = getSelectedCustomerName();
    if (selectedCustomerName) {
      showSelectedCustomer(customerSelect.value, selectedCustomerName, '');
    }
  }
  
  function getSelectedCustomerName() {
    // Try to get customer name from the current page data
    <% if params[:customer_id].present? %>
      <% customer = Customer.find_by(id: params[:customer_id]) %>
      <% if customer %>
        return '<%= customer.name %>';
      <% end %>
    <% end %>
    return '';
  }
  
  if (customerSearchInput) {
    // Trigger customer search as you type
    customerSearchInput.addEventListener('input', function(e) {
      clearTimeout(customerSearchTimeout);
      const query = this.value.trim();
      currentCustomerSearchTerm = query;
      
      // Reset pagination on new search
      currentPage = 1;
      hasMoreData = true;
      
      if (query.length === 0) {
        // Show all customers when input is empty
        customerSearchTimeout = setTimeout(() => {
          showCustomerLoading();
          fetchCustomerSuggestions('', true);
        }, 100);
        return;
      }
      
      // Add debouncing - wait 300ms after user stops typing
      customerSearchTimeout = setTimeout(() => {
        showCustomerLoading();
        fetchCustomerSuggestions(query, true);
      }, 300);
    });
    
    // Handle focus - show dropdown with all customers
    customerSearchInput.addEventListener('focus', function() {
      if (!customerSelect.value) {
        const query = this.value.trim();
        currentPage = 1;
        hasMoreData = true;
        showCustomerLoading();
        fetchCustomerSuggestions(query, true);
      }
    });
    
    // Handle blur (with delay to allow clicking suggestions)
    customerSearchInput.addEventListener('blur', function() {
      setTimeout(() => {
        hideCustomerSuggestions();
      }, 200);
    });
  }
  
  // Clear customer button
  document.addEventListener('click', function(e) {
    if (e.target.closest('.clear-customer')) {
      clearSelectedCustomer();
      autoRefreshFilters();
    }
  });
  
  function fetchCustomerSuggestions(query, resetList = false) {
    if (resetList) {
      currentPage = 1;
      hasMoreData = true;
    }
    
    fetch(`/assign_deliveries/search_suggestions?q=${encodeURIComponent(query)}&page=${currentPage}`)
      .then(response => response.json())
      .then(data => {
        hideCustomerLoading();
        // Filter only customer suggestions
        const customerSuggestionsList = data.suggestions.filter(s => s.type === 'customer');
        hasMoreData = data.has_more;
        
        if (resetList || currentPage === 1) {
          displayCustomerSuggestions(customerSuggestionsList);
        } else {
          appendCustomerSuggestions(customerSuggestionsList);
        }
        
        isLoadingMore = false;
      })
      .catch(error => {
        console.error('Customer search error:', error);
        hideCustomerLoading();
        isLoadingMore = false;
      });
  }
  
  function displayCustomerSuggestions(suggestions) {
    if (suggestions.length === 0) {
      customerSuggestions.innerHTML = '<div class="customer-suggestion-item">No customers found</div>';
      customerSuggestions.style.display = 'block';
      return;
    }
    
    const html = suggestions.map(suggestion => {
      const highlightedName = highlightSearchTerm(suggestion.label, currentCustomerSearchTerm);
      const phone = suggestion.phone || '';
      
      return `
        <div class="customer-suggestion-item" data-customer-id="${suggestion.id}" data-customer-name="${suggestion.label}" data-customer-phone="${phone}">
          <div class="customer-suggestion-name">${highlightedName}</div>
          ${phone ? `<div class="customer-suggestion-phone"><i class="fas fa-phone me-1"></i>${phone}</div>` : ''}
        </div>
      `;
    }).join('');
    
    customerSuggestions.innerHTML = html;
    if (hasMoreData) {
      customerSuggestions.innerHTML += '<div class="load-more-indicator" style="padding: 0.5rem; text-align: center; color: #666; font-size: 0.85rem;">Scroll for more...</div>';
    }
    customerSuggestions.style.display = 'block';
    
    attachSuggestionEventListeners();
    attachScrollListener();
  }
  
  function appendCustomerSuggestions(suggestions) {
    if (suggestions.length === 0) return;
    
    // Remove the load more indicator if it exists
    const loadMoreIndicator = customerSuggestions.querySelector('.load-more-indicator');
    if (loadMoreIndicator) {
      loadMoreIndicator.remove();
    }
    
    const html = suggestions.map(suggestion => {
      const highlightedName = highlightSearchTerm(suggestion.label, currentCustomerSearchTerm);
      const phone = suggestion.phone || '';
      
      return `
        <div class="customer-suggestion-item" data-customer-id="${suggestion.id}" data-customer-name="${suggestion.label}" data-customer-phone="${phone}">
          <div class="customer-suggestion-name">${highlightedName}</div>
          ${phone ? `<div class="customer-suggestion-phone"><i class="fas fa-phone me-1"></i>${phone}</div>` : ''}
        </div>
      `;
    }).join('');
    
    customerSuggestions.insertAdjacentHTML('beforeend', html);
    
    if (hasMoreData) {
      customerSuggestions.insertAdjacentHTML('beforeend', '<div class="load-more-indicator" style="padding: 0.5rem; text-align: center; color: #666; font-size: 0.85rem;">Scroll for more...</div>');
    }
    
    attachSuggestionEventListeners();
  }
  
  function attachSuggestionEventListeners() {
    // Add click handlers to new items only
    document.querySelectorAll('.customer-suggestion-item:not([data-listeners-attached])').forEach(item => {
      if (item.dataset.customerId) {
        item.addEventListener('click', function() {
          selectCustomer(
            this.dataset.customerId,
            this.dataset.customerName,
            this.dataset.customerPhone
          );
          autoRefreshFilters();
        });
        
        item.addEventListener('mouseenter', function() {
          document.querySelectorAll('.customer-suggestion-item.active').forEach(active => {
            active.classList.remove('active');
          });
          this.classList.add('active');
        });
        
        item.setAttribute('data-listeners-attached', 'true');
      }
    });
  }
  
  function attachScrollListener() {
    customerSuggestions.removeEventListener('scroll', handleScroll);
    customerSuggestions.addEventListener('scroll', handleScroll);
  }
  
  function handleScroll() {
    if (!hasMoreData || isLoadingMore) return;
    
    const scrollTop = customerSuggestions.scrollTop;
    const scrollHeight = customerSuggestions.scrollHeight;
    const clientHeight = customerSuggestions.clientHeight;
    
    // Load more when user scrolls to within 50px of the bottom
    if (scrollTop + clientHeight >= scrollHeight - 50) {
      isLoadingMore = true;
      currentPage++;
      
      // Show loading indicator
      const loadMoreIndicator = customerSuggestions.querySelector('.load-more-indicator');
      if (loadMoreIndicator) {
        loadMoreIndicator.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Loading more...';
      }
      
      fetchCustomerSuggestions(currentCustomerSearchTerm, false);
    }
  }
  
  function selectCustomer(id, name, phone) {
    customerSelect.value = id;
    showSelectedCustomer(id, name, phone);
    hideCustomerSuggestions();
  }
  
  function showSelectedCustomer(id, name, phone) {
    customerSearchInput.style.display = 'none';
    selectedCustomer.style.display = 'flex';
    
    selectedCustomer.querySelector('.selected-customer-name').textContent = name;
    selectedCustomer.querySelector('.selected-customer-phone').textContent = phone ? phone : 'No phone number';
  }
  
  function clearSelectedCustomer() {
    customerSelect.value = '';
    customerSearchInput.value = '';
    customerSearchInput.style.display = 'block';
    selectedCustomer.style.display = 'none';
    hideCustomerSuggestions();
  }
  
  function highlightSearchTerm(text, term) {
    if (!term) return text;
    
    const regex = new RegExp(`(${term})`, 'gi');
    return text.replace(regex, '<span class="search-highlight">$1</span>');
  }
  
  function showCustomerLoading() {
    customerLoading.style.display = 'block';
    customerSuggestions.style.display = 'none';
  }
  
  function hideCustomerLoading() {
    customerLoading.style.display = 'none';
  }
  
  function hideCustomerSuggestions() {
    customerSuggestions.style.display = 'none';
    customerLoading.style.display = 'none';
  }
  
  // Enhanced filter behavior with date persistence
  function autoRefreshFilters() {
    clearTimeout(autoRefreshTimeout);
    autoRefreshTimeout = setTimeout(() => {
      // Always preserve current date or default to today if empty
      let currentDate = dateInput ? dateInput.value : null;
      if (!currentDate || currentDate === '') {
        const today = new Date();
        currentDate = today.toISOString().split('T')[0];
        if (dateInput) dateInput.value = currentDate;
      }
      
      // Create URL with current form values
      const formData = new FormData(form);
      
      // Force date preservation
      formData.set('date', currentDate);
      
      // Convert FormData to URLSearchParams for URL construction
      const params = new URLSearchParams();
      for (let [key, value] of formData.entries()) {
        if (value && value !== '' && value !== 'undefined') {
          params.append(key, value);
        }
      }
      
      // Navigate to the URL with preserved parameters
      window.location.href = form.action + '?' + params.toString();
    }, 300); // Reduced delay for better UX
  }
  
  // Initialize date field with today's date if empty
  if (dateInput && (!dateInput.value || dateInput.value === '')) {
    const today = new Date();
    dateInput.value = today.toISOString().split('T')[0];
  }
  
  // Filter toggle functionality
  if (filterToggle && filterContent) {
    filterToggle.addEventListener('click', function() {
      const isExpanded = filterContent.style.display !== 'none';
      filterContent.style.display = isExpanded ? 'none' : 'block';
      const icon = filterToggle.querySelector('i');
      icon.className = isExpanded ? 'fas fa-chevron-down' : 'fas fa-chevron-up';
    });
  }
  
  // Enhanced event listeners for auto-refresh with date persistence
  if (dateInput) {
    dateInput.addEventListener('change', autoRefreshFilters);
  }
  
  if (statusSelect) {
    statusSelect.addEventListener('change', function() {
      // Ensure date is preserved when status changes
      if (dateInput && (!dateInput.value || dateInput.value === '')) {
        const today = new Date();
        dateInput.value = today.toISOString().split('T')[0];
      }
      autoRefreshFilters();
    });
  }

  if (deliveryPersonSelect) {
    deliveryPersonSelect.addEventListener('change', function() {
      // Ensure date is preserved when delivery person changes
      if (dateInput && (!dateInput.value || dateInput.value === '')) {
        const today = new Date();
        dateInput.value = today.toISOString().split('T')[0];
      }
      autoRefreshFilters();
    });
  }
});
</script>

<style>
/* Enhanced Stats Cards - Compact Version */
.stats-card {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 16px;
  padding: 1.5rem;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.06);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(102, 126, 234, 0.1);
}

.stats-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: var(--primary-gradient);
}

.stats-card::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
  border-radius: 0 0 0 60px;
}

.stats-card:hover {
  box-shadow: 0 20px 60px rgba(102, 126, 234, 0.15);
  transform: translateY(-8px) scale(1.02);
}

.stats-card .stats-icon {
  position: absolute;
  top: 1.25rem;
  right: 1.25rem;
  width: 40px;
  height: 40px;
  background: var(--primary-gradient);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 18px;
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.25);
  z-index: 2;
}

.stats-card .stats-number {
  font-size: 2rem;
  font-weight: 800;
  background: var(--primary-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  line-height: 1;
  margin-bottom: 0.4rem;
  position: relative;
  z-index: 2;
}

.stats-card .stats-label {
  color: var(--text-secondary);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.8rem;
  position: relative;
  z-index: 2;
}

.stats-card-success::before {
  background: var(--success-gradient);
}

.stats-card-warning::before {
  background: var(--warning-gradient);
}

.stats-card-info::before {
  background: var(--dark-gradient);
}

.stats-card-success .stats-icon {
  background: var(--success-gradient);
}

.stats-card-warning .stats-icon {
  background: var(--warning-gradient);
}

.stats-card-info .stats-icon {
  background: var(--dark-gradient);
}

/* Page Header Styling */
.page-header {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-radius: 20px;
  padding: 2.5rem;
  margin-bottom: 2rem;
  box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
  position: relative;
  overflow: hidden;
}

.page-header::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  animation: rotate 20s linear infinite;
}

.page-header h1 {
  color: white !important;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 2;
}

.page-header p {
  color: rgba(255, 255, 255, 0.9) !important;
  position: relative;
  z-index: 2;
}

.page-header .btn {
  position: relative;
  z-index: 2;
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.15) !important;
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.page-header .btn:hover {
  background: rgba(255, 255, 255, 0.25) !important;
  transform: translateY(-2px);
}

.page-header .badge {
  position: relative;
  z-index: 2;
}

/* Compact filter section styling */
.row.g-2 {
  --bs-gutter-x: 0.5rem;
  --bs-gutter-y: 0.5rem;
}

/* Compact form controls */
.form-select-sm, .form-control-sm {
  border-radius: 8px !important;
  border: 1px solid rgba(102, 126, 234, 0.3) !important;
  font-size: 0.875rem;
}

.form-select-sm:focus, .form-control-sm:focus {
  border-color: #667eea !important;
  box-shadow: 0 0 0 0.15rem rgba(102, 126, 234, 0.2) !important;
}

/* Ultra Compact Filter Container */
.compact-filter-container {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  border: 1px solid rgba(102, 126, 234, 0.1);
  padding: 1rem 1.5rem;
  transition: all 0.3s ease;
}

.compact-filter-container:hover {
  box-shadow: 0 8px 30px rgba(102, 126, 234, 0.12);
  transform: translateY(-2px);
}

.compact-filter-form {
  margin: 0;
}

.filter-row {
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.filter-item {
  flex: 1;
  min-width: 150px;
}

.filter-actions {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  flex-shrink: 0;
}

.compact-input {
  border-radius: 10px !important;
  border: 2px solid rgba(102, 126, 234, 0.2) !important;
  padding: 0.6rem 1rem !important;
  font-size: 0.875rem !important;
  font-weight: 500;
  transition: all 0.3s ease;
  background: white;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.compact-input:focus {
  border-color: #667eea !important;
  box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.2) !important;
  transform: translateY(-1px);
}

.compact-badge {
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-weight: 600;
  font-size: 0.8rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  transition: all 0.3s ease;
}

.compact-badge:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
}

.clear-btn {
  border-radius: 50% !important;
  width: 36px !important;
  height: 36px !important;
  padding: 0 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  border: 2px solid rgba(239, 68, 68, 0.3) !important;
  color: #ef4444 !important;
  background: white !important;
  transition: all 0.3s ease;
}

.clear-btn:hover {
  background: #ef4444 !important;
  color: white !important;
  border-color: #ef4444 !important;
  transform: scale(1.1);
}

/* Compact Action Bar */
.compact-action-bar {
  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  border: 1px solid rgba(102, 126, 234, 0.1);
  padding: 1rem 1.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  flex-wrap: wrap;
  transition: all 0.3s ease;
}

.compact-action-bar:hover {
  box-shadow: 0 8px 30px rgba(102, 126, 234, 0.12);
  transform: translateY(-2px);
}

.action-left {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex: 1;
}

.action-center {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.action-right {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-shrink: 0;
}

/* Enhanced button styling for compact layout */
.compact-action-bar .btn {
  border-radius: 10px;
  font-weight: 500;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.compact-action-bar .btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
}

.compact-action-bar .btn-outline-success {
  border: 2px solid #10b981;
  color: #10b981;
  background: white;
}

.compact-action-bar .btn-outline-success:hover {
  background: #10b981;
  color: white;
  border-color: #10b981;
}

.compact-action-bar .btn-success {
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  border: none;
  color: white;
}

.compact-action-bar .btn-success:hover {
  background: linear-gradient(135deg, #059669 0%, #047857 100%);
}

.compact-action-bar .btn-outline-primary {
  border: 2px solid #667eea;
  color: #667eea;
  background: white;
}

.compact-action-bar .btn-outline-primary:hover {
  background: #667eea;
  color: white;
  border-color: #667eea;
}

.compact-action-bar .btn-outline-secondary {
  border: 2px solid #6b7280;
  color: #6b7280;
  background: white;
}

.compact-action-bar .btn-outline-secondary:hover {
  background: #6b7280;
  color: white;
  border-color: #6b7280;
}

.compact-action-bar .btn-outline-secondary.active {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-color: transparent;
  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
}

/* Compact card styling */
.card.mb-3 {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
  border: 1px solid rgba(102, 126, 234, 0.1);
}

/* Badge improvements for compact layout */
.badge {
  font-size: 0.75rem;
  padding: 0.35rem 0.75rem;
}

/* CSS Variables for consistent theming */
:root {
  --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  --warning-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
  --danger-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
  --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
  --text-primary: #2d3748;
  --text-secondary: #718096;
  --border-color: #e2e8f0;
  --bg-light: #f8fafc;
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Responsive Design for Compact Layout */
@media (max-width: 768px) {
  .filter-row {
    flex-direction: column;
    align-items: stretch;
    gap: 0.75rem;
  }

  .filter-item {
    min-width: 100%;
  }

  .filter-actions {
    justify-content: space-between;
    margin-top: 0.5rem;
  }

  .compact-action-bar {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
    padding: 1rem;
  }

  .action-left,
  .action-center,
  .action-right {
    justify-content: center;
    flex: none;
  }

  .action-left {
    order: 2;
  }

  .action-center {
    order: 1;
  }

  .action-right {
    order: 3;
  }

  .compact-input {
    padding: 0.7rem 1rem !important;
    font-size: 16px !important; /* Prevents zoom on iOS */
  }

  .compact-badge {
    font-size: 0.75rem;
    padding: 0.4rem 0.8rem;
  }

  .clear-btn {
    width: 40px !important;
    height: 40px !important;
  }
}

@media (max-width: 576px) {
  .compact-filter-container,
  .compact-action-bar {
    margin-left: -0.5rem;
    margin-right: -0.5rem;
    border-radius: 12px;
  }

  .filter-actions {
    flex-direction: column;
    gap: 0.5rem;
    align-items: center;
  }

  .compact-action-bar .btn {
    font-size: 0.8rem;
    padding: 0.5rem 0.75rem;
  }
}
</style>

    </div>
  </div>
</div>