<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="card">
        <div class="card-header">
          <h4 class="mb-0">Add New Purchase Product</h4>
        </div>
        <div class="card-body">
          <%= form_with model: @purchase_product, local: true, class: 'needs-validation', novalidate: true do |form| %>
            <% if @purchase_product.errors.any? %>
              <div class="alert alert-danger">
                <h6 class="alert-heading">Please fix the following errors:</h6>
                <ul class="mb-0">
                  <% @purchase_product.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>
            
            <div class="row">
              <div class="col-md-6 mb-3">
                <%= form.label :name, 'Product Name *', class: 'form-label' %>
                <%= form.text_field :name, class: 'form-control', required: true, 
                                    placeholder: 'Enter product name' %>
                <div class="invalid-feedback">
                  Please provide a product name.
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <%= form.label :category, class: 'form-label' %>
                <%= form.text_field :category, class: 'form-control', 
                                    placeholder: 'e.g., Electronics, Clothing' %>
              </div>
            </div>
            
            <div class="row">
              <div class="col-md-6 mb-3">
                <%= form.label :purchase_price, 'Purchase Price *', class: 'form-label' %>
                <div class="input-group">
                  <span class="input-group-text">₹</span>
                  <%= form.number_field :purchase_price, step: 0.01, min: 0, class: 'form-control', 
                                        required: true, placeholder: '0.00' %>
                  <div class="invalid-feedback">
                    Please provide a valid purchase price.
                  </div>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <%= form.label :sales_price, 'Sales Price *', class: 'form-label' %>
                <div class="input-group">
                  <span class="input-group-text">₹</span>
                  <%= form.number_field :sales_price, step: 0.01, min: 0, class: 'form-control', 
                                        required: true, placeholder: '0.00', 
                                        onchange: 'calculateProfitMargin()' %>
                  <div class="invalid-feedback">
                    Please provide a valid sales price.
                  </div>
                </div>
              </div>
            </div>
            
            <div class="row">
              <div class="col-md-4 mb-3">
                <%= form.label :measuring_unit, class: 'form-label' %>
                <%= form.select :measuring_unit, [
                                  ['Pieces', 'PCS'], 
                                  ['Kilograms', 'KG'], 
                                  ['Liters', 'LTR'], 
                                  ['Meters', 'MTR'],
                                  ['Grams', 'GM'],
                                  ['Boxes', 'BOX'],
                                  ['Dozens', 'DOZ']
                                ], { selected: 'PCS' }, { class: 'form-select' } %>
              </div>
              <div class="col-md-4 mb-3">
                <%= form.label :opening_stock, class: 'form-label' %>
                <%= form.number_field :opening_stock, class: 'form-control', min: 0, 
                                      value: 0, placeholder: '0' %>
              </div>
              <div class="col-md-4 mb-3">
                <%= form.label :current_stock, class: 'form-label' %>
                <%= form.number_field :current_stock, class: 'form-control', min: 0, 
                                      value: 0, placeholder: '0' %>
              </div>
            </div>
            
            <div class="mb-3">
              <%= form.label :description, class: 'form-label' %>
              <%= form.text_area :description, rows: 3, class: 'form-control', 
                                 placeholder: 'Product description (optional)' %>
            </div>
            
            <div class="mb-3 form-check">
              <%= form.check_box :enable_serialization, class: 'form-check-input' %>
              <%= form.label :enable_serialization, 'Enable Serial Number Tracking', class: 'form-check-label' %>
              <small class="form-text text-muted d-block">
                Check this if you want to track individual items by serial numbers
              </small>
            </div>
            
            <!-- Profit Margin Display -->
            <div class="mb-3">
              <div class="alert alert-info">
                <strong>Profit Margin:</strong> <span id="profit-margin-display">0%</span>
                <br><small>This will be calculated automatically based on purchase and sales price</small>
              </div>
            </div>
            
            <div class="d-flex justify-content-between">
              <%= link_to 'Cancel', purchase_products_path, class: 'btn btn-secondary' %>
              <%= form.submit 'Create Product', class: 'btn btn-success' %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function calculateProfitMargin() {
  const purchasePrice = parseFloat(document.querySelector('[name="purchase_product[purchase_price]"]').value) || 0;
  const salesPrice = parseFloat(document.querySelector('[name="purchase_product[sales_price]"]').value) || 0;
  
  let profitMargin = 0;
  if (purchasePrice > 0) {
    profitMargin = ((salesPrice - purchasePrice) / purchasePrice * 100).toFixed(2);
  }
  
  const display = document.getElementById('profit-margin-display');
  display.textContent = profitMargin + '%';
  display.className = profitMargin >= 0 ? 'text-success' : 'text-danger';
}

// Calculate profit margin when purchase price changes too
document.querySelector('[name="purchase_product[purchase_price]"]').addEventListener('change', calculateProfitMargin);

// Bootstrap form validation
(function() {
  'use strict';
  window.addEventListener('load', function() {
    var forms = document.getElementsByClassName('needs-validation');
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script> 